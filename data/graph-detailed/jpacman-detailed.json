{"elements":{"nodes":[{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream).source","properties":{"simpleName":"source","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square).square","properties":{"simpleName":"square","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.getHeight()","properties":{"sourceText":"@java.lang.Override\r\npublic int getHeight() {\r\n    return image.getHeight(null);\r\n}","docComment":"","visibility":"public","simpleName":"getHeight()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculatorLoader.getCalculatorClassName()","properties":{"sourceText":"private java.lang.String getCalculatorClassName() throws java.io.IOException {\r\n    java.util.Properties properties = new java.util.Properties();\r\n    properties.load(getClass().getClassLoader().getResourceAsStream(\"scorecalc.properties\"));\r\n    return properties.getProperty(\"scorecalculator.name\");\r\n}","docComment":"","visibility":"private","simpleName":"getCalculatorClassName()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.makeLevel()","properties":{"sourceText":"/**\r\n * Creates a new level. By default this method will use the map parser to\r\n * parse the default board stored in the <code>board.txt<\/code> resource.\r\n *\r\n * @return A new level.\r\n */\r\npublic nl.tudelft.jpacman.level.Level makeLevel() {\r\n    try {\r\n        return getMapParser().parseMap(getLevelMap());\r\n    } catch (java.io.IOException e) {\r\n        throw new nl.tudelft.jpacman.PacmanConfigurationException(\"Unable to create level, name = \" + getLevelMap(), e);\r\n    }\r\n}","docComment":"Creates a new level. By default this method will use the map parser to\r\nparse the default board stored in the <code>board.txt<\/code> resource.\r\n\r\n@return A new level.\r\n","visibility":"public","simpleName":"makeLevel()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.getPlayers()","properties":{"sourceText":"/**\r\n *\r\n * @return An immutable list of the participants of this game.\r\n */\r\npublic abstract java.util.List<nl.tudelft.jpacman.level.Player> getPlayers();","docComment":"\r\n@return An immutable list of the participants of this game.\r\n","visibility":"public","simpleName":"getPlayers()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).graphics","properties":{"simpleName":"graphics","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).board","properties":{"simpleName":"board","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.getBoard()","properties":{"sourceText":"/**\r\n * Returns the board of this level.\r\n *\r\n * @return The board of this level.\r\n */\r\npublic nl.tudelft.jpacman.board.Board getBoard() {\r\n    return board;\r\n}","docComment":"Returns the board of this level.\r\n\r\n@return The board of this level.\r\n","visibility":"public","simpleName":"getBoard()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"@java.lang.Override\r\npublic void pacmanMoved(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.board.Direction direction) {\r\n    // no points for moving\r\n}","docComment":"","visibility":"public","simpleName":"pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider","properties":{"simpleName":"collider","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Pinky.MOVE_INTERVAL","properties":{"sourceText":"/**\r\n * The base movement interval.\r\n */\r\nprivate static final int MOVE_INTERVAL = 200;","visibility":"private","simpleName":"MOVE_INTERVAL","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int).frames","properties":{"simpleName":"frames","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List).text","properties":{"simpleName":"text","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.keyTyped(java.awt.event.KeyEvent)","properties":{"sourceText":"@java.lang.Override\r\npublic void keyTyped(java.awt.event.KeyEvent event) {\r\n    // do nothing\r\n}","docComment":"","visibility":"public","simpleName":"keyTyped(java.awt.event.KeyEvent)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String)","properties":{"sourceText":"/**\r\n * Loads a sprite from a resource on the class path.\r\n *\r\n * @param resource\r\n * \t\tThe resource path.\r\n * @return A new sprite for the resource.\r\n * @throws IOException\r\n * \t\tWhen the resource could not be loaded.\r\n */\r\n@edu.umd.cs.findbugs.annotations.SuppressFBWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\", justification = \"false positive in java 11\")\r\nprivate nl.tudelft.jpacman.sprite.Sprite loadSpriteFromResource(java.lang.String resource) throws java.io.IOException {\r\n    try (java.io.InputStream input = nl.tudelft.jpacman.sprite.SpriteStore.class.getResourceAsStream(resource)) {\r\n        if (input == null) {\r\n            throw new java.io.IOException((\"Unable to load \" + resource) + \", resource does not exist.\");\r\n        }\r\n        java.awt.image.BufferedImage image = javax.imageio.ImageIO.read(input);\r\n        return new nl.tudelft.jpacman.sprite.ImageSprite(image);\r\n    }\r\n}","docComment":"Loads a sprite from a resource on the class path.\r\n\r\n@param resource\r\n\t\tThe resource path.\r\n@return A new sprite for the resource.\r\n@throws IOException\r\n\t\tWhen the resource could not be loaded.\r\n","visibility":"private","simpleName":"loadSpriteFromResource(java.lang.String)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.SPRITE_SIZE","properties":{"sourceText":"/**\r\n * The image size in pixels.\r\n */\r\nprivate static final int SPRITE_SIZE = 16;","visibility":"private","simpleName":"SPRITE_SIZE","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStartButton(nl.tudelft.jpacman.game.Game)","properties":{"sourceText":"/**\r\n * Adds a button with the caption {@value #START_CAPTION} that starts the\r\n * game.\r\n *\r\n * @param game\r\n * \t\tThe game to start.\r\n */\r\nprivate void addStartButton(final nl.tudelft.jpacman.game.Game game) {\r\n    assert game != null;\r\n    buttons.put(nl.tudelft.jpacman.ui.PacManUiBuilder.START_CAPTION, game::start);\r\n}","docComment":"Adds a button with the caption {@value #START_CAPTION} that starts the\r\ngame.\r\n\r\n@param game\r\n\t\tThe game to start.\r\n","visibility":"private","simpleName":"addStartButton(nl.tudelft.jpacman.game.Game)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.pointCalculator","properties":{"sourceText":"private nl.tudelft.jpacman.points.PointCalculator pointCalculator;","visibility":"private","simpleName":"pointCalculator","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.pointCalculator","properties":{"sourceText":"/**\r\n * The algorithm used to calculate the points that\r\n * they player gets whenever some action happens.\r\n */\r\nprivate nl.tudelft.jpacman.points.PointCalculator pointCalculator;","visibility":"private","simpleName":"pointCalculator","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory.getPlayerFactory()","properties":{"sourceText":"/**\r\n * Returns the player factory associated with this game factory.\r\n *\r\n * @return The player factory associated with this game factory.\r\n */\r\nprotected nl.tudelft.jpacman.level.PlayerFactory getPlayerFactory() {\r\n    return playerFactory;\r\n}","docComment":"Returns the player factory associated with this game factory.\r\n\r\n@return The player factory associated with this game factory.\r\n","visibility":"protected","simpleName":"getPlayerFactory()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List)","properties":{"sourceText":"/**\r\n * Parses the list of strings into a 2-dimensional character array and\r\n * passes it on to {@link #parseMap(char[][])}.\r\n *\r\n * @param text\r\n * \t\tThe plain text, with every entry in the list being a equally\r\n * \t\tsized row of squares on the board and the first element being\r\n * \t\tthe top row.\r\n * @return The level as represented by the text.\r\n * @throws PacmanConfigurationException\r\n * \t\tIf text lines are not properly formatted.\r\n */\r\npublic nl.tudelft.jpacman.level.Level parseMap(java.util.List<java.lang.String> text) {\r\n    checkMapFormat(text);\r\n    int height = text.size();\r\n    int width = text.get(0).length();\r\n    char[][] map = new char[width][height];\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            map[x][y] = text.get(y).charAt(x);\r\n        }\r\n    }\r\n    return parseMap(map);\r\n}","docComment":"Parses the list of strings into a 2-dimensional character array and\r\npasses it on to {@link #parseMap(char[][])}.\r\n\r\n@param text\r\n\t\tThe plain text, with every entry in the list being a equally\r\n\t\tsized row of squares on the board and the first element being\r\n\t\tthe top row.\r\n@return The level as represented by the text.\r\n@throws PacmanConfigurationException\r\n\t\tIf text lines are not properly formatted.\r\n","visibility":"public","simpleName":"parseMap(java.util.List)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerFactory.sprites","properties":{"sourceText":"/**\r\n * The sprite store containing the Pac-Man sprites.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.PacManSprites sprites;","visibility":"private","simpleName":"sprites","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).spriteStore","properties":{"simpleName":"spriteStore","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites","properties":{"docComment":"Sprite Store containing the classic Pac-Man sprites.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"PacManSprites","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor).color","properties":{"simpleName":"color","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).map","properties":{"simpleName":"map","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"char","properties":{"simpleName":"char","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][])","properties":{"sourceText":"/**\r\n * Creates a new board.\r\n *\r\n * @param grid\r\n * \t\tThe grid of squares with grid[x][y] being the square at column\r\n * \t\tx, row y.\r\n */\r\n@java.lang.SuppressWarnings(\"PMD.ArrayIsStoredDirectly\")\r\nBoard(nl.tudelft.jpacman.board.Square[][] grid) {\r\n    assert grid != null;\r\n    this.board = grid;\r\n    assert invariant() : \"Initial grid cannot contain null squares\";\r\n}","docComment":"Creates a new board.\r\n\r\n@param grid\r\n\t\tThe grid of squares with grid[x][y] being the square at column\r\n\t\tx, row y.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][])","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createBlinky()","properties":{"sourceText":"/**\r\n * Creates a new Blinky / Shadow, the red Ghost.\r\n *\r\n * @see Blinky\r\n * @return A new Blinky.\r\n */\r\npublic nl.tudelft.jpacman.npc.Ghost createBlinky() {\r\n    return new nl.tudelft.jpacman.npc.ghost.Blinky(sprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor.RED));\r\n}","docComment":"Creates a new Blinky / Shadow, the red Ghost.\r\n\r\n@see Blinky\r\n@return A new Blinky.\r\n","visibility":"public","simpleName":"createBlinky()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost","properties":{"simpleName":"ghost","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet.getValue()","properties":{"sourceText":"/**\r\n * Returns the point value of this pellet.\r\n *\r\n * @return The point value of this pellet.\r\n */\r\npublic int getValue() {\r\n    return value;\r\n}","docComment":"Returns the point value of this pellet.\r\n\r\n@return The point value of this pellet.\r\n","visibility":"public","simpleName":"getValue()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collider","properties":{"simpleName":"collider","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$NpcMoveTask.npc","properties":{"sourceText":"/**\r\n * The NPC to move.\r\n */\r\nprivate final nl.tudelft.jpacman.npc.Ghost npc;","visibility":"private","simpleName":"npc","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Pinky.SQUARES_AHEAD","properties":{"sourceText":"private static final int SQUARES_AHEAD = 4;","visibility":"private","simpleName":"SQUARES_AHEAD","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite split(int x, int y, int width, int height) {\r\n    if (withinImage(x, y) && withinImage((x + width) - 1, (y + height) - 1)) {\r\n        java.awt.image.BufferedImage newImage = newImage(width, height);\r\n        newImage.createGraphics().drawImage(image, 0, 0, width, height, x, y, x + width, y + height, null);\r\n        return new nl.tudelft.jpacman.sprite.ImageSprite(newImage);\r\n    }\r\n    return new nl.tudelft.jpacman.sprite.EmptySprite();\r\n}","docComment":"","visibility":"public","simpleName":"split(int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","properties":{"simpleName":"handler","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).startPositions","properties":{"simpleName":"startPositions","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.direction","properties":{"sourceText":"/**\r\n * The direction for this node, which is <code>null<\/code> for the root\r\n * node.\r\n */\r\nprivate final nl.tudelft.jpacman.board.Direction direction;","visibility":"private","simpleName":"direction","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List)","properties":{"sourceText":"/**\r\n * Check the correctness of the map lines in the text.\r\n *\r\n * @param text\r\n * \t\tMap to be checked\r\n * @throws PacmanConfigurationException\r\n * \t\tif map is not OK.\r\n */\r\nprivate void checkMapFormat(java.util.List<java.lang.String> text) {\r\n    if (text == null) {\r\n        throw new nl.tudelft.jpacman.PacmanConfigurationException(\"Input text cannot be null.\");\r\n    }\r\n    if (text.isEmpty()) {\r\n        throw new nl.tudelft.jpacman.PacmanConfigurationException(\"Input text must consist of at least 1 row.\");\r\n    }\r\n    int width = text.get(0).length();\r\n    if (width == 0) {\r\n        throw new nl.tudelft.jpacman.PacmanConfigurationException(\"Input text lines cannot be empty.\");\r\n    }\r\n    for (java.lang.String line : text) {\r\n        if (line.length() != width) {\r\n            throw new nl.tudelft.jpacman.PacmanConfigurationException(\"Input text lines are not of equal width.\");\r\n        }\r\n    }\r\n}","docComment":"Check the correctness of the map lines in the text.\r\n\r\n@param text\r\n\t\tMap to be checked\r\n@throws PacmanConfigurationException\r\n\t\tif map is not OK.\r\n","visibility":"private","simpleName":"checkMapFormat(java.util.List)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.getHeight()","properties":{"sourceText":"/**\r\n * Returns the number of rows.\r\n *\r\n * @return The height of this board.\r\n */\r\npublic int getHeight() {\r\n    return board[0].length;\r\n}","docComment":"Returns the number of rows.\r\n\r\n@return The height of this board.\r\n","visibility":"public","simpleName":"getHeight()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).frames","properties":{"simpleName":"frames","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable)","properties":{"sourceText":"/**\r\n * A configuration exception with a root cause and additional explanation.\r\n *\r\n * @param message\r\n * \t\tThe explanation.\r\n * @param cause\r\n * \t\tThe root cause.\r\n */\r\npublic PacmanConfigurationException(java.lang.String message, java.lang.Throwable cause) {\r\n    super(message, cause);\r\n}","docComment":"A configuration exception with a root cause and additional explanation.\r\n\r\n@param message\r\n\t\tThe explanation.\r\n@param cause\r\n\t\tThe root cause.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)","properties":{"sourceText":"/**\r\n * Creates a new Pac-Man UI with the set keys and buttons.\r\n *\r\n * @param game\r\n * \t\tThe game to build the UI for.\r\n * @return A new Pac-Man UI with the set keys and buttons.\r\n */\r\npublic nl.tudelft.jpacman.ui.PacManUI build(final nl.tudelft.jpacman.game.Game game) {\r\n    assert game != null;\r\n    if (defaultButtons) {\r\n        addStartButton(game);\r\n        addStopButton(game);\r\n    }\r\n    return new nl.tudelft.jpacman.ui.PacManUI(game, buttons, keyMappings, scoreFormatter);\r\n}","docComment":"Creates a new Pac-Man UI with the set keys and buttons.\r\n\r\n@param game\r\n\t\tThe game to build the UI for.\r\n@return A new Pac-Man UI with the set keys and buttons.\r\n","visibility":"public","simpleName":"build(nl.tudelft.jpacman.game.Game)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)","properties":{"sourceText":"/**\r\n * Creates a new player with a score of 0 points.\r\n *\r\n * @param spriteMap\r\n * \t\tA map containing a sprite for this player for every direction.\r\n * @param deathAnimation\r\n * \t\tThe sprite to be shown when this player dies.\r\n */\r\nprotected Player(java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> spriteMap, nl.tudelft.jpacman.sprite.AnimatedSprite deathAnimation) {\r\n    this.score = 0;\r\n    this.alive = true;\r\n    this.sprites = spriteMap;\r\n    this.deathSprite = deathAnimation;\r\n    deathSprite.setAnimating(false);\r\n}","docComment":"Creates a new player with a score of 0 points.\r\n\r\n@param spriteMap\r\n\t\tA map containing a sprite for this player for every direction.\r\n@param deathAnimation\r\n\t\tThe sprite to be shown when this player dies.\r\n","visibility":"protected","simpleName":"nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)","properties":{"sourceText":"/**\r\n * Determines whether a square has an occupant of a certain type.\r\n *\r\n * @param type\r\n * \t\tThe type to search for.\r\n * @param square\r\n * \t\tThe square to search.\r\n * @param <T>\r\n * \t\tthe type of unit we searched for.\r\n * @return A unit of type T, iff such a unit occupies this square, or\r\n<code>null<\/code> of none does.\r\n */\r\n@java.lang.SuppressWarnings(\"unchecked\")\r\npublic static <T extends nl.tudelft.jpacman.board.Unit> T findUnit(java.lang.Class<T> type, nl.tudelft.jpacman.board.Square square) {\r\n    for (nl.tudelft.jpacman.board.Unit unit : square.getOccupants()) {\r\n        if (type.isInstance(unit)) {\r\n            assert unit.hasSquare();\r\n            return ((T) (unit));\r\n        }\r\n    }\r\n    return null;\r\n}","docComment":"Determines whether a square has an occupant of a certain type.\r\n\r\n@param type\r\n\t\tThe type to search for.\r\n@param square\r\n\t\tThe square to search.\r\n@param <T>\r\n\t\tthe type of unit we searched for.\r\n@return A unit of type T, iff such a unit occupies this square, or\r\n<code>null<\/code> of none does.\r\n","visibility":"public","simpleName":"findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.removeObserver(nl.tudelft.jpacman.level.Level$LevelObserver)","properties":{"sourceText":"/**\r\n * Removes an observer if it was listed.\r\n *\r\n * @param observer\r\n * \t\tThe observer to be removed.\r\n */\r\npublic void removeObserver(nl.tudelft.jpacman.level.Level.LevelObserver observer) {\r\n    observers.remove(observer);\r\n}","docComment":"Removes an observer if it was listed.\r\n\r\n@param observer\r\n\t\tThe observer to be removed.\r\n","visibility":"public","simpleName":"removeObserver(nl.tudelft.jpacman.level.Level$LevelObserver)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions","properties":{"docComment":"A simple implementation of a collision map for the JPacman player.\r\n<p>\r\nIt uses a number of instanceof checks to implement the multiple dispatch for the \r\ncollisionmap. For more realistic collision maps, this approach will not scale,\r\nand the recommended approach is to use a {@link CollisionInteractionMap}.\r\n\r\n@author Arie van Deursen, 2014\r\n","simpleName":"PlayerCollisions","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action).action","properties":{"simpleName":"action","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","properties":{"sourceText":"/**\r\n * Create a new single player game for the provided level and player.\r\n *\r\n * @param player\r\n * \t\tThe player.\r\n * @param level\r\n * \t\tThe level.\r\n * @param pointCalculator\r\n * \t\tThe way to calculate points upon collisions.\r\n */\r\nprotected SinglePlayerGame(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.level.Level level, nl.tudelft.jpacman.points.PointCalculator pointCalculator) {\r\n    super(pointCalculator);\r\n    assert player != null;\r\n    assert level != null;\r\n    this.player = player;\r\n    this.level = level;\r\n    this.level.registerPlayer(player);\r\n}","docComment":"Create a new single player game for the provided level and player.\r\n\r\n@param player\r\n\t\tThe player.\r\n@param level\r\n\t\tThe level.\r\n@param pointCalculator\r\n\t\tThe way to calculate points upon collisions.\r\n","visibility":"protected","simpleName":"nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.game","properties":{"simpleName":"game","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collider","properties":{"simpleName":"collider","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.nl.tudelft.jpacman.npc.ghost.Navigation()","properties":{"sourceText":"private Navigation() {\r\n}","docComment":"","visibility":"private","simpleName":"nl.tudelft.jpacman.npc.ghost.Navigation()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.moveLock","properties":{"sourceText":"/**\r\n * The lock that ensures moves are executed sequential.\r\n */\r\nprivate final java.lang.Object moveLock = new java.lang.Object();","visibility":"private","simpleName":"moveLock","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost).service","properties":{"simpleName":"service","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory)","properties":{"sourceText":"/**\r\n * Creates a new map parser.\r\n *\r\n * @param levelFactory\r\n * \t\tThe factory providing the NPC objects and the level.\r\n * @param boardFactory\r\n * \t\tThe factory providing the Square objects and the board.\r\n */\r\npublic MapParser(nl.tudelft.jpacman.level.LevelFactory levelFactory, nl.tudelft.jpacman.board.BoardFactory boardFactory) {\r\n    this.levelCreator = levelFactory;\r\n    this.boardCreator = boardFactory;\r\n}","docComment":"Creates a new map parser.\r\n\r\n@param levelFactory\r\n\t\tThe factory providing the NPC objects and the level.\r\n@param boardFactory\r\n\t\tThe factory providing the Square objects and the board.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Blinky.MOVE_INTERVAL","properties":{"sourceText":"/**\r\n * The base movement interval.\r\n */\r\nprivate static final int MOVE_INTERVAL = 250;","visibility":"private","simpleName":"MOVE_INTERVAL","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite).deathAnimation","properties":{"simpleName":"deathAnimation","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.level","properties":{"sourceText":"/**\r\n * The level of this game.\r\n */\r\nprivate final nl.tudelft.jpacman.level.Level level;","visibility":"private","simpleName":"level","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"/**\r\n * Links this square to a neighbour in the given direction. Note that this\r\n * is a one-way connection.\r\n *\r\n * @param neighbour\r\n * \t\tThe neighbour to link.\r\n * @param direction\r\n * \t\tThe direction the new neighbour is in, as seen from this cell.\r\n */\r\npublic void link(nl.tudelft.jpacman.board.Square neighbour, nl.tudelft.jpacman.board.Direction direction) {\r\n    neighbours.put(direction, neighbour);\r\n    assert invariant();\r\n}","docComment":"Links this square to a neighbour in the given direction. Note that this\r\nis a one-way connection.\r\n\r\n@param neighbour\r\n\t\tThe neighbour to link.\r\n@param direction\r\n\t\tThe direction the new neighbour is in, as seen from this cell.\r\n","visibility":"public","simpleName":"link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collisions","properties":{"sourceText":"private final nl.tudelft.jpacman.level.CollisionMap collisions = defaultCollisions();","visibility":"private","simpleName":"collisions","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).ghosts","properties":{"simpleName":"ghosts","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap","properties":{"docComment":"A map of possible collisions and their handlers.\r\n\r\n@author Michael de Jong\r\n@author Jeroen Roosen\r\n","simpleName":"CollisionInteractionMap","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostColor.nl.tudelft.jpacman.npc.ghost.GhostColor()","properties":{"sourceText":"GhostColor() {\r\n}","docComment":"","visibility":"private","simpleName":"nl.tudelft.jpacman.npc.ghost.GhostColor()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"byte","properties":{"simpleName":"byte","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"nl.tudelft.jpacman.points","properties":{"simpleName":"points","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider","properties":{"simpleName":"collider","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)","properties":{"sourceText":"/**\r\n * Creates a new ghost.\r\n *\r\n * @param spriteMap\r\n * \t\tThe sprites for every direction.\r\n * @param moveInterval\r\n * \t\tThe base interval of movement.\r\n * @param intervalVariation\r\n * \t\tThe variation of the interval.\r\n */\r\nprotected Ghost(java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> spriteMap, int moveInterval, int intervalVariation) {\r\n    this.sprites = spriteMap;\r\n    this.intervalVariation = intervalVariation;\r\n    this.moveInterval = moveInterval;\r\n}","docComment":"Creates a new ghost.\r\n\r\n@param spriteMap\r\n\t\tThe sprites for every direction.\r\n@param moveInterval\r\n\t\tThe base interval of movement.\r\n@param intervalVariation\r\n\t\tThe variation of the interval.\r\n","visibility":"protected","simpleName":"nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction","properties":{"docComment":"An enumeration of possible directions on a two-dimensional square grid.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Direction","kind":"enum","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Removes the unit from this square if it was present.\r\n *\r\n * @param occupant\r\n * \t\tThe unit to be removed from this square.\r\n */\r\nvoid remove(nl.tudelft.jpacman.board.Unit occupant) {\r\n    assert occupant != null;\r\n    occupants.remove(occupant);\r\n}","docComment":"Removes the unit from this square if it was present.\r\n\r\n@param occupant\r\n\t\tThe unit to be removed from this square.\r\n","visibility":"default","simpleName":"remove(nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getLevelFactory()","properties":{"sourceText":"/**\r\n *\r\n * @return A new factory using the sprites from {@link #getSpriteStore()}\r\nand the ghosts from {@link #getGhostFactory()}.\r\n */\r\nprotected nl.tudelft.jpacman.level.LevelFactory getLevelFactory() {\r\n    return new nl.tudelft.jpacman.level.LevelFactory(getSpriteStore(), getGhostFactory(), loadPointCalculator());\r\n}","docComment":"\r\n@return A new factory using the sprites from {@link #getSpriteStore()}\r\nand the ghosts from {@link #getGhostFactory()}.\r\n","visibility":"protected","simpleName":"getLevelFactory()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createPinky()","properties":{"sourceText":"/**\r\n * Creates a new Pinky / Speedy, the pink Ghost.\r\n *\r\n * @see Pinky\r\n * @return A new Pinky.\r\n */\r\npublic nl.tudelft.jpacman.npc.Ghost createPinky() {\r\n    return new nl.tudelft.jpacman.npc.ghost.Pinky(sprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor.PINK));\r\n}","docComment":"Creates a new Pinky / Speedy, the pink Ghost.\r\n\r\n@see Pinky\r\n@return A new Pinky.\r\n","visibility":"public","simpleName":"createPinky()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerFactory","properties":{"docComment":"Factory that creates Players.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"PlayerFactory","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","properties":{"sourceText":"/**\r\n * Returns a new map with animations for all directions.\r\n *\r\n * @param resource\r\n * \t\tThe resource name of the sprite.\r\n * @param frames\r\n * \t\tThe number of frames in this sprite.\r\n * @return The animated sprite facing the given direction.\r\n */\r\nprivate java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> directionSprite(java.lang.String resource, int frames) {\r\n    java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> sprite = new java.util.HashMap<>();\r\n    nl.tudelft.jpacman.sprite.Sprite baseImage = loadSprite(resource);\r\n    for (int i = 0; i < nl.tudelft.jpacman.sprite.PacManSprites.DIRECTIONS.length; i++) {\r\n        nl.tudelft.jpacman.sprite.Sprite directionSprite = baseImage.split(0, i * nl.tudelft.jpacman.sprite.PacManSprites.SPRITE_SIZE, frames * nl.tudelft.jpacman.sprite.PacManSprites.SPRITE_SIZE, nl.tudelft.jpacman.sprite.PacManSprites.SPRITE_SIZE);\r\n        nl.tudelft.jpacman.sprite.AnimatedSprite animation = createAnimatedSprite(directionSprite, frames, nl.tudelft.jpacman.sprite.PacManSprites.ANIMATION_DELAY, true);\r\n        animation.setAnimating(true);\r\n        sprite.put(nl.tudelft.jpacman.sprite.PacManSprites.DIRECTIONS[i], animation);\r\n    }\r\n    return sprite;\r\n}","docComment":"Returns a new map with animations for all directions.\r\n\r\n@param resource\r\n\t\tThe resource name of the sprite.\r\n@param frames\r\n\t\tThe number of frames in this sprite.\r\n@return The animated sprite facing the given direction.\r\n","visibility":"private","simpleName":"directionSprite(java.lang.String,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.isAlive()","properties":{"sourceText":"/**\r\n * Returns whether this player is alive or not.\r\n *\r\n * @return <code>true<\/code> iff the player is alive.\r\n */\r\npublic boolean isAlive() {\r\n    return alive;\r\n}","docComment":"Returns whether this player is alive or not.\r\n\r\n@return <code>true<\/code> iff the player is alive.\r\n","visibility":"public","simpleName":"isAlive()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory.nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites)","properties":{"sourceText":"/**\r\n * Creates a new BoardFactory that will create a board with the provided\r\n * background sprites.\r\n *\r\n * @param spriteStore\r\n * \t\tThe sprite store providing the sprites for the background.\r\n */\r\npublic BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites spriteStore) {\r\n    this.sprites = spriteStore;\r\n}","docComment":"Creates a new BoardFactory that will create a board with the provided\r\nbackground sprites.\r\n\r\n@param spriteStore\r\n\t\tThe sprite store providing the sprites for the background.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.setDirection(nl.tudelft.jpacman.board.Direction).newDirection","properties":{"simpleName":"newDirection","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension).window","properties":{"simpleName":"window","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.removeObserver(nl.tudelft.jpacman.level.Level$LevelObserver).observer","properties":{"simpleName":"observer","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost).ghost","properties":{"simpleName":"ghost","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"java.lang.String","properties":{"simpleName":"String","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.withMapFile(java.lang.String)","properties":{"sourceText":"/**\r\n * Set the name of the file containing this level's map.\r\n *\r\n * @param fileName\r\n * \t\tMap to be used.\r\n * @return Level corresponding to the given map.\r\n */\r\npublic nl.tudelft.jpacman.Launcher withMapFile(java.lang.String fileName) {\r\n    levelMap = fileName;\r\n    return this;\r\n}","docComment":"Set the name of the file containing this level's map.\r\n\r\n@param fileName\r\n\t\tMap to be used.\r\n@return Level corresponding to the given map.\r\n","visibility":"public","simpleName":"withMapFile(java.lang.String)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.Action.doAction()","properties":{"sourceText":"/**\r\n * Executes the action.\r\n */\r\nvoid doAction();","docComment":"Executes the action.\r\n","visibility":"public","simpleName":"doAction()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit).occupant","properties":{"simpleName":"occupant","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit).killer","properties":{"simpleName":"killer","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.getPacManDeathAnimation()","properties":{"sourceText":"/**\r\n *\r\n * @return The animation of a dying Pac-Man.\r\n */\r\npublic nl.tudelft.jpacman.sprite.AnimatedSprite getPacManDeathAnimation() {\r\n    java.lang.String resource = \"/sprite/dead.png\";\r\n    nl.tudelft.jpacman.sprite.Sprite baseImage = loadSprite(resource);\r\n    nl.tudelft.jpacman.sprite.AnimatedSprite animation = createAnimatedSprite(baseImage, nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_DEATH_FRAMES, nl.tudelft.jpacman.sprite.PacManSprites.ANIMATION_DELAY, false);\r\n    animation.setAnimating(false);\r\n    return animation;\r\n}","docComment":"\r\n@return The animation of a dying Pac-Man.\r\n","visibility":"public","simpleName":"getPacManDeathAnimation()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet.value","properties":{"sourceText":"/**\r\n * The point value of this pellet.\r\n */\r\nprivate final int value;","visibility":"private","simpleName":"value","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.serialVersionUID","properties":{"sourceText":"/**\r\n * Default serialisation ID.\r\n */\r\nprivate static final long serialVersionUID = 1L;","visibility":"private","simpleName":"serialVersionUID","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.INKY","properties":{"sourceText":"private static final int INKY = 1;","visibility":"private","simpleName":"INKY","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).isAnimating","properties":{"simpleName":"isAnimating","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.withinBorders(int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int)","properties":{"sourceText":"private boolean withinImage(int x, int y) {\r\n    return (((x < image.getWidth(null)) && (x >= 0)) && (y < image.getHeight(null))) && (y >= 0);\r\n}","docComment":"","visibility":"private","simpleName":"withinImage(int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost","properties":{"simpleName":"ghost","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"private void ghostColliding(nl.tudelft.jpacman.npc.Ghost ghost, nl.tudelft.jpacman.board.Unit collidedOn) {\r\n    if (collidedOn instanceof nl.tudelft.jpacman.level.Player) {\r\n        playerVersusGhost(((nl.tudelft.jpacman.level.Player) (collidedOn)), ghost);\r\n    }\r\n}","docComment":"","visibility":"private","simpleName":"ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"/**\r\n * Moves the unit into the given direction if possible and handles all\r\n * collisions.\r\n *\r\n * @param unit\r\n * \t\tThe unit to move.\r\n * @param direction\r\n * \t\tThe direction to move the unit in.\r\n */\r\npublic void move(nl.tudelft.jpacman.board.Unit unit, nl.tudelft.jpacman.board.Direction direction) {\r\n    assert unit != null;\r\n    assert direction != null;\r\n    assert unit.hasSquare();\r\n    if (!isInProgress()) {\r\n        return;\r\n    }\r\n    synchronized(moveLock) {\r\n        unit.setDirection(direction);\r\n        nl.tudelft.jpacman.board.Square location = unit.getSquare();\r\n        nl.tudelft.jpacman.board.Square destination = location.getSquareAt(direction);\r\n        if (destination.isAccessibleTo(unit)) {\r\n            java.util.List<nl.tudelft.jpacman.board.Unit> occupants = destination.getOccupants();\r\n            unit.occupy(destination);\r\n            for (nl.tudelft.jpacman.board.Unit occupant : occupants) {\r\n                collisions.collide(unit, occupant);\r\n            }\r\n        }\r\n        updateObservers();\r\n    }\r\n}","docComment":"Moves the unit into the given direction if possible and handles all\r\ncollisions.\r\n\r\n@param unit\r\n\t\tThe unit to move.\r\n@param direction\r\n\t\tThe direction to move the unit in.\r\n","visibility":"public","simpleName":"move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).graphics","properties":{"simpleName":"graphics","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.refresh()","properties":{"sourceText":"/**\r\n * Refreshes the scores of the players.\r\n */\r\nprotected void refresh() {\r\n    for (java.util.Map.Entry<nl.tudelft.jpacman.level.Player, javax.swing.JLabel> entry : scoreLabels.entrySet()) {\r\n        nl.tudelft.jpacman.level.Player player = entry.getKey();\r\n        java.lang.String score = \"\";\r\n        if (!player.isAlive()) {\r\n            score = \"You died. \";\r\n        }\r\n        score += scoreFormatter.format(player);\r\n        entry.getValue().setText(score);\r\n    }\r\n}","docComment":"Refreshes the scores of the players.\r\n","visibility":"protected","simpleName":"refresh()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board).clazz","properties":{"simpleName":"clazz","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet","properties":{"simpleName":"pellet","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculatorLoader.clazz","properties":{"sourceText":"private static java.lang.Class clazz = null;","visibility":"private","simpleName":"clazz","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.START_CAPTION","properties":{"sourceText":"/**\r\n * Caption for the default start button.\r\n */\r\nprivate static final java.lang.String START_CAPTION = \"Start\";","visibility":"private","simpleName":"START_CAPTION","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.getScore()","properties":{"sourceText":"/**\r\n * Returns the amount of points accumulated by this player.\r\n *\r\n * @return The amount of points accumulated by this player.\r\n */\r\npublic int getScore() {\r\n    return score;\r\n}","docComment":"Returns the amount of points accumulated by this player.\r\n\r\n@return The amount of points accumulated by this player.\r\n","visibility":"public","simpleName":"getScore()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.looping","properties":{"sourceText":"/**\r\n * Whether is animation should be looping or not.\r\n */\r\nprivate final boolean looping;","visibility":"private","simpleName":"looping","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Blinky.nextAiMove()","properties":{"sourceText":"/**\r\n * {@inheritDoc }\r\n *\r\n * <p>\r\n * When the ghosts are not patrolling in their home corners (Blinky:\r\n * top-right, Pinky: top-left, Inky: bottom-right, Clyde: bottom-left),\r\n * Blinky will attempt to shorten the distance between Pac-Man and himself.\r\n * If he has to choose between shortening the horizontal or vertical\r\n * distance, he will choose to shorten whichever is greatest. For example,\r\n * if Pac-Man is four grid spaces to the left, and seven grid spaces above\r\n * Blinky, he'll try to move up towards Pac-Man before he moves to the left.\r\n * <\/p>\r\n */\r\n@java.lang.Override\r\npublic java.util.Optional<nl.tudelft.jpacman.board.Direction> nextAiMove() {\r\n    assert hasSquare();\r\n    // TODO Blinky should patrol his corner every once in a while\r\n    // TODO Implement his actual behaviour instead of simply chasing.\r\n    nl.tudelft.jpacman.board.Unit nearest = nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(nl.tudelft.jpacman.level.Player.class, getSquare());\r\n    if (nearest == null) {\r\n        return java.util.Optional.empty();\r\n    }\r\n    assert nearest.hasSquare();\r\n    nl.tudelft.jpacman.board.Square target = nearest.getSquare();\r\n    java.util.List<nl.tudelft.jpacman.board.Direction> path = nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(getSquare(), target, this);\r\n    if ((path != null) && (!path.isEmpty())) {\r\n        return java.util.Optional.ofNullable(path.get(0));\r\n    }\r\n    return java.util.Optional.empty();\r\n}","docComment":"{@inheritDoc }\r\n\r\n<p>\r\nWhen the ghosts are not patrolling in their home corners (Blinky:\r\ntop-right, Pinky: top-left, Inky: bottom-right, Clyde: bottom-left),\r\nBlinky will attempt to shorten the distance between Pac-Man and himself.\r\nIf he has to choose between shortening the horizontal or vertical\r\ndistance, he will choose to shorten whichever is greatest. For example,\r\nif Pac-Man is four grid spaces to the left, and seven grid spaces above\r\nBlinky, he'll try to move up towards Pac-Man before he moves to the left.\r\n<\/p>\r\n","visibility":"public","simpleName":"nextAiMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).traveller","properties":{"simpleName":"traveller","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Collides the two units and handles the result of the collision, which may\r\n * be nothing at all.\r\n *\r\n * @param <C1>\r\n * \t\tThe collider type.\r\n * @param <C2>\r\n * \t\tThe collidee (unit that was moved into) type.\r\n * @param collider\r\n * \t\tThe unit that causes the collision by occupying a square with\r\n * \t\tanother unit already on it.\r\n * @param collidee\r\n * \t\tThe unit that is already on the square that is being invaded.\r\n */\r\n<C1 extends nl.tudelft.jpacman.board.Unit, C2 extends nl.tudelft.jpacman.board.Unit> void collide(C1 collider, C2 collidee);","docComment":"Collides the two units and handles the result of the collision, which may\r\nbe nothing at all.\r\n\r\n@param <C1>\r\n\t\tThe collider type.\r\n@param <C2>\r\n\t\tThe collidee (unit that was moved into) type.\r\n@param collider\r\n\t\tThe unit that causes the collision by occupying a square with\r\n\t\tanother unit already on it.\r\n@param collidee\r\n\t\tThe unit that is already on the square that is being invaded.\r\n","visibility":"public","simpleName":"collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite","properties":{"simpleName":"sprite","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI","properties":{"docComment":"The default JPacMan UI frame. The PacManUI consists of the following\r\nelements:\r\n\r\n<ul>\r\n<li>A score panel at the top, displaying the score of the player(s).\r\n<li>A board panel, displaying the current level, i.e. the board and all units\r\non it.\r\n<li>A button panel, containing all buttons provided upon creation.\r\n<\/ul>\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"PacManUI","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory.nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites)","properties":{"sourceText":"/**\r\n * Creates a new ghost factory.\r\n *\r\n * @param spriteStore\r\n * \t\tThe sprite provider.\r\n */\r\npublic GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites spriteStore) {\r\n    this.sprites = spriteStore;\r\n}","docComment":"Creates a new ghost factory.\r\n\r\n@param spriteStore\r\n\t\tThe sprite provider.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getParent()","properties":{"sourceText":"/**\r\n *\r\n * @return The parent node, or <code>null<\/code> if this node is a root\r\nnode.\r\n */\r\nprivate nl.tudelft.jpacman.npc.ghost.Navigation.Node getParent() {\r\n    return parent;\r\n}","docComment":"\r\n@return The parent node, or <code>null<\/code> if this node is a root\r\nnode.\r\n","visibility":"private","simpleName":"getParent()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square).start","properties":{"simpleName":"start","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.scoreFormatter","properties":{"sourceText":"/**\r\n * Way to format the score.\r\n */\r\nprivate nl.tudelft.jpacman.ui.ScorePanel.ScoreFormatter scoreFormatter = null;","visibility":"private","simpleName":"scoreFormatter","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","properties":{"sourceText":"/**\r\n * Creates a new ghost.\r\n *\r\n * @return The new ghost.\r\n */\r\nnl.tudelft.jpacman.npc.Ghost createGhost() {\r\n    ghostIndex++;\r\n    ghostIndex %= nl.tudelft.jpacman.level.LevelFactory.GHOSTS;\r\n    switch (ghostIndex) {\r\n        case nl.tudelft.jpacman.level.LevelFactory.BLINKY :\r\n            return ghostFact.createBlinky();\r\n        case nl.tudelft.jpacman.level.LevelFactory.INKY :\r\n            return ghostFact.createInky();\r\n        case nl.tudelft.jpacman.level.LevelFactory.PINKY :\r\n            return ghostFact.createPinky();\r\n        case nl.tudelft.jpacman.level.LevelFactory.CLYDE :\r\n            return ghostFact.createClyde();\r\n        default :\r\n            return new nl.tudelft.jpacman.level.LevelFactory.RandomGhost(sprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor.RED));\r\n    }\r\n}","docComment":"Creates a new ghost.\r\n\r\n@return The new ghost.\r\n","visibility":"default","simpleName":"createGhost()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.killer","properties":{"sourceText":"/**\r\n * {@link Unit} iff this player died by collision, <code>null<\/code> otherwise.\r\n */\r\nprivate nl.tudelft.jpacman.board.Unit killer;","visibility":"private","simpleName":"killer","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.scorePanel","properties":{"sourceText":"/**\r\n * The panel displaying the player scores.\r\n */\r\nprivate final nl.tudelft.jpacman.ui.ScorePanel scorePanel;","visibility":"private","simpleName":"scorePanel","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Clyde.INTERVAL_VARIATION","properties":{"sourceText":"/**\r\n * The variation in intervals, this makes the ghosts look more dynamic and\r\n * less predictable.\r\n */\r\nprivate static final int INTERVAL_VARIATION = 50;","visibility":"private","simpleName":"INTERVAL_VARIATION","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite).sprite","properties":{"simpleName":"sprite","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handler","properties":{"sourceText":"/**\r\n * The handler of this collision.\r\n */\r\nprivate final nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<C2, C1> handler;","visibility":"private","simpleName":"handler","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.INTERVAL_VARIATION","properties":{"sourceText":"/**\r\n * The variation in intervals, this makes the ghosts look more dynamic and\r\n * less predictable.\r\n */\r\nprivate static final int INTERVAL_VARIATION = 50;","visibility":"private","simpleName":"INTERVAL_VARIATION","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee","properties":{"simpleName":"collidee","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.getWidth()","properties":{"sourceText":"@java.lang.Override\r\npublic int getWidth() {\r\n    return 0;\r\n}","docComment":"","visibility":"public","simpleName":"getWidth()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)","properties":{"sourceText":"/**\r\n * Creates a new level for the board.\r\n *\r\n * @param board\r\n * \t\tThe board for the level.\r\n * @param ghosts\r\n * \t\tThe ghosts on the board.\r\n * @param startPositions\r\n * \t\tThe squares on which players start on this board.\r\n * @param collisionMap\r\n * \t\tThe collection of collisions that should be handled.\r\n */\r\npublic Level(nl.tudelft.jpacman.board.Board board, java.util.List<nl.tudelft.jpacman.npc.Ghost> ghosts, java.util.List<nl.tudelft.jpacman.board.Square> startPositions, nl.tudelft.jpacman.level.CollisionMap collisionMap) {\r\n    assert board != null;\r\n    assert ghosts != null;\r\n    assert startPositions != null;\r\n    this.board = board;\r\n    this.inProgress = false;\r\n    this.npcs = new java.util.HashMap<>();\r\n    for (nl.tudelft.jpacman.npc.Ghost ghost : ghosts) {\r\n        npcs.put(ghost, null);\r\n    }\r\n    this.startSquares = startPositions;\r\n    this.startSquareIndex = 0;\r\n    this.players = new java.util.ArrayList<>();\r\n    this.collisions = collisionMap;\r\n    this.observers = new java.util.HashSet<>();\r\n}","docComment":"Creates a new level for the board.\r\n\r\n@param board\r\n\t\tThe board for the level.\r\n@param ghosts\r\n\t\tThe ghosts on the board.\r\n@param startPositions\r\n\t\tThe squares on which players start on this board.\r\n@param collisionMap\r\n\t\tThe collection of collisions that should be handled.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.MOVE_INTERVAL","properties":{"sourceText":"/**\r\n * The base movement interval.\r\n */\r\nprivate static final int MOVE_INTERVAL = 250;","visibility":"private","simpleName":"MOVE_INTERVAL","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).mover","properties":{"simpleName":"mover","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).grid","properties":{"simpleName":"grid","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square).type","properties":{"simpleName":"type","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter","properties":{"simpleName":"scoreFormatter","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.randomMove()","properties":{"sourceText":"/**\r\n * Determines a possible move in a random direction.\r\n *\r\n * @return A direction in which the ghost can move, or <code>null<\/code> if\r\nthe ghost is shut in by inaccessible squares.\r\n */\r\nprotected nl.tudelft.jpacman.board.Direction randomMove() {\r\n    nl.tudelft.jpacman.board.Square square = getSquare();\r\n    java.util.List<nl.tudelft.jpacman.board.Direction> directions = new java.util.ArrayList<>();\r\n    for (nl.tudelft.jpacman.board.Direction direction : nl.tudelft.jpacman.board.Direction.values()) {\r\n        if (square.getSquareAt(direction).isAccessibleTo(this)) {\r\n            directions.add(direction);\r\n        }\r\n    }\r\n    if (directions.isEmpty()) {\r\n        return null;\r\n    }\r\n    int i = new java.util.Random().nextInt(directions.size());\r\n    return directions.get(i);\r\n}","docComment":"Determines a possible move in a random direction.\r\n\r\n@return A direction in which the ghost can move, or <code>null<\/code> if\r\nthe ghost is shut in by inaccessible squares.\r\n","visibility":"protected","simpleName":"randomMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game","properties":{"docComment":"A basic implementation of a Pac-Man game.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Game","kind":"abstract","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory","properties":{"docComment":"A factory that creates {@link Board} objects from 2-dimensional arrays of\r\n{@link Square}s.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"BoardFactory","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.nl.tudelft.jpacman.board.Square()","properties":{"sourceText":"/**\r\n * Creates a new, empty square.\r\n */\r\nprotected Square() {\r\n    this.occupants = new java.util.ArrayList<>();\r\n    this.neighbours = new java.util.EnumMap<>(nl.tudelft.jpacman.board.Direction.class);\r\n    assert invariant();\r\n}","docComment":"Creates a new, empty square.\r\n","visibility":"protected","simpleName":"nl.tudelft.jpacman.board.Square()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square).this","properties":{"simpleName":"this","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).ghosts","properties":{"simpleName":"ghosts","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).loop","properties":{"simpleName":"loop","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int)","properties":{"sourceText":"/**\r\n * Creates a new, empty image of the given width and height. Its\r\n * transparency will be a bitmask, so no try ARGB image.\r\n *\r\n * @param width\r\n * \t\tThe width of the new image.\r\n * @param height\r\n * \t\tThe height of the new image.\r\n * @return The new, empty image.\r\n */\r\nprivate java.awt.image.BufferedImage newImage(int width, int height) {\r\n    java.awt.GraphicsConfiguration gc = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();\r\n    return gc.createCompatibleImage(width, height, java.awt.Transparency.BITMASK);\r\n}","docComment":"Creates a new, empty image of the given width and height. Its\r\ntransparency will be a bitmask, so no try ARGB image.\r\n\r\n@param width\r\n\t\tThe width of the new image.\r\n@param height\r\n\t\tThe height of the new image.\r\n@return The new, empty image.\r\n","visibility":"private","simpleName":"newImage(int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.setAlive(boolean)","properties":{"sourceText":"/**\r\n * Sets whether this player is alive or not.\r\n *\r\n * If the player comes back alive, the {@link killer} will be reset.\r\n *\r\n * @param isAlive\r\n * \t\t<code>true<\/code> iff this player is alive.\r\n */\r\npublic void setAlive(boolean isAlive) {\r\n    if (isAlive) {\r\n        deathSprite.setAnimating(false);\r\n        this.killer = null;\r\n    }\r\n    if (!isAlive) {\r\n        deathSprite.restart();\r\n    }\r\n    this.alive = isAlive;\r\n}","docComment":"Sets whether this player is alive or not.\r\n\r\nIf the player comes back alive, the {@link killer} will be reset.\r\n\r\n@param isAlive\r\n\t\t<code>true<\/code> iff this player is alive.\r\n","visibility":"public","simpleName":"setAlive(boolean)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter","properties":{"simpleName":"scoreFormatter","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.withinBorders(int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).parent","properties":{"simpleName":"parent","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame)","properties":{"sourceText":"/**\r\n * Create a new button panel with a button for every action.\r\n *\r\n * @param buttons\r\n * \t\tThe map of caption - action for each button.\r\n * @param parent\r\n * \t\tThe parent frame, used to return window focus.\r\n */\r\nButtonPanel(final java.util.Map<java.lang.String, nl.tudelft.jpacman.ui.Action> buttons, final javax.swing.JFrame parent) {\r\n    super();\r\n    assert buttons != null;\r\n    assert parent != null;\r\n    for (final java.lang.String caption : buttons.keySet()) {\r\n        javax.swing.JButton button = new javax.swing.JButton(caption);\r\n        button.addActionListener(e -> {\r\n            buttons.get(caption).doAction();\r\n            parent.requestFocusInWindow();\r\n        });\r\n        add(button);\r\n    }\r\n}","docComment":"Create a new button panel with a button for every action.\r\n\r\n@param buttons\r\n\t\tThe map of caption - action for each button.\r\n@param parent\r\n\t\tThe parent frame, used to return window focus.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getSpriteStore()","properties":{"sourceText":"/**\r\n *\r\n * @return The default {@link PacManSprites}.\r\n */\r\nprotected nl.tudelft.jpacman.sprite.PacManSprites getSpriteStore() {\r\n    return nl.tudelft.jpacman.Launcher.SPRITE_STORE;\r\n}","docComment":"\r\n@return The default {@link PacManSprites}.\r\n","visibility":"protected","simpleName":"getSpriteStore()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder).builder","properties":{"simpleName":"builder","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics).g","properties":{"simpleName":"g","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.addPoints(int)","properties":{"sourceText":"/**\r\n * Adds points to the score of this player.\r\n *\r\n * @param points\r\n * \t\tThe amount of points to add to the points this player already\r\n * \t\thas.\r\n */\r\npublic void addPoints(int points) {\r\n    score += points;\r\n}","docComment":"Adds points to the score of this player.\r\n\r\n@param points\r\n\t\tThe amount of points to add to the points this player already\r\n\t\thas.\r\n","visibility":"public","simpleName":"addPoints(int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.keyPressed(java.awt.event.KeyEvent).event","properties":{"simpleName":"event","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.getInterval()","properties":{"sourceText":"/**\r\n * The time that should be taken between moves.\r\n *\r\n * @return The suggested delay between moves in milliseconds.\r\n */\r\npublic long getInterval() {\r\n    return this.moveInterval + new java.util.Random().nextInt(this.intervalVariation);\r\n}","docComment":"The time that should be taken between moves.\r\n\r\n@return The suggested delay between moves in milliseconds.\r\n","visibility":"public","simpleName":"getInterval()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"int","properties":{"simpleName":"int","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"double","properties":{"simpleName":"double","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.invariant()","properties":{"sourceText":"/**\r\n * Whatever happens, the squares on the board can't be null.\r\n *\r\n * @return false if any square on the board is null.\r\n */\r\nprotected final boolean invariant() {\r\n    for (nl.tudelft.jpacman.board.Square[] row : board) {\r\n        for (nl.tudelft.jpacman.board.Square square : row) {\r\n            if (square == null) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}","docComment":"Whatever happens, the squares on the board can't be null.\r\n\r\n@return false if any square on the board is null.\r\n","visibility":"protected","simpleName":"invariant()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.keyTyped(java.awt.event.KeyEvent).event","properties":{"simpleName":"event","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String).mapName","properties":{"simpleName":"mapName","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.getSprite()","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite getSprite() {\r\n    if (isAlive()) {\r\n        return sprites.get(getDirection());\r\n    }\r\n    return deathSprite;\r\n}","docComment":"","visibility":"public","simpleName":"getSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory).levelFactory","properties":{"simpleName":"levelFactory","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).frames","properties":{"simpleName":"frames","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Pinky","properties":{"docComment":"<p>\r\nAn implementation of the classic Pac-Man ghost Speedy.\r\n<\/p>\r\n<p>\r\nNickname: Pinky. Speedy gets his name for an unusual reason. Speedy appears\r\nto try to outsmart Pac-Man and crash into Pac-Man from the opposite\r\ndirection. The truth behind this is that when Speedy isn't patrolling the\r\ntop-left corner of the maze, he tries to attack Pac-Man by moving to where he\r\nis going to be (that is, a few spaces ahead of Pac-Man's current direction)\r\ninstead of right where he is, as Blinky does. It's difficult to use this to\r\nyour advantage, but it's possible. If Pinky is coming at you and you face a\r\ndifferent direction, even briefly, he may just turn away and attempt to cut\r\nyou off in the new direction while you return to your original direction. In\r\nthe original Japanese version, his name is Machibuse/Pinky.\r\n<\/p>\r\n<p>\r\n<b>AI:<\/b> When the ghosts are not patrolling their home corners, Pinky wants\r\nto go to the place that is four grid spaces ahead of Pac-Man in the direction\r\nthat Pac-Man is facing. If Pac-Man is facing down, Pinky wants to go to the\r\nlocation exactly four spaces below Pac-Man. Moving towards this place uses\r\nthe same logic that Blinky uses to find Pac-Man's exact location. Pinky is\r\naffected by a targeting bug if Pac-Man is facing up - when he moves or faces\r\nup, Pinky tries moving towards a point up, and left, four spaces.\r\n<\/p>\r\n<p>\r\n<i>Note: In the original arcade series, the ghosts' genders are unspecified\r\nand assumed to be male. In 1999, the USA division of Namco and Namco Hometech\r\ndeveloped the Pac-Man World series and declared Pinky to be female.<\/i>\r\n<\/p>\r\n<p>\r\nSource: http://strategywiki.org/wiki/Pac-Man/Getting_Started\r\n<\/p>\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Pinky","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"@java.lang.Override\r\npublic void collide(nl.tudelft.jpacman.board.Unit mover, nl.tudelft.jpacman.board.Unit collidedOn) {\r\n    if (mover instanceof nl.tudelft.jpacman.level.Player) {\r\n        playerColliding(((nl.tudelft.jpacman.level.Player) (mover)), collidedOn);\r\n    } else if (mover instanceof nl.tudelft.jpacman.npc.Ghost) {\r\n        ghostColliding(((nl.tudelft.jpacman.npc.Ghost) (mover)), collidedOn);\r\n    } else if (mover instanceof nl.tudelft.jpacman.level.Pellet) {\r\n        pelletColliding(((nl.tudelft.jpacman.level.Pellet) (mover)), collidedOn);\r\n    }\r\n}","docComment":"","visibility":"public","simpleName":"collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidedOn","properties":{"simpleName":"collidedOn","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.spriteMap","properties":{"sourceText":"/**\r\n * We only need to load images once, so we keep track\r\n * of them in a hash map.\r\n */\r\nprivate final java.util.Map<java.lang.String, nl.tudelft.jpacman.sprite.Sprite> spriteMap;","visibility":"private","simpleName":"spriteMap","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.score","properties":{"sourceText":"/**\r\n * The amount of points accumulated by this player.\r\n */\r\nprivate int score;","visibility":"private","simpleName":"score","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","properties":{"sourceText":"/**\r\n * Adds a two-way collision interaction to this collection, i.e. the\r\n * collision handler will be used for both C1 versus C2 and C2 versus C1.\r\n *\r\n * @param <C1>\r\n * \t\tThe collider type.\r\n * @param <C2>\r\n * \t\tThe collidee (unit that was moved into) type.\r\n * @param collider\r\n * \t\tThe collider type.\r\n * @param collidee\r\n * \t\tThe collidee type.\r\n * @param handler\r\n * \t\tThe handler that handles the collision.\r\n */\r\npublic <C1 extends nl.tudelft.jpacman.board.Unit, C2 extends nl.tudelft.jpacman.board.Unit> void onCollision(java.lang.Class<C1> collider, java.lang.Class<C2> collidee, nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<C1, C2> handler) {\r\n    onCollision(collider, collidee, true, handler);\r\n}","docComment":"Adds a two-way collision interaction to this collection, i.e. the\r\ncollision handler will be used for both C1 versus C2 and C2 versus C1.\r\n\r\n@param <C1>\r\n\t\tThe collider type.\r\n@param <C2>\r\n\t\tThe collidee (unit that was moved into) type.\r\n@param collider\r\n\t\tThe collider type.\r\n@param collidee\r\n\t\tThe collidee type.\r\n@param handler\r\n\t\tThe handler that handles the collision.\r\n","visibility":"public","simpleName":"onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.intervalVariation","properties":{"sourceText":"/**\r\n * The random variation added to the {@link #moveInterval}.\r\n */\r\nprivate final int intervalVariation;","visibility":"private","simpleName":"intervalVariation","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.put(nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Adds a new occupant to this square.\r\n *\r\n * @param occupant\r\n * \t\tThe unit to occupy this square.\r\n */\r\nvoid put(nl.tudelft.jpacman.board.Unit occupant) {\r\n    assert occupant != null;\r\n    assert !occupants.contains(occupant);\r\n    occupants.add(occupant);\r\n}","docComment":"Adds a new occupant to this square.\r\n\r\n@param occupant\r\n\t\tThe unit to occupy this square.\r\n","visibility":"default","simpleName":"put(nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.EAST","properties":{"sourceText":"/**\r\n * East, or right.\r\n */\r\nEAST(1, 0)","visibility":"public","simpleName":"EAST","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).movedInto","properties":{"simpleName":"movedInto","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).ghosts","properties":{"simpleName":"ghosts","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).startPositions","properties":{"simpleName":"startPositions","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation","properties":{"docComment":"Navigation provides utility to navigate on {@link Square}s.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Navigation","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.isAnyPlayerAlive()","properties":{"sourceText":"/**\r\n * Returns <code>true<\/code> iff at least one of the players in this level\r\n * is alive.\r\n *\r\n * @return <code>true<\/code> if at least one of the registered players is\r\nalive.\r\n */\r\npublic boolean isAnyPlayerAlive() {\r\n    for (nl.tudelft.jpacman.level.Player player : players) {\r\n        if (player.isAlive()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","docComment":"Returns <code>true<\/code> iff at least one of the players in this level\r\nis alive.\r\n\r\n@return <code>true<\/code> if at least one of the registered players is\r\nalive.\r\n","visibility":"public","simpleName":"isAnyPlayerAlive()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.getWidth()","properties":{"sourceText":"/**\r\n * Returns the number of columns.\r\n *\r\n * @return The width of this board.\r\n */\r\npublic int getWidth() {\r\n    return board.length;\r\n}","docComment":"Returns the number of columns.\r\n\r\n@return The width of this board.\r\n","visibility":"public","simpleName":"getWidth()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.getSprite()","properties":{"sourceText":"/**\r\n * Returns the sprite of this square.\r\n *\r\n * @return The sprite of this square.\r\n */\r\npublic abstract nl.tudelft.jpacman.sprite.Sprite getSprite();","docComment":"Returns the sprite of this square.\r\n\r\n@return The sprite of this square.\r\n","visibility":"public","simpleName":"getSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createInky()","properties":{"sourceText":"/**\r\n * Creates a new Inky / Bashful, the cyan Ghost.\r\n *\r\n * @see Inky\r\n * @return A new Inky.\r\n */\r\npublic nl.tudelft.jpacman.npc.Ghost createInky() {\r\n    return new nl.tudelft.jpacman.npc.ghost.Inky(sprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor.CYAN));\r\n}","docComment":"Creates a new Inky / Bashful, the cyan Ghost.\r\n\r\n@see Inky\r\n@return A new Inky.\r\n","visibility":"public","simpleName":"createInky()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).traveller","properties":{"simpleName":"traveller","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.square","properties":{"sourceText":"/**\r\n * The square this unit is currently occupying.\r\n */\r\nprivate nl.tudelft.jpacman.board.Square square;","visibility":"private","simpleName":"square","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collidee","properties":{"simpleName":"collidee","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite)","properties":{"sourceText":"/**\r\n * Creates a new wall square.\r\n *\r\n * @param sprite\r\n * \t\tThe background for the square.\r\n */\r\nWall(nl.tudelft.jpacman.sprite.Sprite sprite) {\r\n    this.background = sprite;\r\n}","docComment":"Creates a new wall square.\r\n\r\n@param sprite\r\n\t\tThe background for the square.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.deathSprite","properties":{"sourceText":"/**\r\n * The animation that is to be played when Pac-Man dies.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.AnimatedSprite deathSprite;","visibility":"private","simpleName":"deathSprite","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int).resource","properties":{"simpleName":"resource","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.SPRITE_STORE","properties":{"sourceText":"private static final nl.tudelft.jpacman.sprite.PacManSprites SPRITE_STORE = new nl.tudelft.jpacman.sprite.PacManSprites();","visibility":"private","simpleName":"SPRITE_STORE","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).collisionMap","properties":{"simpleName":"collisionMap","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.getKiller()","properties":{"sourceText":"/**\r\n * Returns the unit that caused the death of Pac-Man.\r\n *\r\n * @return <code>Unit<\/code> iff the player died by collision, otherwise <code>null<\/code>.\r\n */\r\npublic nl.tudelft.jpacman.board.Unit getKiller() {\r\n    return killer;\r\n}","docComment":"Returns the unit that caused the death of Pac-Man.\r\n\r\n@return <code>Unit<\/code> iff the player died by collision, otherwise <code>null<\/code>.\r\n","visibility":"public","simpleName":"getKiller()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman","properties":{"simpleName":"jpacman","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getLevelMap()","properties":{"sourceText":"/**\r\n * The map file used to populate the level.\r\n *\r\n * @return The name of the map file.\r\n */\r\nprotected java.lang.String getLevelMap() {\r\n    return levelMap;\r\n}","docComment":"The map file used to populate the level.\r\n\r\n@return The name of the map file.\r\n","visibility":"protected","simpleName":"getLevelMap()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)","properties":{"sourceText":"/**\r\n * Draws the sprite on the provided graphics context.\r\n *\r\n * @param graphics\r\n * \t\tThe graphics context to draw.\r\n * @param x\r\n * \t\tThe destination x coordinate to start drawing.\r\n * @param y\r\n * \t\tThe destination y coordinate to start drawing.\r\n * @param width\r\n * \t\tThe width of the destination draw area.\r\n * @param height\r\n * \t\tThe height of the destination draw area.\r\n */\r\nvoid draw(java.awt.Graphics graphics, int x, int y, int width, int height);","docComment":"Draws the sprite on the provided graphics context.\r\n\r\n@param graphics\r\n\t\tThe graphics context to draw.\r\n@param x\r\n\t\tThe destination x coordinate to start drawing.\r\n@param y\r\n\t\tThe destination y coordinate to start drawing.\r\n@param width\r\n\t\tThe width of the destination draw area.\r\n@param height\r\n\t\tThe height of the destination draw area.\r\n","visibility":"public","simpleName":"draw(java.awt.Graphics,int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","properties":{"sourceText":"/**\r\n * Adds a collision interaction to this collection.\r\n *\r\n * @param <C1>\r\n * \t\tThe collider type.\r\n * @param <C2>\r\n * \t\tThe collidee (unit that was moved into) type.\r\n * @param collider\r\n * \t\tThe collider type.\r\n * @param collidee\r\n * \t\tThe collidee type.\r\n * @param symetric\r\n * \t\t<code>true<\/code> if this collision is used for both\r\n * \t\tC1 against C2 and vice versa;\r\n * \t\t<code>false<\/code> if only for C1 against C2.\r\n * @param handler\r\n * \t\tThe handler that handles the collision.\r\n */\r\npublic <C1 extends nl.tudelft.jpacman.board.Unit, C2 extends nl.tudelft.jpacman.board.Unit> void onCollision(java.lang.Class<C1> collider, java.lang.Class<C2> collidee, boolean symetric, nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<C1, C2> handler) {\r\n    addHandler(collider, collidee, handler);\r\n    if (symetric) {\r\n        addHandler(collidee, collider, new nl.tudelft.jpacman.level.CollisionInteractionMap.InverseCollisionHandler<>(handler));\r\n    }\r\n}","docComment":"Adds a collision interaction to this collection.\r\n\r\n@param <C1>\r\n\t\tThe collider type.\r\n@param <C2>\r\n\t\tThe collidee (unit that was moved into) type.\r\n@param collider\r\n\t\tThe collider type.\r\n@param collidee\r\n\t\tThe collidee type.\r\n@param symetric\r\n\t\t<code>true<\/code> if this collision is used for both\r\n\t\tC1 against C2 and vice versa;\r\n\t\t<code>false<\/code> if only for C1 against C2.\r\n@param handler\r\n\t\tThe handler that handles the collision.\r\n","visibility":"public","simpleName":"onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher","properties":{"docComment":"Creates and launches the JPacMan UI.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Launcher","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.addObserver(nl.tudelft.jpacman.level.Level$LevelObserver).observer","properties":{"simpleName":"observer","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStartButton(nl.tudelft.jpacman.game.Game).game","properties":{"simpleName":"game","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"boolean","properties":{"simpleName":"boolean","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator)","properties":{"sourceText":"/**\r\n * Create a simple player-based collision map, informing the\r\n * point calculator about points to be added.\r\n *\r\n * @param pointCalculator\r\n * \t\tStrategy for calculating points.\r\n */\r\npublic PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator pointCalculator) {\r\n    this.pointCalculator = pointCalculator;\r\n}","docComment":"Create a simple player-based collision map, informing the\r\npoint calculator about points to be added.\r\n\r\n@param pointCalculator\r\n\t\tStrategy for calculating points.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite split(int x, int y, int width, int height) {\r\n    update();\r\n    return currentSprite().split(x, y, width, height);\r\n}","docComment":"","visibility":"public","simpleName":"split(int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.isInProgress()","properties":{"sourceText":"/**\r\n * Returns whether this level is in progress, i.e. whether moves can be made\r\n * on the board.\r\n *\r\n * @return <code>true<\/code> iff this level is in progress.\r\n */\r\npublic boolean isInProgress() {\r\n    return inProgress;\r\n}","docComment":"Returns whether this level is in progress, i.e. whether moves can be made\r\non the board.\r\n\r\n@return <code>true<\/code> iff this level is in progress.\r\n","visibility":"public","simpleName":"isInProgress()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board","properties":{"docComment":"A top-down view of a matrix of {@link Square}s.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Board","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.squareAt(int,int)","properties":{"sourceText":"/**\r\n * Returns the square at the given <code>x,y<\/code> position.\r\n *\r\n * Precondition: The <code>(x, y)<\/code> coordinates are within the\r\n * width and height of the board.\r\n *\r\n * @param x\r\n * \t\tThe <code>x<\/code> position (column) of the requested square.\r\n * @param y\r\n * \t\tThe <code>y<\/code> position (row) of the requested square.\r\n * @return The square at the given <code>x,y<\/code> position (never null).\r\n */\r\npublic nl.tudelft.jpacman.board.Square squareAt(int x, int y) {\r\n    assert withinBorders(x, y);\r\n    nl.tudelft.jpacman.board.Square result = board[x][y];\r\n    assert result != null : \"Follows from invariant.\";\r\n    return result;\r\n}","docComment":"Returns the square at the given <code>x,y<\/code> position.\r\n\r\nPrecondition: The <code>(x, y)<\/code> coordinates are within the\r\nwidth and height of the board.\r\n\r\n@param x\r\n\t\tThe <code>x<\/code> position (column) of the requested square.\r\n@param y\r\n\t\tThe <code>y<\/code> position (row) of the requested square.\r\n@return The square at the given <code>x,y<\/code> position (never null).\r\n","visibility":"public","simpleName":"squareAt(int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).level","properties":{"simpleName":"level","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStopButton(nl.tudelft.jpacman.game.Game)","properties":{"sourceText":"/**\r\n * Adds a button with the caption {@value #STOP_CAPTION} that stops the\r\n * game.\r\n *\r\n * @param game\r\n * \t\tThe game to stop.\r\n */\r\nprivate void addStopButton(final nl.tudelft.jpacman.game.Game game) {\r\n    assert game != null;\r\n    buttons.put(nl.tudelft.jpacman.ui.PacManUiBuilder.STOP_CAPTION, game::stop);\r\n}","docComment":"Adds a button with the caption {@value #STOP_CAPTION} that stops the\r\ngame.\r\n\r\n@param game\r\n\t\tThe game to stop.\r\n","visibility":"private","simpleName":"addStopButton(nl.tudelft.jpacman.game.Game)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.squareAt(int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.nl.tudelft.jpacman.sprite.ImageSprite(java.awt.Image).img","properties":{"simpleName":"img","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"long","properties":{"simpleName":"long","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","properties":{"sourceText":"/**\r\n * Method called whenever a player consumes a pellet.\r\n * It can be used to update the player's points accordingly.\r\n *\r\n * @param player\r\n * \t\tThe player consuming a pellet\r\n * @param pellet\r\n * \t\tThe pellet consumed.\r\n */\r\nvoid consumedAPellet(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.level.Pellet pellet);","docComment":"Method called whenever a player consumes a pellet.\r\nIt can be used to update the player's points accordingly.\r\n\r\n@param player\r\n\t\tThe player consuming a pellet\r\n@param pellet\r\n\t\tThe pellet consumed.\r\n","visibility":"public","simpleName":"consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.startSquareIndex","properties":{"sourceText":"/**\r\n * The start current selected starting square.\r\n */\r\nprivate int startSquareIndex;","visibility":"private","simpleName":"startSquareIndex","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.getPelletSprite()","properties":{"sourceText":"/**\r\n *\r\n * @return The sprite for the\r\n */\r\npublic nl.tudelft.jpacman.sprite.Sprite getPelletSprite() {\r\n    return loadSprite(\"/sprite/pellet.png\");\r\n}","docComment":"\r\n@return The sprite for the\r\n","visibility":"public","simpleName":"getPelletSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game)","properties":{"sourceText":"private nl.tudelft.jpacman.level.Player getSinglePlayer(final nl.tudelft.jpacman.game.Game game) {\r\n    java.util.List<nl.tudelft.jpacman.level.Player> players = game.getPlayers();\r\n    if (players.isEmpty()) {\r\n        throw new java.lang.IllegalArgumentException(\"Game has 0 players.\");\r\n    }\r\n    return players.get(0);\r\n}","docComment":"","visibility":"private","simpleName":"getSinglePlayer(nl.tudelft.jpacman.game.Game)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.update()","properties":{"sourceText":"/**\r\n * Updates the current frame index depending on the current system time.\r\n */\r\nprivate void update() {\r\n    long now = java.lang.System.currentTimeMillis();\r\n    if (animating) {\r\n        while (lastUpdate < now) {\r\n            lastUpdate += animationDelay;\r\n            current++;\r\n            if (looping) {\r\n                current %= animationFrames.length;\r\n            } else if (current == animationFrames.length) {\r\n                animating = false;\r\n            }\r\n        } \r\n    } else {\r\n        lastUpdate = now;\r\n    }\r\n}","docComment":"Updates the current frame index depending on the current system time.\r\n","visibility":"private","simpleName":"update()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame).buttons","properties":{"simpleName":"buttons","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee","properties":{"simpleName":"collidee","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.alive","properties":{"sourceText":"/**\r\n * <code>true<\/code> iff this player is alive.\r\n */\r\nprivate boolean alive;","visibility":"private","simpleName":"alive","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostColor.PINK","properties":{"sourceText":"/**\r\n * Speedy, a.k.a. Pinky.\r\n */\r\nPINK","visibility":"public","simpleName":"PINK","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame).parent","properties":{"simpleName":"parent","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Wall.background","properties":{"sourceText":"/**\r\n * The background for this square.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.Sprite background;","visibility":"private","simpleName":"background","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.nextMove()","properties":{"sourceText":"/**\r\n * Calculates the next move for this unit and returns the direction to move\r\n * in.\r\n * <p>\r\n * Precondition: The NPC occupies a square (hasSquare() holds).\r\n *\r\n * @return The direction to move in, or <code>null<\/code> if no move could\r\nbe devised.\r\n */\r\npublic nl.tudelft.jpacman.board.Direction nextMove() {\r\n    return nextAiMove().orElseGet(this::randomMove);\r\n}","docComment":"Calculates the next move for this unit and returns the direction to move\r\nin.\r\n<p>\r\nPrecondition: The NPC occupies a square (hasSquare() holds).\r\n\r\n@return The direction to move in, or <code>null<\/code> if no move could\r\nbe devised.\r\n","visibility":"public","simpleName":"nextMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite","properties":{"docComment":"Basic implementation of a Sprite, it merely consists of a static image.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"ImageSprite","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.FRAME_INTERVAL","properties":{"sourceText":"/**\r\n * The desired frame rate interval for the graphics in milliseconds, 40\r\n * being 25 fps.\r\n */\r\nprivate static final int FRAME_INTERVAL = 40;","visibility":"private","simpleName":"FRAME_INTERVAL","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost","properties":{"simpleName":"ghost","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.nl.tudelft.jpacman.sprite.PacManSprites()","properties":{"sourceText":"PacManSprites() {\r\n}","docComment":"","visibility":"public","simpleName":"nl.tudelft.jpacman.sprite.PacManSprites()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.BLINKY","properties":{"sourceText":"private static final int BLINKY = 0;","visibility":"private","simpleName":"BLINKY","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","properties":{"sourceText":"/**\r\n * Actual case of player bumping into ghost or vice versa.\r\n *\r\n * @param player\r\n * \t\tThe player involved in the collision.\r\n * @param ghost\r\n * \t\tThe ghost involved in the collision.\r\n */\r\npublic void playerVersusGhost(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.npc.Ghost ghost) {\r\n    pointCalculator.collidedWithAGhost(player, ghost);\r\n    player.setAlive(false);\r\n    player.setKiller(ghost);\r\n}","docComment":"Actual case of player bumping into ghost or vice versa.\r\n\r\n@param player\r\n\t\tThe player involved in the collision.\r\n@param ghost\r\n\t\tThe ghost involved in the collision.\r\n","visibility":"public","simpleName":"playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String).resource","properties":{"simpleName":"resource","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit).pellet","properties":{"simpleName":"pellet","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.buttons","properties":{"sourceText":"/**\r\n * Map of buttons and their actions.\r\n */\r\nprivate final java.util.Map<java.lang.String, nl.tudelft.jpacman.ui.Action> buttons;","visibility":"private","simpleName":"buttons","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Calculates the shortest path. This is done by BFS. This search ensures\r\n * the traveller is allowed to occupy the squares on the way, or returns the\r\n * shortest path to the square regardless of terrain if no traveller is\r\n * specified.\r\n *\r\n * @param from\r\n * \t\tThe starting square.\r\n * @param to\r\n * \t\tThe destination.\r\n * @param traveller\r\n * \t\tThe traveller attempting to reach the destination. If\r\n * \t\ttraveller is set to <code>null<\/code>, this method will ignore\r\n * \t\tterrain and find the shortest path whether it can actually be\r\n * \t\treached or not.\r\n * @return The shortest path to the destination or <code>null<\/code> if no\r\nsuch path could be found. When the destination is the current\r\nsquare, an empty list is returned.\r\n */\r\npublic static java.util.List<nl.tudelft.jpacman.board.Direction> shortestPath(nl.tudelft.jpacman.board.Square from, nl.tudelft.jpacman.board.Square to, nl.tudelft.jpacman.board.Unit traveller) {\r\n    if (from.equals(to)) {\r\n        return new java.util.ArrayList<>();\r\n    }\r\n    java.util.List<nl.tudelft.jpacman.npc.ghost.Navigation.Node> targets = new java.util.ArrayList<>();\r\n    java.util.Set<nl.tudelft.jpacman.board.Square> visited = new java.util.HashSet<>();\r\n    targets.add(new nl.tudelft.jpacman.npc.ghost.Navigation.Node(null, from, null));\r\n    while (!targets.isEmpty()) {\r\n        nl.tudelft.jpacman.npc.ghost.Navigation.Node node = targets.remove(0);\r\n        nl.tudelft.jpacman.board.Square square = node.getSquare();\r\n        if (square.equals(to)) {\r\n            return node.getPath();\r\n        }\r\n        visited.add(square);\r\n        nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(traveller, targets, visited, node, square);\r\n    } \r\n    return null;\r\n}","docComment":"Calculates the shortest path. This is done by BFS. This search ensures\r\nthe traveller is allowed to occupy the squares on the way, or returns the\r\nshortest path to the square regardless of terrain if no traveller is\r\nspecified.\r\n\r\n@param from\r\n\t\tThe starting square.\r\n@param to\r\n\t\tThe destination.\r\n@param traveller\r\n\t\tThe traveller attempting to reach the destination. If\r\n\t\ttraveller is set to <code>null<\/code>, this method will ignore\r\n\t\tterrain and find the shortest path whether it can actually be\r\n\t\treached or not.\r\n@return The shortest path to the destination or <code>null<\/code> if no\r\nsuch path could be found. When the destination is the current\r\nsquare, an empty list is returned.\r\n","visibility":"public","simpleName":"shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.getWidth()","properties":{"sourceText":"@java.lang.Override\r\npublic int getWidth() {\r\n    return image.getWidth(null);\r\n}","docComment":"","visibility":"public","simpleName":"getWidth()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)","properties":{"sourceText":"/**\r\n * A utility method for implementing the ghost AI.\r\n *\r\n * @param amountToLookAhead\r\n * \t\tthe amount of squares to follow this units direction in.\r\n * @return The square amountToLookAhead spaces in front of this unit.\r\n */\r\npublic nl.tudelft.jpacman.board.Square squaresAheadOf(int amountToLookAhead) {\r\n    nl.tudelft.jpacman.board.Direction targetDirection = this.getDirection();\r\n    nl.tudelft.jpacman.board.Square destination = this.getSquare();\r\n    for (int i = 0; i < amountToLookAhead; i++) {\r\n        destination = destination.getSquareAt(targetDirection);\r\n    }\r\n    return destination;\r\n}","docComment":"A utility method for implementing the ghost AI.\r\n\r\n@param amountToLookAhead\r\n\t\tthe amount of squares to follow this units direction in.\r\n@return The square amountToLookAhead spaces in front of this unit.\r\n","visibility":"public","simpleName":"squaresAheadOf(int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ButtonPanel.serialVersionUID","properties":{"sourceText":"/**\r\n * Default serialisation ID.\r\n */\r\nprivate static final long serialVersionUID = 1L;","visibility":"private","simpleName":"serialVersionUID","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Clyde.MOVE_INTERVAL","properties":{"sourceText":"/**\r\n * The base movement interval.\r\n */\r\nprivate static final int MOVE_INTERVAL = 250;","visibility":"private","simpleName":"MOVE_INTERVAL","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.getWidth()","properties":{"sourceText":"@java.lang.Override\r\npublic int getWidth() {\r\n    assert currentSprite() != null;\r\n    return currentSprite().getWidth();\r\n}","docComment":"","visibility":"public","simpleName":"getWidth()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.opposite()","properties":{"sourceText":"/**\r\n *\r\n * @return The direction that is opposite to this direction.\r\n */\r\npublic nl.tudelft.jpacman.board.Direction opposite() {\r\n    switch (this) {\r\n        case NORTH :\r\n            return nl.tudelft.jpacman.board.Direction.SOUTH;\r\n        case SOUTH :\r\n            return nl.tudelft.jpacman.board.Direction.NORTH;\r\n        case WEST :\r\n            return nl.tudelft.jpacman.board.Direction.EAST;\r\n        case EAST :\r\n            return nl.tudelft.jpacman.board.Direction.WEST;\r\n        default :\r\n            throw new java.lang.IllegalStateException(\"Received an unknown enum value.\");\r\n    }\r\n}","docComment":"\r\n@return The direction that is opposite to this direction.\r\n","visibility":"public","simpleName":"opposite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.hasSquare()","properties":{"sourceText":"/**\r\n * Returns whether this unit is currently on  a square.\r\n *\r\n * @return True iff the unit is occupying a square at the moment.\r\n */\r\npublic boolean hasSquare() {\r\n    return square != null;\r\n}","docComment":"Returns whether this unit is currently on  a square.\r\n\r\n@return True iff the unit is occupying a square at the moment.\r\n","visibility":"public","simpleName":"hasSquare()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)","properties":{"sourceText":"/**\r\n * Starts or stops the animation of this sprite.\r\n *\r\n * @param isAnimating\r\n * \t\t<code>true<\/code> to animate this sprite or <code>false<\/code>\r\n * \t\tto stop animating this sprite.\r\n */\r\npublic void setAnimating(boolean isAnimating) {\r\n    this.animating = isAnimating;\r\n}","docComment":"Starts or stops the animation of this sprite.\r\n\r\n@param isAnimating\r\n\t\t<code>true<\/code> to animate this sprite or <code>false<\/code>\r\n\t\tto stop animating this sprite.\r\n","visibility":"public","simpleName":"setAnimating(boolean)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.pointCalculator","properties":{"sourceText":"private nl.tudelft.jpacman.points.PointCalculator pointCalculator;","visibility":"private","simpleName":"pointCalculator","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ButtonPanel","properties":{"docComment":"A panel containing a button for every registered action.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"ButtonPanel","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit).collidedOn","properties":{"simpleName":"collidedOn","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).targets","properties":{"simpleName":"targets","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost)","properties":{"sourceText":"/**\r\n * Creates a new task.\r\n *\r\n * @param service\r\n * \t\tThe service that executes the task.\r\n * @param npc\r\n * \t\tThe NPC to move.\r\n */\r\nNpcMoveTask(java.util.concurrent.ScheduledExecutorService service, nl.tudelft.jpacman.npc.Ghost npc) {\r\n    this.service = service;\r\n    this.npc = npc;\r\n}","docComment":"Creates a new task.\r\n\r\n@param service\r\n\t\tThe service that executes the task.\r\n@param npc\r\n\t\tThe NPC to move.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).loop","properties":{"simpleName":"loop","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.stopNPCs()","properties":{"sourceText":"/**\r\n * Stops all NPC movement scheduling and interrupts any movements being\r\n * executed.\r\n */\r\nprivate void stopNPCs() {\r\n    for (java.util.Map.Entry<nl.tudelft.jpacman.npc.Ghost, java.util.concurrent.ScheduledExecutorService> entry : npcs.entrySet()) {\r\n        java.util.concurrent.ScheduledExecutorService schedule = entry.getValue();\r\n        assert schedule != null;\r\n        schedule.shutdownNow();\r\n    }\r\n}","docComment":"Stops all NPC movement scheduling and interrupts any movements being\r\nexecuted.\r\n","visibility":"private","simpleName":"stopNPCs()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"private void pelletColliding(nl.tudelft.jpacman.level.Pellet pellet, nl.tudelft.jpacman.board.Unit collidedOn) {\r\n    if (collidedOn instanceof nl.tudelft.jpacman.level.Player) {\r\n        playerVersusPellet(((nl.tudelft.jpacman.level.Player) (collidedOn)), pellet);\r\n    }\r\n}","docComment":"","visibility":"private","simpleName":"pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.board","properties":{"sourceText":"/**\r\n * The board of this level.\r\n */\r\nprivate final nl.tudelft.jpacman.board.Board board;","visibility":"private","simpleName":"board","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider","properties":{"simpleName":"collider","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getPath()","properties":{"sourceText":"/**\r\n * Returns the list of values from the root of the tree to this node.\r\n *\r\n * @return The list of values from the root of the tree to this node.\r\n */\r\nprivate java.util.List<nl.tudelft.jpacman.board.Direction> getPath() {\r\n    if (parent == null) {\r\n        return new java.util.ArrayList<>();\r\n    }\r\n    java.util.List<nl.tudelft.jpacman.board.Direction> path = parent.getPath();\r\n    path.add(getDirection());\r\n    return path;\r\n}","docComment":"Returns the list of values from the root of the tree to this node.\r\n\r\n@return The list of values from the root of the tree to this node.\r\n","visibility":"private","simpleName":"getPath()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"/**\r\n * Moves the specified player one square in the given direction.\r\n *\r\n * @param player\r\n * \t\tThe player to move.\r\n * @param direction\r\n * \t\tThe direction to move in.\r\n */\r\npublic void move(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.board.Direction direction) {\r\n    if (isInProgress()) {\r\n        // execute player move.\r\n        getLevel().move(player, direction);\r\n        pointCalculator.pacmanMoved(player, direction);\r\n    }\r\n}","docComment":"Moves the specified player one square in the given direction.\r\n\r\n@param player\r\n\t\tThe player to move.\r\n@param direction\r\n\t\tThe direction to move in.\r\n","visibility":"public","simpleName":"move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level","properties":{"simpleName":"level","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.getOccupants()","properties":{"sourceText":"/**\r\n * Returns an immutable list of units occupying this square, in the order in\r\n * which they occupied this square (i.e. oldest first.)\r\n *\r\n * @return An immutable list of units occupying this square, in the order in\r\nwhich they occupied this square (i.e. oldest first.)\r\n */\r\npublic java.util.List<nl.tudelft.jpacman.board.Unit> getOccupants() {\r\n    return com.google.common.collect.ImmutableList.copyOf(occupants);\r\n}","docComment":"Returns an immutable list of units occupying this square, in the order in\r\nwhich they occupied this square (i.e. oldest first.)\r\n\r\n@return An immutable list of units occupying this square, in the order in\r\nwhich they occupied this square (i.e. oldest first.)\r\n","visibility":"public","simpleName":"getOccupants()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","properties":{"sourceText":"private void makeGrid(char[][] map, int width, int height, nl.tudelft.jpacman.board.Square[][] grid, java.util.List<nl.tudelft.jpacman.npc.Ghost> ghosts, java.util.List<nl.tudelft.jpacman.board.Square> startPositions) {\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            char c = map[x][y];\r\n            addSquare(grid, ghosts, startPositions, x, y, c);\r\n        }\r\n    }\r\n}","docComment":"","visibility":"private","simpleName":"makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.getWidth()","properties":{"sourceText":"/**\r\n * Returns the width of this sprite.\r\n *\r\n * @return The width in pixels.\r\n */\r\nint getWidth();","docComment":"Returns the width of this sprite.\r\n\r\n@return The width in pixels.\r\n","visibility":"public","simpleName":"getWidth()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.isInProgress()","properties":{"sourceText":"/**\r\n *\r\n * @return <code>true<\/code> iff the game is started and in progress.\r\n */\r\npublic boolean isInProgress() {\r\n    return inProgress;\r\n}","docComment":"\r\n@return <code>true<\/code> iff the game is started and in progress.\r\n","visibility":"public","simpleName":"isInProgress()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int)","properties":{"sourceText":"/**\r\n * Creates a new Direction with the given parameters.\r\n *\r\n * @param deltaX\r\n * \t\tThe delta x (width difference) to an element in the direction\r\n * \t\tin a matrix with 0,0 (x,y) as its top-left element.\r\n * @param deltaY\r\n * \t\tThe delta y (height difference) to an element in the direction\r\n * \t\tin a matrix with 0,0 (x,y) as its top-left element.\r\n */\r\nDirection(int deltaX, int deltaY) {\r\n    this.deltaX = deltaX;\r\n    this.deltaY = deltaY;\r\n}","docComment":"Creates a new Direction with the given parameters.\r\n\r\n@param deltaX\r\n\t\tThe delta x (width difference) to an element in the direction\r\n\t\tin a matrix with 0,0 (x,y) as its top-left element.\r\n@param deltaY\r\n\t\tThe delta y (height difference) to an element in the direction\r\n\t\tin a matrix with 0,0 (x,y) as its top-left element.\r\n","visibility":"private","simpleName":"nl.tudelft.jpacman.board.Direction(int,int)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","properties":{"simpleName":"handler","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.DELAY","properties":{"sourceText":"/**\r\n * The suggested delay between moves.\r\n */\r\nprivate static final long DELAY = 175L;","visibility":"private","simpleName":"DELAY","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).intervalVariation","properties":{"simpleName":"intervalVariation","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.withMapFile(java.lang.String).fileName","properties":{"simpleName":"fileName","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()","properties":{"sourceText":"/**\r\n *\r\n * @return The sprite for the wall.\r\n */\r\npublic nl.tudelft.jpacman.sprite.Sprite getWallSprite() {\r\n    return loadSprite(\"/sprite/wall.png\");\r\n}","docComment":"\r\n@return The sprite for the wall.\r\n","visibility":"public","simpleName":"getWallSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.scoreFormatter","properties":{"sourceText":"/**\r\n * The way to format the score information.\r\n */\r\nprivate nl.tudelft.jpacman.ui.ScorePanel.ScoreFormatter scoreFormatter = nl.tudelft.jpacman.ui.ScorePanel.DEFAULT_SCORE_FORMATTER;","visibility":"private","simpleName":"scoreFormatter","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.sprites","properties":{"sourceText":"/**\r\n * The animations for every direction.\r\n */\r\nprivate final java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> sprites;","visibility":"private","simpleName":"sprites","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getGame()","properties":{"sourceText":"/**\r\n *\r\n * @return The game object this launcher will start when {@link #launch()}\r\nis called.\r\n */\r\npublic nl.tudelft.jpacman.game.Game getGame() {\r\n    return game;\r\n}","docComment":"\r\n@return The game object this launcher will start when {@link #launch()}\r\nis called.\r\n","visibility":"public","simpleName":"getGame()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.getSquare()","properties":{"sourceText":"/**\r\n * Returns the square this unit is currently occupying.\r\n * Precondition: <code>hasSquare()<\/code>.\r\n *\r\n * @return The square this unit is currently occupying.\r\n */\r\npublic nl.tudelft.jpacman.board.Square getSquare() {\r\n    assert invariant();\r\n    assert square != null;\r\n    return square;\r\n}","docComment":"Returns the square this unit is currently occupying.\r\nPrecondition: <code>hasSquare()<\/code>.\r\n\r\n@return The square this unit is currently occupying.\r\n","visibility":"public","simpleName":"getSquare()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory).boardFactory","properties":{"simpleName":"boardFactory","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost","properties":{"docComment":"Implementation of an NPC that wanders around randomly.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"RandomGhost","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit","properties":{"simpleName":"unit","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.getHeight()","properties":{"sourceText":"@java.lang.Override\r\npublic int getHeight() {\r\n    assert currentSprite() != null;\r\n    return currentSprite().getHeight();\r\n}","docComment":"","visibility":"public","simpleName":"getHeight()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map)","properties":{"sourceText":"/**\r\n * Creates a new \"Pinky\", a.k.a. \"Speedy\".\r\n *\r\n * @param spriteMap\r\n * \t\tThe sprites for this ghost.\r\n */\r\npublic Pinky(java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> spriteMap) {\r\n    super(spriteMap, nl.tudelft.jpacman.npc.ghost.Pinky.MOVE_INTERVAL, nl.tudelft.jpacman.npc.ghost.Pinky.INTERVAL_VARIATION);\r\n}","docComment":"Creates a new \"Pinky\", a.k.a. \"Speedy\".\r\n\r\n@param spriteMap\r\n\t\tThe sprites for this ghost.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String)","properties":{"sourceText":"/**\r\n * Parses the provided input stream as a character stream and passes it\r\n * result to {@link #parseMap(List)}.\r\n *\r\n * @param mapName\r\n * \t\tName of a resource that will be read.\r\n * @return The parsed level as represented by the text on the input stream.\r\n * @throws IOException\r\n * \t\twhen the resource could not be read.\r\n */\r\n@edu.umd.cs.findbugs.annotations.SuppressFBWarnings(value = { \"OBL_UNSATISFIED_OBLIGATION\", \"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\" }, justification = \"try with resources always cleans up / false positive in java 11\")\r\npublic nl.tudelft.jpacman.level.Level parseMap(java.lang.String mapName) throws java.io.IOException {\r\n    try (java.io.InputStream boardStream = nl.tudelft.jpacman.level.MapParser.class.getResourceAsStream(mapName)) {\r\n        if (boardStream == null) {\r\n            throw new nl.tudelft.jpacman.PacmanConfigurationException(\"Could not get resource for: \" + mapName);\r\n        }\r\n        return parseMap(boardStream);\r\n    }\r\n}","docComment":"Parses the provided input stream as a character stream and passes it\r\nresult to {@link #parseMap(List)}.\r\n\r\n@param mapName\r\n\t\tName of a resource that will be read.\r\n@return The parsed level as represented by the text on the input stream.\r\n@throws IOException\r\n\t\twhen the resource could not be read.\r\n","visibility":"public","simpleName":"parseMap(java.lang.String)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostColor.CYAN","properties":{"sourceText":"/**\r\n * Bashful, a.k.a. Inky.\r\n */\r\nCYAN","visibility":"public","simpleName":"CYAN","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][]).grid","properties":{"simpleName":"grid","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky","properties":{"docComment":"<p>\r\nAn implementation of the classic Pac-Man ghost Inky.\r\n<\/p>\r\n<b>AI:<\/b> Inky has the most complicated AI of all. Inky considers two things: Blinky's\r\nlocation, and the location two grid spaces ahead of Pac-Man. Inky draws a\r\nline from Blinky to the spot that is two squares in front of Pac-Man and\r\nextends that line twice as far. Therefore, if Inky is alongside Blinky\r\nwhen they are behind Pac-Man, Inky will usually follow Blinky the whole\r\ntime. But if Inky is in front of Pac-Man when Blinky is far behind him,\r\nInky tends to want to move away from Pac-Man (in reality, to a point very\r\nfar ahead of Pac-Man). Inky is affected by a similar targeting bug that\r\naffects Speedy. When Pac-Man is moving or facing up, the spot Inky uses to\r\ndraw the line is two squares above and left of Pac-Man.\r\n<p>\r\nSource: http://strategywiki.org/wiki/Pac-Man/Getting_Started\r\n<\/p>\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Inky","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit).collidedOn","properties":{"simpleName":"collidedOn","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).node","properties":{"simpleName":"node","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite)","properties":{"sourceText":"/**\r\n * Creates a new pellet.\r\n *\r\n * @param points\r\n * \t\tThe point value of this pellet.\r\n * @param sprite\r\n * \t\tThe sprite of this pellet.\r\n */\r\npublic Pellet(int points, nl.tudelft.jpacman.sprite.Sprite sprite) {\r\n    this.image = sprite;\r\n    this.value = points;\r\n}","docComment":"Creates a new pellet.\r\n\r\n@param points\r\n\t\tThe point value of this pellet.\r\n@param sprite\r\n\t\tThe sprite of this pellet.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.getHeight()","properties":{"sourceText":"@java.lang.Override\r\npublic int getHeight() {\r\n    return 0;\r\n}","docComment":"","visibility":"public","simpleName":"getHeight()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter","properties":{"docComment":"Provide means to format the score for a given player.\r\n","simpleName":"ScoreFormatter","kind":"interface","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.keyReleased(java.awt.event.KeyEvent)","properties":{"sourceText":"@java.lang.Override\r\npublic void keyReleased(java.awt.event.KeyEvent event) {\r\n    // do nothing\r\n}","docComment":"","visibility":"public","simpleName":"keyReleased(java.awt.event.KeyEvent)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.levelCreator","properties":{"sourceText":"/**\r\n * The factory that creates the levels.\r\n */\r\nprivate final nl.tudelft.jpacman.level.LevelFactory levelCreator;","visibility":"private","simpleName":"levelCreator","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap","properties":{"docComment":"An extensible default interaction map for collisions caused by the player.\r\n\r\nThe implementation makes use of the interactionmap, and as such can be easily\r\nand declaratively extended when new types of units (ghosts, players, ...) are\r\nadded.\r\n\r\n@author Arie van Deursen\r\n@author Jeroen Roosen\r\n","simpleName":"DefaultPlayerInteractionMap","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","properties":{"sourceText":"/**\r\n * Creates a new collision handler.\r\n *\r\n * @param handler\r\n * \t\tThe symmetric handler for this collision.\r\n */\r\nInverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<C2, C1> handler) {\r\n    this.handler = handler;\r\n}","docComment":"Creates a new collision handler.\r\n\r\n@param handler\r\n\t\tThe symmetric handler for this collision.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","properties":{"sourceText":"@java.lang.Override\r\npublic void draw(java.awt.Graphics graphics, int x, int y, int width, int height) {\r\n    update();\r\n    currentSprite().draw(graphics, x, y, width, height);\r\n}","docComment":"","visibility":"public","simpleName":"draw(java.awt.Graphics,int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee","properties":{"simpleName":"collidee","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.PELLET_VALUE","properties":{"sourceText":"/**\r\n * The default value of a pellet.\r\n */\r\nprivate static final int PELLET_VALUE = 10;","visibility":"private","simpleName":"PELLET_VALUE","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.game","properties":{"sourceText":"private nl.tudelft.jpacman.game.Game game;","visibility":"private","simpleName":"game","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.SOUTH","properties":{"sourceText":"/**\r\n * South, or down.\r\n */\r\nSOUTH(0, 1)","visibility":"public","simpleName":"SOUTH","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator)","properties":{"sourceText":"/**\r\n * Creates a new game.\r\n *\r\n * @param pointCalculator\r\n * \t\tThe way to calculate points upon collisions.\r\n */\r\nprotected Game(nl.tudelft.jpacman.points.PointCalculator pointCalculator) {\r\n    this.pointCalculator = pointCalculator;\r\n    inProgress = false;\r\n}","docComment":"Creates a new game.\r\n\r\n@param pointCalculator\r\n\t\tThe way to calculate points upon collisions.\r\n","visibility":"protected","simpleName":"nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).moveInterval","properties":{"simpleName":"moveInterval","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.progressLock","properties":{"sourceText":"/**\r\n * Object that locks the start and stop methods.\r\n */\r\nprivate final java.lang.Object progressLock = new java.lang.Object();","visibility":"private","simpleName":"progressLock","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","properties":{"sourceText":"/**\r\n * Renders a single square on the given graphics context on the specified\r\n * rectangle.\r\n *\r\n * @param square\r\n * \t\tThe square to render.\r\n * @param graphics\r\n * \t\tThe graphics context to draw on.\r\n * @param x\r\n * \t\tThe x position to start drawing.\r\n * @param y\r\n * \t\tThe y position to start drawing.\r\n * @param width\r\n * \t\tThe width of this square (in pixels.)\r\n * @param height\r\n * \t\tThe height of this square (in pixels.)\r\n */\r\nprivate void render(nl.tudelft.jpacman.board.Square square, java.awt.Graphics graphics, int x, int y, int width, int height) {\r\n    square.getSprite().draw(graphics, x, y, width, height);\r\n    for (nl.tudelft.jpacman.board.Unit unit : square.getOccupants()) {\r\n        unit.getSprite().draw(graphics, x, y, width, height);\r\n    }\r\n}","docComment":"Renders a single square on the given graphics context on the specified\r\nrectangle.\r\n\r\n@param square\r\n\t\tThe square to render.\r\n@param graphics\r\n\t\tThe graphics context to draw on.\r\n@param x\r\n\t\tThe x position to start drawing.\r\n@param y\r\n\t\tThe y position to start drawing.\r\n@param width\r\n\t\tThe width of this square (in pixels.)\r\n@param height\r\n\t\tThe height of this square (in pixels.)\r\n","visibility":"private","simpleName":"render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class)","properties":{"sourceText":"/**\r\n * Figures out the most specific class that is listed in the map. I.e. if A\r\n * extends B and B is listed while requesting A, then B will be returned.\r\n *\r\n * @param map\r\n * \t\tThe map with the key collection to find a matching class in.\r\n * @param key\r\n * \t\tThe class to search the most suitable key for.\r\n * @return The most specific class from the key collection.\r\n */\r\nprivate java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> getMostSpecificClass(java.util.Map<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>, ?> map, java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> key) {\r\n    java.util.List<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>> collideeInheritance = getInheritance(key);\r\n    for (java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> pointer : collideeInheritance) {\r\n        if (map.containsKey(pointer)) {\r\n            return pointer;\r\n        }\r\n    }\r\n    return null;\r\n}","docComment":"Figures out the most specific class that is listed in the map. I.e. if A\r\nextends B and B is listed while requesting A, then B will be returned.\r\n\r\n@param map\r\n\t\tThe map with the key collection to find a matching class in.\r\n@param key\r\n\t\tThe class to search the most suitable key for.\r\n@return The most specific class from the key collection.\r\n","visibility":"private","simpleName":"getMostSpecificClass(java.util.Map,java.lang.Class)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.npcs","properties":{"sourceText":"/**\r\n * The NPCs of this level and, if they are running, their schedules.\r\n */\r\nprivate final java.util.Map<nl.tudelft.jpacman.npc.Ghost, java.util.concurrent.ScheduledExecutorService> npcs;","visibility":"private","simpleName":"npcs","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()","properties":{"sourceText":"/**\r\n * Creates a new player with the classic Pac-Man sprites.\r\n *\r\n * @return A new player.\r\n */\r\npublic nl.tudelft.jpacman.level.Player createPacMan() {\r\n    return new nl.tudelft.jpacman.level.Player(getSprites().getPacmanSprites(), getSprites().getPacManDeathAnimation());\r\n}","docComment":"Creates a new player with the classic Pac-Man sprites.\r\n\r\n@return A new player.\r\n","visibility":"public","simpleName":"createPacMan()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square)","properties":{"sourceText":"private nl.tudelft.jpacman.board.Square followPath(java.util.List<nl.tudelft.jpacman.board.Direction> directions, nl.tudelft.jpacman.board.Square start) {\r\n    nl.tudelft.jpacman.board.Square destination = start;\r\n    for (nl.tudelft.jpacman.board.Direction d : directions) {\r\n        destination = destination.getSquareAt(d);\r\n    }\r\n    return destination;\r\n}","docComment":"","visibility":"private","simpleName":"followPath(java.util.List,nl.tudelft.jpacman.board.Square)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","properties":{"sourceText":"/**\r\n * Adds the collision interaction..\r\n *\r\n * @param collider\r\n * \t\tThe collider type.\r\n * @param collidee\r\n * \t\tThe collidee type.\r\n * @param handler\r\n * \t\tThe handler that handles the collision.\r\n */\r\nprivate void addHandler(java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> collider, java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> collidee, nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<?, ?> handler) {\r\n    if (!handlers.containsKey(collider)) {\r\n        handlers.put(collider, new java.util.HashMap<>());\r\n    }\r\n    java.util.Map<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>, nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<?, ?>> map = handlers.get(collider);\r\n    map.put(collidee, handler);\r\n}","docComment":"Adds the collision interaction..\r\n\r\n@param collider\r\n\t\tThe collider type.\r\n@param collidee\r\n\t\tThe collidee type.\r\n@param handler\r\n\t\tThe handler that handles the collision.\r\n","visibility":"private","simpleName":"addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.ANIMATION_DELAY","properties":{"sourceText":"/**\r\n * The delay between frames.\r\n */\r\nprivate static final int ANIMATION_DELAY = 200;","visibility":"private","simpleName":"ANIMATION_DELAY","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.direction","properties":{"sourceText":"/**\r\n * The direction this unit is facing.\r\n */\r\nprivate nl.tudelft.jpacman.board.Direction direction;","visibility":"private","simpleName":"direction","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator).pointCalculator","properties":{"simpleName":"pointCalculator","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String)","properties":{"sourceText":"/**\r\n * Loads a sprite from a resource on the class path.\r\n * Sprites are loaded once, and then stored in the store\r\n * so that they can be efficiently retrieved.\r\n *\r\n * @param resource\r\n * \t\tThe resource path.\r\n * @return The sprite for the resource.\r\n * @throws IOException\r\n * \t\tWhen the resource could not be loaded.\r\n */\r\npublic nl.tudelft.jpacman.sprite.Sprite loadSprite(java.lang.String resource) throws java.io.IOException {\r\n    nl.tudelft.jpacman.sprite.Sprite result = spriteMap.get(resource);\r\n    if (result == null) {\r\n        result = loadSpriteFromResource(resource);\r\n        spriteMap.put(resource, result);\r\n    }\r\n    return result;\r\n}","docComment":"Loads a sprite from a resource on the class path.\r\nSprites are loaded once, and then stored in the store\r\nso that they can be efficiently retrieved.\r\n\r\n@param resource\r\n\t\tThe resource path.\r\n@return The sprite for the resource.\r\n@throws IOException\r\n\t\tWhen the resource could not be loaded.\r\n","visibility":"public","simpleName":"loadSprite(java.lang.String)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.invariant()","properties":{"sourceText":"/**\r\n * Tests whether the square this unit is occupying has this unit listed as\r\n * one of its occupiers.\r\n *\r\n * @return <code>true<\/code> if the square this unit is occupying has this\r\nunit listed as one of its occupiers, or if this unit is currently\r\nnot occupying any square.\r\n */\r\nprotected boolean invariant() {\r\n    return (square == null) || square.getOccupants().contains(this);\r\n}","docComment":"Tests whether the square this unit is occupying has this unit listed as\r\none of its occupiers.\r\n\r\n@return <code>true<\/code> if the square this unit is occupying has this\r\nunit listed as one of its occupiers, or if this unit is currently\r\nnot occupying any square.\r\n","visibility":"protected","simpleName":"invariant()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.nl.tudelft.jpacman.board.Unit()","properties":{"sourceText":"/**\r\n * Creates a unit that is facing east.\r\n */\r\nprotected Unit() {\r\n    this.direction = nl.tudelft.jpacman.board.Direction.EAST;\r\n}","docComment":"Creates a unit that is facing east.\r\n","visibility":"protected","simpleName":"nl.tudelft.jpacman.board.Unit()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nextAiMove()","properties":{"sourceText":"@java.lang.Override\r\npublic java.util.Optional<nl.tudelft.jpacman.board.Direction> nextAiMove() {\r\n    return java.util.Optional.empty();\r\n}","docComment":"","visibility":"public","simpleName":"nextAiMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).baseImage","properties":{"simpleName":"baseImage","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).graphics","properties":{"simpleName":"graphics","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc","properties":{"simpleName":"npc","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collider","properties":{"simpleName":"collider","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.deltaX","properties":{"sourceText":"/**\r\n * The delta x (width difference) to an element in the direction in a grid\r\n * with 0,0 (x,y) as its top-left element.\r\n */\r\nprivate final int deltaX;","visibility":"private","simpleName":"deltaX","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.nextFrame()","properties":{"sourceText":"/**\r\n * Draws the next frame, i.e. refreshes the scores and game.\r\n */\r\nprivate void nextFrame() {\r\n    boardPanel.repaint();\r\n    scorePanel.refresh();\r\n}","docComment":"Draws the next frame, i.e. refreshes the scores and game.\r\n","visibility":"private","simpleName":"nextFrame()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.GHOST_ANIMATION_FRAMES","properties":{"sourceText":"/**\r\n * The amount of frames in the ghost animation.\r\n */\r\nprivate static final int GHOST_ANIMATION_FRAMES = 2;","visibility":"private","simpleName":"GHOST_ANIMATION_FRAMES","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory.playerFactory","properties":{"sourceText":"/**\r\n * The factory providing the player objects.\r\n */\r\nprivate final nl.tudelft.jpacman.level.PlayerFactory playerFactory;","visibility":"private","simpleName":"playerFactory","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.addObserver(nl.tudelft.jpacman.level.Level$LevelObserver)","properties":{"sourceText":"/**\r\n * Adds an observer that will be notified when the level is won or lost.\r\n *\r\n * @param observer\r\n * \t\tThe observer that will be notified.\r\n */\r\npublic void addObserver(nl.tudelft.jpacman.level.Level.LevelObserver observer) {\r\n    observers.add(observer);\r\n}","docComment":"Adds an observer that will be notified when the level is won or lost.\r\n\r\n@param observer\r\n\t\tThe observer that will be notified.\r\n","visibility":"public","simpleName":"addObserver(nl.tudelft.jpacman.level.Level$LevelObserver)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.nl.tudelft.jpacman.sprite.ImageSprite(java.awt.Image)","properties":{"sourceText":"/**\r\n * Creates a new sprite from an image.\r\n *\r\n * @param img\r\n * \t\tThe image to create a sprite from.\r\n */\r\npublic ImageSprite(java.awt.Image img) {\r\n    this.image = img;\r\n}","docComment":"Creates a new sprite from an image.\r\n\r\n@param img\r\n\t\tThe image to create a sprite from.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.sprite.ImageSprite(java.awt.Image)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"private nl.tudelft.jpacman.ui.Action moveTowardsDirection(nl.tudelft.jpacman.board.Direction direction) {\r\n    return () -> {\r\n        assert game != null;\r\n        getGame().move(getSinglePlayer(getGame()), direction);\r\n    };\r\n}","docComment":"","visibility":"private","simpleName":"moveTowardsDirection(nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.getLevel()","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.level.Level getLevel() {\r\n    return level;\r\n}","docComment":"","visibility":"public","simpleName":"getLevel()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.BACKGROUND_COLOR","properties":{"sourceText":"/**\r\n * The background colour of the board.\r\n */\r\nprivate static final java.awt.Color BACKGROUND_COLOR = java.awt.Color.BLACK;","visibility":"private","simpleName":"BACKGROUND_COLOR","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.startStopLock","properties":{"sourceText":"/**\r\n * The lock that ensures starting and stopping can't interfere with each\r\n * other.\r\n */\r\nprivate final java.lang.Object startStopLock = new java.lang.Object();","visibility":"private","simpleName":"startStopLock","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).keyMappings","properties":{"simpleName":"keyMappings","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map)","properties":{"sourceText":"/**\r\n * Creates a new \"Inky\".\r\n *\r\n * @param spriteMap\r\n * \t\tThe sprites for this ghost.\r\n */\r\npublic Inky(java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> spriteMap) {\r\n    super(spriteMap, nl.tudelft.jpacman.npc.ghost.Inky.MOVE_INTERVAL, nl.tudelft.jpacman.npc.ghost.Inky.INTERVAL_VARIATION);\r\n}","docComment":"Creates a new \"Inky\".\r\n\r\n@param spriteMap\r\n\t\tThe sprites for this ghost.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory.createGround()","properties":{"sourceText":"/**\r\n * Creates a new square that can be occupied by any unit.\r\n *\r\n * @return A new square that can be occupied by any unit.\r\n */\r\npublic nl.tudelft.jpacman.board.Square createGround() {\r\n    return new nl.tudelft.jpacman.board.BoardFactory.Ground(sprites.getGroundSprite());\r\n}","docComment":"Creates a new square that can be occupied by any unit.\r\n\r\n@return A new square that can be occupied by any unit.\r\n","visibility":"public","simpleName":"createGround()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.nl.tudelft.jpacman.level.CollisionInteractionMap()","properties":{"sourceText":"/**\r\n * Creates a new, empty collision map.\r\n */\r\npublic CollisionInteractionMap() {\r\n    this.handlers = new java.util.HashMap<>();\r\n}","docComment":"Creates a new, empty collision map.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.CollisionInteractionMap()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostColor.ORANGE","properties":{"sourceText":"/**\r\n * Pokey, a.k.a. Clyde.\r\n */\r\nORANGE","visibility":"public","simpleName":"ORANGE","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator","properties":{"docComment":"A simple, minimalistic point calculator just\r\nadding points for each pellet consumed.\r\n","simpleName":"DefaultPointCalculator","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action).keyCode","properties":{"simpleName":"keyCode","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_ANIMATION_FRAMES","properties":{"sourceText":"/**\r\n * The amount of frames in the pacman animation.\r\n */\r\nprivate static final int PACMAN_ANIMATION_FRAMES = 4;","visibility":"private","simpleName":"PACMAN_ANIMATION_FRAMES","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler","properties":{"docComment":"Handles the collision between two colliding parties.\r\n\r\n@author Michael de Jong\r\n@param <C1>\r\n\t\tThe collider type.\r\n@param <C2>\r\n\t\tThe collidee type.\r\n","simpleName":"CollisionHandler","kind":"interface","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser","properties":{"docComment":"Creates new {@link Level}s from text representations.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"MapParser","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.defaultButtons","properties":{"sourceText":"/**\r\n * <code>true<\/code> iff this UI has the default buttons.\r\n */\r\nprivate boolean defaultButtons;","visibility":"private","simpleName":"defaultButtons","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite","properties":{"docComment":"Animated sprite, renders the frame depending on the time of requesting the\r\ndraw.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"AnimatedSprite","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map).spriteMap","properties":{"simpleName":"spriteMap","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","properties":{"sourceText":"/**\r\n * Renders the board on the given graphics context to the given dimensions.\r\n *\r\n * @param board\r\n * \t\tThe board to render.\r\n * @param graphics\r\n * \t\tThe graphics context to draw on.\r\n * @param window\r\n * \t\tThe dimensions to scale the rendered board to.\r\n */\r\nprivate void render(nl.tudelft.jpacman.board.Board board, java.awt.Graphics graphics, java.awt.Dimension window) {\r\n    int cellW = window.width / board.getWidth();\r\n    int cellH = window.height / board.getHeight();\r\n    graphics.setColor(nl.tudelft.jpacman.ui.BoardPanel.BACKGROUND_COLOR);\r\n    graphics.fillRect(0, 0, window.width, window.height);\r\n    for (int y = 0; y < board.getHeight(); y++) {\r\n        for (int x = 0; x < board.getWidth(); x++) {\r\n            int cellX = x * cellW;\r\n            int cellY = y * cellH;\r\n            nl.tudelft.jpacman.board.Square square = board.squareAt(x, y);\r\n            render(square, graphics, cellX, cellY, cellW, cellH);\r\n        }\r\n    }\r\n}","docComment":"Renders the board on the given graphics context to the given dimensions.\r\n\r\n@param board\r\n\t\tThe board to render.\r\n@param graphics\r\n\t\tThe graphics context to draw on.\r\n@param window\r\n\t\tThe dimensions to scale the rendered board to.\r\n","visibility":"private","simpleName":"render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"@java.lang.Override\r\npublic void collide(nl.tudelft.jpacman.board.Unit mover, nl.tudelft.jpacman.board.Unit movedInto) {\r\n    collisions.collide(mover, movedInto);\r\n}","docComment":"","visibility":"public","simpleName":"collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory.nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore","properties":{"simpleName":"spriteStore","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getDirection()","properties":{"sourceText":"/**\r\n *\r\n * @return The direction for this node, or <code>null<\/code> if this\r\nnode is a root node.\r\n */\r\nprivate nl.tudelft.jpacman.board.Direction getDirection() {\r\n    return direction;\r\n}","docComment":"\r\n@return The direction for this node, or <code>null<\/code> if this\r\nnode is a root node.\r\n","visibility":"private","simpleName":"getDirection()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)","properties":{"sourceText":"/**\r\n * creates a Square with the specified ghost on it\r\n * and appends the placed ghost into the ghost list.\r\n *\r\n * @param ghosts\r\n * \t\tall the ghosts in the level so far, the new ghost will be appended\r\n * @param ghost\r\n * \t\tthe newly created ghost to be placed\r\n * @return a square with the ghost on it.\r\n */\r\nprotected nl.tudelft.jpacman.board.Square makeGhostSquare(java.util.List<nl.tudelft.jpacman.npc.Ghost> ghosts, nl.tudelft.jpacman.npc.Ghost ghost) {\r\n    nl.tudelft.jpacman.board.Square ghostSquare = boardCreator.createGround();\r\n    ghosts.add(ghost);\r\n    ghost.occupy(ghostSquare);\r\n    return ghostSquare;\r\n}","docComment":"creates a Square with the specified ghost on it\r\nand appends the placed ghost into the ghost list.\r\n\r\n@param ghosts\r\n\t\tall the ghosts in the level so far, the new ghost will be appended\r\n@param ghost\r\n\t\tthe newly created ghost to be placed\r\n@return a square with the ghost on it.\r\n","visibility":"protected","simpleName":"makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.nextAiMove()","properties":{"sourceText":"/**\r\n * Tries to calculate a move based on the behaviour of the npc.\r\n *\r\n * @return an optional containing the move or empty if the current state of the game\r\nmakes the ai move impossible\r\n */\r\npublic abstract java.util.Optional<nl.tudelft.jpacman.board.Direction> nextAiMove();","docComment":"Tries to calculate a move based on the behaviour of the npc.\r\n\r\n@return an optional containing the move or empty if the current state of the game\r\nmakes the ai move impossible\r\n","visibility":"public","simpleName":"nextAiMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square).type","properties":{"simpleName":"type","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"float","properties":{"simpleName":"float","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.observers","properties":{"sourceText":"/**\r\n * The objects observing this level.\r\n */\r\nprivate final java.util.Set<nl.tudelft.jpacman.level.Level.LevelObserver> observers;","visibility":"private","simpleName":"observers","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_DEATH_FRAMES","properties":{"sourceText":"/**\r\n * The amount of frames in the pacman dying animation.\r\n */\r\nprivate static final int PACMAN_DEATH_FRAMES = 11;","visibility":"private","simpleName":"PACMAN_DEATH_FRAMES","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel","properties":{"docComment":"A panel consisting of a column for each player, with the numbered players on\r\ntop and their respective scores underneath.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"ScorePanel","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.createPellet()","properties":{"sourceText":"/**\r\n * Creates a new pellet.\r\n *\r\n * @return The new pellet.\r\n */\r\npublic nl.tudelft.jpacman.level.Pellet createPellet() {\r\n    return new nl.tudelft.jpacman.level.Pellet(nl.tudelft.jpacman.level.LevelFactory.PELLET_VALUE, sprites.getPelletSprite());\r\n}","docComment":"Creates a new pellet.\r\n\r\n@return The new pellet.\r\n","visibility":"public","simpleName":"createPellet()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite)","properties":{"sourceText":"/**\r\n * Creates a new ground square.\r\n *\r\n * @param sprite\r\n * \t\tThe background for the square.\r\n */\r\nGround(nl.tudelft.jpacman.sprite.Sprite sprite) {\r\n    this.background = sprite;\r\n}","docComment":"Creates a new ground square.\r\n\r\n@param sprite\r\n\t\tThe background for the square.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map).spriteMap","properties":{"simpleName":"spriteMap","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board).board","properties":{"simpleName":"board","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.current","properties":{"sourceText":"/**\r\n * The index of the current frame.\r\n */\r\nprivate int current;","visibility":"private","simpleName":"current","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game).game","properties":{"simpleName":"game","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","properties":{"sourceText":"/**\r\n * Creates a new UI for a JPacman game.\r\n *\r\n * @param game\r\n * \t\tThe game to play.\r\n * @param buttons\r\n * \t\tThe map of caption-to-action entries that will appear as\r\n * \t\tbuttons on the interface.\r\n * @param keyMappings\r\n * \t\tThe map of keyCode-to-action entries that will be added as key\r\n * \t\tlisteners to the interface.\r\n * @param scoreFormatter\r\n * \t\tThe formatter used to display the current score.\r\n */\r\npublic PacManUI(final nl.tudelft.jpacman.game.Game game, final java.util.Map<java.lang.String, nl.tudelft.jpacman.ui.Action> buttons, final java.util.Map<java.lang.Integer, nl.tudelft.jpacman.ui.Action> keyMappings, nl.tudelft.jpacman.ui.ScorePanel.ScoreFormatter scoreFormatter) {\r\n    super(\"JPacman\");\r\n    assert game != null;\r\n    assert buttons != null;\r\n    assert keyMappings != null;\r\n    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\r\n    nl.tudelft.jpacman.ui.PacKeyListener keys = new nl.tudelft.jpacman.ui.PacKeyListener(keyMappings);\r\n    addKeyListener(keys);\r\n    javax.swing.JPanel buttonPanel = new nl.tudelft.jpacman.ui.ButtonPanel(buttons, this);\r\n    scorePanel = new nl.tudelft.jpacman.ui.ScorePanel(game.getPlayers());\r\n    if (scoreFormatter != null) {\r\n        scorePanel.setScoreFormatter(scoreFormatter);\r\n    }\r\n    boardPanel = new nl.tudelft.jpacman.ui.BoardPanel(game);\r\n    java.awt.Container contentPanel = getContentPane();\r\n    contentPanel.setLayout(new java.awt.BorderLayout());\r\n    contentPanel.add(buttonPanel, java.awt.BorderLayout.SOUTH);\r\n    contentPanel.add(scorePanel, java.awt.BorderLayout.NORTH);\r\n    contentPanel.add(boardPanel, java.awt.BorderLayout.CENTER);\r\n    pack();\r\n}","docComment":"Creates a new UI for a JPacman game.\r\n\r\n@param game\r\n\t\tThe game to play.\r\n@param buttons\r\n\t\tThe map of caption-to-action entries that will appear as\r\n\t\tbuttons on the interface.\r\n@param keyMappings\r\n\t\tThe map of keyCode-to-action entries that will be added as key\r\n\t\tlisteners to the interface.\r\n@param scoreFormatter\r\n\t\tThe formatter used to display the current score.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.startSquares","properties":{"sourceText":"/**\r\n * The squares from which players can start this game.\r\n */\r\nprivate final java.util.List<nl.tudelft.jpacman.board.Square> startSquares;","visibility":"private","simpleName":"startSquares","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.keyPressed(java.awt.event.KeyEvent)","properties":{"sourceText":"@java.lang.Override\r\npublic void keyPressed(java.awt.event.KeyEvent event) {\r\n    assert event != null;\r\n    nl.tudelft.jpacman.ui.Action action = mappings.get(event.getKeyCode());\r\n    if (action != null) {\r\n        action.doAction();\r\n    }\r\n}","docComment":"","visibility":"public","simpleName":"keyPressed(java.awt.event.KeyEvent)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Determines whether the unit is allowed to occupy this square.\r\n *\r\n * @param unit\r\n * \t\tThe unit to grant or deny access.\r\n * @return <code>true<\/code> iff the unit is allowed to occupy this square.\r\n */\r\npublic abstract boolean isAccessibleTo(nl.tudelft.jpacman.board.Unit unit);","docComment":"Determines whether the unit is allowed to occupy this square.\r\n\r\n@param unit\r\n\t\tThe unit to grant or deny access.\r\n@return <code>true<\/code> iff the unit is allowed to occupy this square.\r\n","visibility":"public","simpleName":"isAccessibleTo(nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui","properties":{"simpleName":"ui","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).from","properties":{"simpleName":"from","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.dispose()","properties":{"sourceText":"/**\r\n * Disposes of the UI. For more information see\r\n * {@link javax.swing.JFrame#dispose()}.\r\n *\r\n * Precondition: The game was launched first.\r\n */\r\npublic void dispose() {\r\n    assert pacManUI != null;\r\n    pacManUI.dispose();\r\n}","docComment":"Disposes of the UI. For more information see\r\n{@link javax.swing.JFrame#dispose()}.\r\n\r\nPrecondition: The game was launched first.\r\n","visibility":"public","simpleName":"dispose()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Handles the collision between two colliding parties.\r\n *\r\n * @param collider\r\n * \t\tThe collider.\r\n * @param collidee\r\n * \t\tThe collidee.\r\n */\r\nvoid handleCollision(C1 collider, C2 collidee);","docComment":"Handles the collision between two colliding parties.\r\n\r\n@param collider\r\n\t\tThe collider.\r\n@param collidee\r\n\t\tThe collidee.\r\n","visibility":"public","simpleName":"handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.parent","properties":{"sourceText":"/**\r\n * The parent node, which is <code>null<\/code> for the root node.\r\n */\r\nprivate final nl.tudelft.jpacman.npc.ghost.Navigation.Node parent;","visibility":"private","simpleName":"parent","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Wall","properties":{"docComment":"A wall is a square that is inaccessible to anyone.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Wall","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.ghostIndex","properties":{"sourceText":"/**\r\n * Used to cycle through the various ghost types.\r\n */\r\nprivate int ghostIndex;","visibility":"private","simpleName":"ghostIndex","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics)","properties":{"sourceText":"@java.lang.Override\r\npublic void paint(java.awt.Graphics g) {\r\n    assert g != null;\r\n    render(game.getLevel().getBoard(), g, getSize());\r\n}","docComment":"","visibility":"public","simpleName":"paint(java.awt.Graphics)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board","properties":{"simpleName":"board","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl","properties":{"simpleName":"nl","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class).map","properties":{"simpleName":"map","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator)","properties":{"sourceText":"/**\r\n * Create a simple player-based collision map, informing the\r\n * point calculator about points to be added.\r\n *\r\n * @param pointCalculator\r\n * \t\tStrategy for calculating points.\r\n */\r\npublic DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator pointCalculator) {\r\n    this.pointCalculator = pointCalculator;\r\n}","docComment":"Create a simple player-based collision map, informing the\r\npoint calculator about points to be added.\r\n\r\n@param pointCalculator\r\n\t\tStrategy for calculating points.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).buttons","properties":{"simpleName":"buttons","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map).ghostSprite","properties":{"simpleName":"ghostSprite","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.nl.tudelft.jpacman.sprite.SpriteStore()","properties":{"sourceText":"/**\r\n * Create a new sprite store.\r\n */\r\npublic SpriteStore() {\r\n    spriteMap = new java.util.HashMap<>();\r\n}","docComment":"Create a new sprite store.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.sprite.SpriteStore()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getMapParser()","properties":{"sourceText":"/**\r\n *\r\n * @return A new map parser object using the factories from\r\n{@link #getLevelFactory()} and {@link #getBoardFactory()}.\r\n */\r\nprotected nl.tudelft.jpacman.level.MapParser getMapParser() {\r\n    return new nl.tudelft.jpacman.level.MapParser(getLevelFactory(), getBoardFactory());\r\n}","docComment":"\r\n@return A new map parser object using the factories from\r\n{@link #getLevelFactory()} and {@link #getBoardFactory()}.\r\n","visibility":"protected","simpleName":"getMapParser()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int)","properties":{"sourceText":"@java.lang.Override\r\npublic void draw(java.awt.Graphics graphics, int x, int y, int width, int height) {\r\n    graphics.drawImage(image, x, y, x + width, y + height, 0, 0, image.getWidth(null), image.getHeight(null), null);\r\n}","docComment":"","visibility":"public","simpleName":"draw(java.awt.Graphics,int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)","properties":{"sourceText":"/**\r\n * Occupies the target square iff this unit is allowed to as decided by\r\n * {@link Square#isAccessibleTo(Unit)}.\r\n *\r\n * @param target\r\n * \t\tThe square to occupy.\r\n */\r\npublic void occupy(nl.tudelft.jpacman.board.Square target) {\r\n    assert target != null;\r\n    if (square != null) {\r\n        square.remove(this);\r\n    }\r\n    square = target;\r\n    target.put(this);\r\n    assert invariant();\r\n}","docComment":"Occupies the target square iff this unit is allowed to as decided by\r\n{@link Square#isAccessibleTo(Unit)}.\r\n\r\n@param target\r\n\t\tThe square to occupy.\r\n","visibility":"public","simpleName":"occupy(nl.tudelft.jpacman.board.Square)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.occupants","properties":{"sourceText":"/**\r\n * The units occupying this square, in order of appearance.\r\n */\r\nprivate final java.util.List<nl.tudelft.jpacman.board.Unit> occupants;","visibility":"private","simpleName":"occupants","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$NpcMoveTask","properties":{"docComment":"A task that moves an NPC and reschedules itself after it finished.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"NpcMoveTask","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.Action","properties":{"docComment":"An action that can be executed.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Action","kind":"interface","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.DEFAULT_MAP","properties":{"sourceText":"public static final java.lang.String DEFAULT_MAP = \"/board.txt\";","visibility":"public","simpleName":"DEFAULT_MAP","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Ground","properties":{"docComment":"A ground square is a square that is accessible to anyone.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Ground","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).square","properties":{"simpleName":"square","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.serialVersionUID","properties":{"sourceText":"/**\r\n * Default serialisation UID.\r\n */\r\nprivate static final long serialVersionUID = 1L;","visibility":"private","simpleName":"serialVersionUID","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getPlayerFactory()","properties":{"sourceText":"/**\r\n *\r\n * @return A new factory using the sprites from {@link #getSpriteStore()}.\r\n */\r\nprotected nl.tudelft.jpacman.level.PlayerFactory getPlayerFactory() {\r\n    return new nl.tudelft.jpacman.level.PlayerFactory(getSpriteStore());\r\n}","docComment":"\r\n@return A new factory using the sprites from {@link #getSpriteStore()}.\r\n","visibility":"protected","simpleName":"getPlayerFactory()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.lastUpdate","properties":{"sourceText":"/**\r\n * The {@link System#currentTimeMillis()} stamp of the last update.\r\n */\r\nprivate long lastUpdate;","visibility":"private","simpleName":"lastUpdate","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.game","properties":{"sourceText":"/**\r\n * The game to display.\r\n */\r\nprivate final nl.tudelft.jpacman.game.Game game;","visibility":"private","simpleName":"game","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit).ghost","properties":{"simpleName":"ghost","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel","properties":{"docComment":"Panel displaying a game.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"BoardPanel","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String).resource","properties":{"simpleName":"resource","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).pointCalculator","properties":{"simpleName":"pointCalculator","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.getLevel()","properties":{"sourceText":"/**\r\n *\r\n * @return The level currently being played.\r\n */\r\npublic abstract nl.tudelft.jpacman.level.Level getLevel();","docComment":"\r\n@return The level currently being played.\r\n","visibility":"public","simpleName":"getLevel()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator).pointCalculator","properties":{"simpleName":"pointCalculator","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite).sprite","properties":{"simpleName":"sprite","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"/**\r\n * Method called whevener a player makes a successful move.\r\n * It can be used to update the player's points accordingly.\r\n *\r\n * @param player\r\n * \t\tThe player making a move.\r\n * @param direction\r\n * \t\tThe direction of the move.\r\n */\r\nvoid pacmanMoved(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.board.Direction direction);","docComment":"Method called whevener a player makes a successful move.\r\nIt can be used to update the player's points accordingly.\r\n\r\n@param player\r\n\t\tThe player making a move.\r\n@param direction\r\n\t\tThe direction of the move.\r\n","visibility":"public","simpleName":"pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite).sprite","properties":{"simpleName":"sprite","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder","properties":{"docComment":"Builder for the JPac-Man UI.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"PacManUiBuilder","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).pointCalculator","properties":{"simpleName":"pointCalculator","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculatorLoader.loadClassFromFile()","properties":{"sourceText":"private java.lang.Class loadClassFromFile() throws java.io.IOException, java.lang.ClassNotFoundException {\r\n    java.lang.String strategyToLoad = getCalculatorClassName();\r\n    if (\"DefaultPointCalculator\".equals(strategyToLoad)) {\r\n        return nl.tudelft.jpacman.points.DefaultPointCalculator.class;\r\n    }\r\n    java.net.URL[] urls = new java.net.URL[]{ getClass().getClassLoader().getResource(\"scoreplugins/\") };\r\n    try (java.net.URLClassLoader classLoader = new java.net.URLClassLoader(urls, getClass().getClassLoader())) {\r\n        return classLoader.loadClass(strategyToLoad);\r\n    }\r\n}","docComment":"","visibility":"private","simpleName":"loadClassFromFile()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.squareAt(int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerFactory.nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore","properties":{"simpleName":"spriteStore","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.updateObservers()","properties":{"sourceText":"/**\r\n * Updates the observers about the state of this level.\r\n */\r\nprivate void updateObservers() {\r\n    java.lang.Iterable<nl.tudelft.jpacman.level.Level.LevelObserver> observers = new java.util.ArrayList<>(this.observers);\r\n    if (!isAnyPlayerAlive()) {\r\n        for (nl.tudelft.jpacman.level.Level.LevelObserver observer : observers) {\r\n            observer.levelLost();\r\n        }\r\n    }\r\n    if (remainingPellets() == 0) {\r\n        for (nl.tudelft.jpacman.level.Level.LevelObserver observer : observers) {\r\n            observer.levelWon();\r\n        }\r\n    }\r\n}","docComment":"Updates the observers about the state of this level.\r\n","visibility":"private","simpleName":"updateObservers()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getGhostFactory()","properties":{"sourceText":"/**\r\n *\r\n * @return A new factory using the sprites from {@link #getSpriteStore()}.\r\n */\r\nprotected nl.tudelft.jpacman.npc.ghost.GhostFactory getGhostFactory() {\r\n    return new nl.tudelft.jpacman.npc.ghost.GhostFactory(getSpriteStore());\r\n}","docComment":"\r\n@return A new factory using the sprites from {@link #getSpriteStore()}.\r\n","visibility":"protected","simpleName":"getGhostFactory()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).pointCalculator","properties":{"simpleName":"pointCalculator","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.keyReleased(java.awt.event.KeyEvent).event","properties":{"simpleName":"event","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.getInheritance(java.lang.Class)","properties":{"sourceText":"/**\r\n * Returns a list of all classes and interfaces the class inherits.\r\n *\r\n * @param clazz\r\n * \t\tThe class to create a list of super classes and interfaces\r\n * \t\tfor.\r\n * @return A list of all classes and interfaces the class inherits.\r\n */\r\n@java.lang.SuppressWarnings(\"unchecked\")\r\nprivate java.util.List<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>> getInheritance(java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> clazz) {\r\n    java.util.List<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>> found = new java.util.ArrayList<>();\r\n    found.add(clazz);\r\n    int index = 0;\r\n    while (found.size() > index) {\r\n        java.lang.Class<?> current = found.get(index);\r\n        java.lang.Class<?> superClass = current.getSuperclass();\r\n        if ((superClass != null) && nl.tudelft.jpacman.board.Unit.class.isAssignableFrom(superClass)) {\r\n            found.add(((java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>) (superClass)));\r\n        }\r\n        for (java.lang.Class<?> classInterface : current.getInterfaces()) {\r\n            if (nl.tudelft.jpacman.board.Unit.class.isAssignableFrom(classInterface)) {\r\n                found.add(((java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>) (classInterface)));\r\n            }\r\n        }\r\n        index++;\r\n    } \r\n    return found;\r\n}","docComment":"Returns a list of all classes and interfaces the class inherits.\r\n\r\n@param clazz\r\n\t\tThe class to create a list of super classes and interfaces\r\n\t\tfor.\r\n@return A list of all classes and interfaces the class inherits.\r\n","visibility":"private","simpleName":"getInheritance(java.lang.Class)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.start()","properties":{"sourceText":"/**\r\n * Starts or resumes this level, allowing movement and (re)starting the\r\n * NPCs.\r\n */\r\npublic void start() {\r\n    synchronized(startStopLock) {\r\n        if (isInProgress()) {\r\n            return;\r\n        }\r\n        startNPCs();\r\n        inProgress = true;\r\n        updateObservers();\r\n    }\r\n}","docComment":"Starts or resumes this level, allowing movement and (re)starting the\r\nNPCs.\r\n","visibility":"public","simpleName":"start()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionMap","properties":{"docComment":"A table containing all (relevant) collisions between different types of\r\nunits.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"CollisionMap","kind":"interface","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player)","properties":{"sourceText":"/**\r\n * Registers a player on this level, assigning him to a starting position. A\r\n * player can only be registered once, registering a player again will have\r\n * no effect.\r\n *\r\n * @param player\r\n * \t\tThe player to register.\r\n */\r\npublic void registerPlayer(nl.tudelft.jpacman.level.Player player) {\r\n    assert player != null;\r\n    assert !startSquares.isEmpty();\r\n    if (players.contains(player)) {\r\n        return;\r\n    }\r\n    players.add(player);\r\n    nl.tudelft.jpacman.board.Square square = startSquares.get(startSquareIndex);\r\n    player.occupy(square);\r\n    startSquareIndex++;\r\n    startSquareIndex %= startSquares.size();\r\n}","docComment":"Registers a player on this level, assigning him to a starting position. A\r\nplayer can only be registered once, registering a player again will have\r\nno effect.\r\n\r\n@param player\r\n\t\tThe player to register.\r\n","visibility":"public","simpleName":"registerPlayer(nl.tudelft.jpacman.level.Player)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player","properties":{"docComment":"A player operated unit in our game.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Player","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Ground.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"@java.lang.Override\r\npublic boolean isAccessibleTo(nl.tudelft.jpacman.board.Unit unit) {\r\n    return true;\r\n}","docComment":"","visibility":"public","simpleName":"isAccessibleTo(nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map).spriteMap","properties":{"simpleName":"spriteMap","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite","properties":{"docComment":"Empty Sprite which does not contain any data. When this sprite is drawn,\r\nnothing happens.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"EmptySprite","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerFactory.getSprites()","properties":{"sourceText":"/**\r\n * The sprites created by the factory.\r\n *\r\n * @return The sprites for the player created.\r\n */\r\nprotected nl.tudelft.jpacman.sprite.PacManSprites getSprites() {\r\n    return sprites;\r\n}","docComment":"The sprites created by the factory.\r\n\r\n@return The sprites for the player created.\r\n","visibility":"protected","simpleName":"getSprites()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","properties":{"sourceText":"/**\r\n * Creates a new board panel that will display the provided game.\r\n *\r\n * @param game\r\n * \t\tThe game to display.\r\n */\r\nBoardPanel(nl.tudelft.jpacman.game.Game game) {\r\n    super();\r\n    assert game != null;\r\n    this.game = game;\r\n    nl.tudelft.jpacman.board.Board board = game.getLevel().getBoard();\r\n    int w = board.getWidth() * nl.tudelft.jpacman.ui.BoardPanel.SQUARE_SIZE;\r\n    int h = board.getHeight() * nl.tudelft.jpacman.ui.BoardPanel.SQUARE_SIZE;\r\n    java.awt.Dimension size = new java.awt.Dimension(w, h);\r\n    setMinimumSize(size);\r\n    setPreferredSize(size);\r\n}","docComment":"Creates a new board panel that will display the provided game.\r\n\r\n@param game\r\n\t\tThe game to display.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.PINKY","properties":{"sourceText":"private static final int PINKY = 2;","visibility":"private","simpleName":"PINKY","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","properties":{"sourceText":"/**\r\n * Creates a new {@link AnimatedSprite} from a base image.\r\n *\r\n * @param baseImage\r\n * \t\tThe base image to convert into an animation.\r\n * @param frames\r\n * \t\tThe amount of frames of the animation.\r\n * @param delay\r\n * \t\tThe delay between frames.\r\n * @param loop\r\n * \t\tWhether this sprite is a looping animation or not.\r\n * @return The animated sprite.\r\n */\r\npublic nl.tudelft.jpacman.sprite.AnimatedSprite createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite baseImage, int frames, int delay, boolean loop) {\r\n    assert baseImage != null;\r\n    assert frames > 0;\r\n    int frameWidth = baseImage.getWidth() / frames;\r\n    nl.tudelft.jpacman.sprite.Sprite[] animation = new nl.tudelft.jpacman.sprite.Sprite[frames];\r\n    for (int i = 0; i < frames; i++) {\r\n        animation[i] = baseImage.split(i * frameWidth, 0, frameWidth, baseImage.getHeight());\r\n    }\r\n    return new nl.tudelft.jpacman.sprite.AnimatedSprite(animation, delay, loop);\r\n}","docComment":"Creates a new {@link AnimatedSprite} from a base image.\r\n\r\n@param baseImage\r\n\t\tThe base image to convert into an animation.\r\n@param frames\r\n\t\tThe amount of frames of the animation.\r\n@param delay\r\n\t\tThe delay between frames.\r\n@param loop\r\n\t\tWhether this sprite is a looping animation or not.\r\n@return The animated sprite.\r\n","visibility":"public","simpleName":"createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.remainingPellets()","properties":{"sourceText":"/**\r\n * Counts the pellets remaining on the board.\r\n *\r\n * @return The amount of pellets remaining on the board.\r\n */\r\npublic int remainingPellets() {\r\n    nl.tudelft.jpacman.board.Board board = getBoard();\r\n    int pellets = 0;\r\n    for (int x = 0; x < board.getWidth(); x++) {\r\n        for (int y = 0; y < board.getHeight(); y++) {\r\n            for (nl.tudelft.jpacman.board.Unit unit : board.squareAt(x, y).getOccupants()) {\r\n                if (unit instanceof nl.tudelft.jpacman.level.Pellet) {\r\n                    pellets++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    assert pellets >= 0;\r\n    return pellets;\r\n}","docComment":"Counts the pellets remaining on the board.\r\n\r\n@return The amount of pellets remaining on the board.\r\n","visibility":"public","simpleName":"remainingPellets()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.levelMap","properties":{"sourceText":"private java.lang.String levelMap = nl.tudelft.jpacman.Launcher.DEFAULT_MAP;","visibility":"private","simpleName":"levelMap","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).delay","properties":{"simpleName":"delay","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Handles the collision between two colliding parties, if a suitable\r\n * collision handler is listed.\r\n *\r\n * @param <C1>\r\n * \t\tThe collider type.\r\n * @param <C2>\r\n * \t\tThe collidee (unit that was moved into) type.\r\n * @param collider\r\n * \t\tThe collider.\r\n * @param collidee\r\n * \t\tThe collidee.\r\n */\r\n@java.lang.SuppressWarnings(\"unchecked\")\r\n@java.lang.Override\r\npublic <C1 extends nl.tudelft.jpacman.board.Unit, C2 extends nl.tudelft.jpacman.board.Unit> void collide(C1 collider, C2 collidee) {\r\n    java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> colliderKey = getMostSpecificClass(handlers, collider.getClass());\r\n    if (colliderKey == null) {\r\n        return;\r\n    }\r\n    java.util.Map<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>, nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<?, ?>> map = handlers.get(colliderKey);\r\n    java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> collideeKey = getMostSpecificClass(map, collidee.getClass());\r\n    if (collideeKey == null) {\r\n        return;\r\n    }\r\n    nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<C1, C2> collisionHandler = ((nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<C1, C2>) (map.get(collideeKey)));\r\n    if (collisionHandler == null) {\r\n        return;\r\n    }\r\n    collisionHandler.handleCollision(collider, collidee);\r\n}","docComment":"Handles the collision between two colliding parties, if a suitable\r\ncollision handler is listed.\r\n\r\n@param <C1>\r\n\t\tThe collider type.\r\n@param <C2>\r\n\t\tThe collidee (unit that was moved into) type.\r\n@param collider\r\n\t\tThe collider.\r\n@param collidee\r\n\t\tThe collidee.\r\n","visibility":"public","simpleName":"collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit).collidedOn","properties":{"simpleName":"collidedOn","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet","properties":{"simpleName":"pellet","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map)","properties":{"sourceText":"/**\r\n * Creates a new \"Clyde\", a.k.a. \"Pokey\".\r\n *\r\n * @param spriteMap\r\n * \t\tThe sprites for this ghost.\r\n */\r\npublic Clyde(java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> spriteMap) {\r\n    super(spriteMap, nl.tudelft.jpacman.npc.ghost.Clyde.MOVE_INTERVAL, nl.tudelft.jpacman.npc.ghost.Clyde.INTERVAL_VARIATION);\r\n}","docComment":"Creates a new \"Clyde\", a.k.a. \"Pokey\".\r\n\r\n@param spriteMap\r\n\t\tThe sprites for this ghost.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Wall.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit","properties":{"simpleName":"unit","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculatorLoader","properties":{"docComment":"The responsibility of this loader is to obtain the appropriate points calculator.\r\nBy default the {@link DefaultPointCalculator} is returned.\r\n","simpleName":"PointCalculatorLoader","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).spriteMap","properties":{"simpleName":"spriteMap","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension).board","properties":{"simpleName":"board","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","properties":{"sourceText":"@java.lang.Override\r\npublic void collidedWithAGhost(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.npc.Ghost ghost) {\r\n    // no points for colliding with a ghost\r\n}","docComment":"","visibility":"public","simpleName":"collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory","properties":{"docComment":"Factory that provides Game objects.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"GameFactory","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost","properties":{"docComment":"A non-player unit.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Ghost","kind":"abstract","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class).key","properties":{"simpleName":"key","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).startPositions","properties":{"simpleName":"startPositions","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.getDeltaX()","properties":{"sourceText":"/**\r\n *\r\n * @return The delta x (width difference) for a single step in this\r\ndirection, in a matrix with 0,0 (x,y) as its top-left element.\r\n */\r\npublic int getDeltaX() {\r\n    return deltaX;\r\n}","docComment":"\r\n@return The delta x (width difference) for a single step in this\r\ndirection, in a matrix with 0,0 (x,y) as its top-left element.\r\n","visibility":"public","simpleName":"getDeltaX()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable).message","properties":{"simpleName":"message","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Handles this collision by flipping the collider and collidee, making\r\n * it compatible with the initial collision.\r\n */\r\n@java.lang.Override\r\npublic void handleCollision(C1 collider, C2 collidee) {\r\n    handler.handleCollision(collidee, collider);\r\n}","docComment":"Handles this collision by flipping the collider and collidee, making\r\nit compatible with the initial collision.\r\n","visibility":"public","simpleName":"handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostColor.RED","properties":{"sourceText":"/**\r\n * Shadow, a.k.a. Blinky.\r\n */\r\nRED","visibility":"public","simpleName":"RED","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory","properties":{"docComment":"Factory that creates ghosts.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"GhostFactory","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory.sprites","properties":{"sourceText":"/**\r\n * The sprite store providing the sprites for the background.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.PacManSprites sprites;","visibility":"private","simpleName":"sprites","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Pinky.INTERVAL_VARIATION","properties":{"sourceText":"/**\r\n * The variation in intervals, this makes the ghosts look more dynamic and\r\n * less predictable.\r\n */\r\nprivate static final int INTERVAL_VARIATION = 50;","visibility":"private","simpleName":"INTERVAL_VARIATION","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getGameFactory()","properties":{"sourceText":"/**\r\n *\r\n * @return A new factory using the players from {@link #getPlayerFactory()}.\r\n */\r\nprotected nl.tudelft.jpacman.game.GameFactory getGameFactory() {\r\n    return new nl.tudelft.jpacman.game.GameFactory(getPlayerFactory());\r\n}","docComment":"\r\n@return A new factory using the players from {@link #getPlayerFactory()}.\r\n","visibility":"protected","simpleName":"getGameFactory()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).c","properties":{"simpleName":"c","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.getBoardFactory()","properties":{"sourceText":"/**\r\n *\r\n * @return A new board factory using the sprite store from\r\n{@link #getSpriteStore()}.\r\n */\r\nprotected nl.tudelft.jpacman.board.BoardFactory getBoardFactory() {\r\n    return new nl.tudelft.jpacman.board.BoardFactory(getSpriteStore());\r\n}","docComment":"\r\n@return A new board factory using the sprite store from\r\n{@link #getSpriteStore()}.\r\n","visibility":"protected","simpleName":"getBoardFactory()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)","properties":{"sourceText":"/**\r\n * Creates a new animating sprite that will change frames every interval. By\r\n * default the sprite is not animating.\r\n *\r\n * @param frames\r\n * \t\tThe frames of this animation.\r\n * @param delay\r\n * \t\tThe delay between frames.\r\n * @param loop\r\n * \t\tWhether or not this sprite should be looping.\r\n */\r\npublic AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[] frames, int delay, boolean loop) {\r\n    this(frames, delay, loop, false);\r\n}","docComment":"Creates a new animating sprite that will change frames every interval. By\r\ndefault the sprite is not animating.\r\n\r\n@param frames\r\n\t\tThe frames of this animation.\r\n@param delay\r\n\t\tThe delay between frames.\r\n@param loop\r\n\t\tWhether or not this sprite should be looping.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map)","properties":{"sourceText":"/**\r\n * Creates a new \"Blinky\", a.k.a. \"Shadow\".\r\n *\r\n * @param spriteMap\r\n * \t\tThe sprites for this ghost.\r\n */\r\n// TODO Blinky should speed up when there are a few pellets left, but he\r\n// has no way to find out how many there are.\r\npublic Blinky(java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> spriteMap) {\r\n    super(spriteMap, nl.tudelft.jpacman.npc.ghost.Blinky.MOVE_INTERVAL, nl.tudelft.jpacman.npc.ghost.Blinky.INTERVAL_VARIATION);\r\n}","docComment":"Creates a new \"Blinky\", a.k.a. \"Shadow\".\r\n\r\n@param spriteMap\r\n\t\tThe sprites for this ghost.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).ghosts","properties":{"simpleName":"ghosts","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.start()","properties":{"sourceText":"/**\r\n * Starts or resumes the game.\r\n */\r\npublic void start() {\r\n    synchronized(progressLock) {\r\n        if (isInProgress()) {\r\n            return;\r\n        }\r\n        if (getLevel().isAnyPlayerAlive() && (getLevel().remainingPellets() > 0)) {\r\n            inProgress = true;\r\n            getLevel().addObserver(this);\r\n            getLevel().start();\r\n        }\r\n    }\r\n}","docComment":"Starts or resumes the game.\r\n","visibility":"public","simpleName":"start()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map).spriteMap","properties":{"simpleName":"spriteMap","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.start()","properties":{"sourceText":"/**\r\n * Starts the \"engine\", the thread that redraws the interface at set\r\n * intervals.\r\n */\r\npublic void start() {\r\n    setVisible(true);\r\n    java.util.concurrent.ScheduledExecutorService service = java.util.concurrent.Executors.newSingleThreadScheduledExecutor();\r\n    service.scheduleAtFixedRate(this::nextFrame, 0, nl.tudelft.jpacman.ui.PacManUI.FRAME_INTERVAL, java.util.concurrent.TimeUnit.MILLISECONDS);\r\n}","docComment":"Starts the \"engine\", the thread that redraws the interface at set\r\nintervals.\r\n","visibility":"public","simpleName":"start()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$LevelObserver.levelLost()","properties":{"sourceText":"/**\r\n * The level has been lost. Typically the level should be stopped when\r\n * this event is received.\r\n */\r\nvoid levelLost();","docComment":"The level has been lost. Typically the level should be stopped when\r\nthis event is received.\r\n","visibility":"public","simpleName":"levelLost()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).y","properties":{"simpleName":"y","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost).ghosts","properties":{"simpleName":"ghosts","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.inProgress","properties":{"sourceText":"/**\r\n * <code>true<\/code> iff this level is currently in progress, i.e. players\r\n * and NPCs can move.\r\n */\r\nprivate boolean inProgress;","visibility":"private","simpleName":"inProgress","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][]).grid","properties":{"simpleName":"grid","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).ghostFactory","properties":{"simpleName":"ghostFactory","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost).npc","properties":{"simpleName":"npc","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.animating","properties":{"sourceText":"/**\r\n * Whether this sprite is currently animating or not.\r\n */\r\nprivate boolean animating;","visibility":"private","simpleName":"animating","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.neighbours","properties":{"sourceText":"/**\r\n * The collection of squares adjacent to this square.\r\n */\r\nprivate final java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.board.Square> neighbours;","visibility":"private","simpleName":"neighbours","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"/**\r\n * Returns the square adjacent to this square.\r\n *\r\n * @param direction\r\n * \t\tThe direction of the adjacent square.\r\n * @return The adjacent square in the given direction.\r\n */\r\npublic nl.tudelft.jpacman.board.Square getSquareAt(nl.tudelft.jpacman.board.Direction direction) {\r\n    return neighbours.get(direction);\r\n}","docComment":"Returns the square adjacent to this square.\r\n\r\n@param direction\r\n\t\tThe direction of the adjacent square.\r\n@return The adjacent square in the given direction.\r\n","visibility":"public","simpleName":"getSquareAt(nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet","properties":{"docComment":"A pellet, one of the little dots Pac-Man has to collect.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Pellet","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String)","properties":{"sourceText":"/**\r\n * A configuration exception with a direct message.\r\n *\r\n * @param message\r\n * \t\tThe exception message.\r\n */\r\npublic PacmanConfigurationException(java.lang.String message) {\r\n    super(message);\r\n}","docComment":"A configuration exception with a direct message.\r\n\r\n@param message\r\n\t\tThe exception message.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.deltaY","properties":{"sourceText":"/**\r\n * The delta y (height difference) to an element in the direction in a grid\r\n * with 0,0 (x,y) as its top-left element.\r\n */\r\nprivate final int deltaY;","visibility":"private","simpleName":"deltaY","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][]).map","properties":{"simpleName":"map","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"private void playerColliding(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.board.Unit collidedOn) {\r\n    if (collidedOn instanceof nl.tudelft.jpacman.npc.Ghost) {\r\n        playerVersusGhost(player, ((nl.tudelft.jpacman.npc.Ghost) (collidedOn)));\r\n    }\r\n    if (collidedOn instanceof nl.tudelft.jpacman.level.Pellet) {\r\n        playerVersusPellet(player, ((nl.tudelft.jpacman.level.Pellet) (collidedOn)));\r\n    }\r\n}","docComment":"","visibility":"private","simpleName":"playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.handlers","properties":{"sourceText":"/**\r\n * The collection of collision handlers.\r\n */\r\nprivate final java.util.Map<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>, java.util.Map<java.lang.Class<? extends nl.tudelft.jpacman.board.Unit>, nl.tudelft.jpacman.level.CollisionInteractionMap.CollisionHandler<?, ?>>> handlers;","visibility":"private","simpleName":"handlers","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.levelWon()","properties":{"sourceText":"@java.lang.Override\r\npublic void levelWon() {\r\n    stop();\r\n}","docComment":"","visibility":"public","simpleName":"levelWon()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.nl.tudelft.jpacman.sprite.EmptySprite()","properties":{"sourceText":"EmptySprite() {\r\n}","docComment":"","visibility":"public","simpleName":"nl.tudelft.jpacman.sprite.EmptySprite()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.pointCalculator","properties":{"sourceText":"/**\r\n * The way to calculate points upon collisions.\r\n */\r\nprivate final nl.tudelft.jpacman.points.PointCalculator pointCalculator;","visibility":"private","simpleName":"pointCalculator","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()","properties":{"sourceText":"/**\r\n *\r\n * @return The sprite for the ground.\r\n */\r\npublic nl.tudelft.jpacman.sprite.Sprite getGroundSprite() {\r\n    return loadSprite(\"/sprite/floor.png\");\r\n}","docComment":"\r\n@return The sprite for the ground.\r\n","visibility":"public","simpleName":"getGroundSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Wall.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"@java.lang.Override\r\npublic boolean isAccessibleTo(nl.tudelft.jpacman.board.Unit unit) {\r\n    return false;\r\n}","docComment":"","visibility":"public","simpleName":"isAccessibleTo(nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).delay","properties":{"simpleName":"delay","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player)","properties":{"sourceText":"/**\r\n * Format the score of a given player.\r\n *\r\n * @param player\r\n * \t\tThe player and its score\r\n * @return Formatted score.\r\n */\r\njava.lang.String format(nl.tudelft.jpacman.level.Player player);","docComment":"Format the score of a given player.\r\n\r\n@param player\r\n\t\tThe player and its score\r\n@return Formatted score.\r\n","visibility":"public","simpleName":"format(nl.tudelft.jpacman.level.Player)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level","properties":{"docComment":"A level of Pac-Man. A level consists of the board with the players and the\r\nAIs on it.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Level","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square)","properties":{"sourceText":"/**\r\n * Verifies that all occupants on this square have indeed listed this square\r\n * as the square they are currently occupying.\r\n *\r\n * @return <code>true<\/code> iff all occupants of this square have this\r\nsquare listed as the square they are currently occupying.\r\n */\r\nprotected final boolean invariant(nl.tudelft.jpacman.board.Square this) {\r\n    for (nl.tudelft.jpacman.board.Unit occupant : occupants) {\r\n        if (occupant.hasSquare() && (occupant.getSquare() != this)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}","docComment":"Verifies that all occupants on this square have indeed listed this square\r\nas the square they are currently occupying.\r\n\r\n@return <code>true<\/code> iff all occupants of this square have this\r\nsquare listed as the square they are currently occupying.\r\n","visibility":"protected","simpleName":"invariant(nl.tudelft.jpacman.board.Square)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder)","properties":{"sourceText":"/**\r\n * Adds key events UP, DOWN, LEFT and RIGHT to a game.\r\n *\r\n * @param builder\r\n * \t\tThe {@link PacManUiBuilder} that will provide the UI.\r\n */\r\nprotected void addSinglePlayerKeys(final nl.tudelft.jpacman.ui.PacManUiBuilder builder) {\r\n    builder.addKey(java.awt.event.KeyEvent.VK_UP, moveTowardsDirection(nl.tudelft.jpacman.board.Direction.NORTH)).addKey(java.awt.event.KeyEvent.VK_DOWN, moveTowardsDirection(nl.tudelft.jpacman.board.Direction.SOUTH)).addKey(java.awt.event.KeyEvent.VK_LEFT, moveTowardsDirection(nl.tudelft.jpacman.board.Direction.WEST)).addKey(java.awt.event.KeyEvent.VK_RIGHT, moveTowardsDirection(nl.tudelft.jpacman.board.Direction.EAST));\r\n}","docComment":"Adds key events UP, DOWN, LEFT and RIGHT to a game.\r\n\r\n@param builder\r\n\t\tThe {@link PacManUiBuilder} that will provide the UI.\r\n","visibility":"protected","simpleName":"addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.ghostFact","properties":{"sourceText":"/**\r\n * The factory providing ghosts.\r\n */\r\nprivate final nl.tudelft.jpacman.npc.ghost.GhostFactory ghostFact;","visibility":"private","simpleName":"ghostFact","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createClyde()","properties":{"sourceText":"/**\r\n * Creates a new Clyde / Pokey, the orange Ghost.\r\n *\r\n * @see Clyde\r\n * @return A new Clyde.\r\n */\r\npublic nl.tudelft.jpacman.npc.Ghost createClyde() {\r\n    return new nl.tudelft.jpacman.npc.ghost.Clyde(sprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor.ORANGE));\r\n}","docComment":"Creates a new Clyde / Pokey, the orange Ghost.\r\n\r\n@see Clyde\r\n@return A new Clyde.\r\n","visibility":"public","simpleName":"createClyde()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculatorLoader.load()","properties":{"sourceText":"/**\r\n * Load a points calculator and return it.\r\n *\r\n * @return The (dynamically loaded) points calculator.\r\n */\r\npublic nl.tudelft.jpacman.points.PointCalculator load() {\r\n    try {\r\n        if (nl.tudelft.jpacman.points.PointCalculatorLoader.clazz == null) {\r\n            nl.tudelft.jpacman.points.PointCalculatorLoader.clazz = loadClassFromFile();\r\n        }\r\n        return ((nl.tudelft.jpacman.points.PointCalculator) (nl.tudelft.jpacman.points.PointCalculatorLoader.clazz.newInstance()));\r\n    } catch (java.lang.Exception e) {\r\n        throw new java.lang.RuntimeException(\"Could not dynamically load the points calculator.\", e);\r\n    }\r\n}","docComment":"Load a points calculator and return it.\r\n\r\n@return The (dynamically loaded) points calculator.\r\n","visibility":"public","simpleName":"load()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square).target","properties":{"simpleName":"target","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory.createWall()","properties":{"sourceText":"/**\r\n * Creates a new square that cannot be occupied by any unit.\r\n *\r\n * @return A new square that cannot be occupied by any unit.\r\n */\r\npublic nl.tudelft.jpacman.board.Square createWall() {\r\n    return new nl.tudelft.jpacman.board.BoardFactory.Wall(sprites.getWallSprite());\r\n}","docComment":"Creates a new square that cannot be occupied by any unit.\r\n\r\n@return A new square that cannot be occupied by any unit.\r\n","visibility":"public","simpleName":"createWall()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostColor","properties":{"docComment":"A list of supported ghost colors.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"GhostColor","kind":"enum","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.leaveSquare()","properties":{"sourceText":"/**\r\n * Leaves the currently occupying square, thus removing this unit from the board.\r\n */\r\npublic void leaveSquare() {\r\n    if (square != null) {\r\n        square.remove(this);\r\n        square = null;\r\n    }\r\n    assert invariant();\r\n}","docComment":"Leaves the currently occupying square, thus removing this unit from the board.\r\n","visibility":"public","simpleName":"leaveSquare()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable).cause","properties":{"simpleName":"cause","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.setDirection(nl.tudelft.jpacman.board.Direction)","properties":{"sourceText":"/**\r\n * Sets this unit to face the new direction.\r\n *\r\n * @param newDirection\r\n * \t\tThe new direction this unit is facing.\r\n */\r\npublic void setDirection(nl.tudelft.jpacman.board.Direction newDirection) {\r\n    this.direction = newDirection;\r\n}","docComment":"Sets this unit to face the new direction.\r\n\r\n@param newDirection\r\n\t\tThe new direction this unit is facing.\r\n","visibility":"public","simpleName":"setDirection(nl.tudelft.jpacman.board.Direction)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.serialVersionUID","properties":{"sourceText":"/**\r\n * Default serialisation ID.\r\n */\r\nprivate static final long serialVersionUID = 1L;","visibility":"private","simpleName":"serialVersionUID","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.boardPanel","properties":{"sourceText":"/**\r\n * The panel displaying the game.\r\n */\r\nprivate final nl.tudelft.jpacman.ui.BoardPanel boardPanel;","visibility":"private","simpleName":"boardPanel","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collidee","properties":{"simpleName":"collidee","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.launch()","properties":{"sourceText":"/**\r\n * Creates and starts a JPac-Man game.\r\n */\r\npublic void launch() {\r\n    makeGame();\r\n    nl.tudelft.jpacman.ui.PacManUiBuilder builder = new nl.tudelft.jpacman.ui.PacManUiBuilder().withDefaultButtons();\r\n    addSinglePlayerKeys(builder);\r\n    pacManUI = builder.build(getGame());\r\n    pacManUI.start();\r\n}","docComment":"Creates and starts a JPac-Man game.\r\n","visibility":"public","simpleName":"launch()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.DEFAULT_SCORE_FORMATTER","properties":{"sourceText":"/**\r\n * The default way in which the score is shown.\r\n */\r\npublic static final nl.tudelft.jpacman.ui.ScorePanel.ScoreFormatter DEFAULT_SCORE_FORMATTER = (nl.tudelft.jpacman.level.Player player) -> java.lang.String.format(\"Score: %3d\", player.getScore());","visibility":"public","simpleName":"DEFAULT_SCORE_FORMATTER","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.getInheritance(java.lang.Class).clazz","properties":{"simpleName":"clazz","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.withDefaultButtons()","properties":{"sourceText":"/**\r\n * Adds a start and stop button to the UI. The actual actions for these\r\n * buttons will be added upon building the UI.\r\n *\r\n * @return The builder.\r\n */\r\npublic nl.tudelft.jpacman.ui.PacManUiBuilder withDefaultButtons() {\r\n    defaultButtons = true;\r\n    buttons.put(nl.tudelft.jpacman.ui.PacManUiBuilder.START_CAPTION, null);\r\n    buttons.put(nl.tudelft.jpacman.ui.PacManUiBuilder.STOP_CAPTION, null);\r\n    return this;\r\n}","docComment":"Adds a start and stop button to the UI. The actual actions for these\r\nbuttons will be added upon building the UI.\r\n\r\n@return The builder.\r\n","visibility":"public","simpleName":"withDefaultButtons()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$NpcMoveTask.service","properties":{"sourceText":"/**\r\n * The service executing the task.\r\n */\r\nprivate final java.util.concurrent.ScheduledExecutorService service;","visibility":"private","simpleName":"service","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.GhostFactory.sprites","properties":{"sourceText":"/**\r\n * The sprite store containing the ghost sprites.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.PacManSprites sprites;","visibility":"private","simpleName":"sprites","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite).points","properties":{"simpleName":"points","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStopButton(nl.tudelft.jpacman.game.Game).game","properties":{"simpleName":"game","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite","properties":{"docComment":"Visual representation of some object.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Sprite","kind":"interface","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square).directions","properties":{"simpleName":"directions","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.put(nl.tudelft.jpacman.board.Unit).occupant","properties":{"simpleName":"occupant","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter","properties":{"simpleName":"scoreFormatter","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Clyde","properties":{"docComment":"<p>\r\nAn implementation of the classic Pac-Man ghost Clyde.\r\n<\/p>\r\n<p>\r\nPokey needs a new nickname because out of all the ghosts,\r\nClyde is the least likely to \"C'lyde\" with Pac-Man. Clyde is always the last\r\nghost out of the regenerator, and the loner of the gang, usually off doing\r\nhis own thing when not patrolling the bottom-left corner of the maze. His\r\nbehavior is very random, so while he's not likely to be following you in hot\r\npursuit with the other ghosts, he is a little less predictable, and still a\r\ndanger.\r\n<\/p>\r\n<p>\r\n<b>AI:<\/b> Clyde has two basic AIs, one for when he's far from Pac-Man, and\r\none for when he is near to Pac-Man. \r\nWhen Clyde is far away from Pac-Man (beyond eight grid spaces),\r\nClyde behaves very much like Blinky, trying to move to Pac-Man's exact\r\nlocation. However, when Clyde gets within eight grid spaces of Pac-Man, he\r\nautomatically changes his behavior and runs away.\r\n<\/p>\r\n<p>\r\nSource: http://strategywiki.org/wiki/Pac-Man/Getting_Started\r\n<\/p>\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Clyde","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculatorLoader.nl.tudelft.jpacman.points.PointCalculatorLoader()","properties":{"sourceText":"PointCalculatorLoader() {\r\n}","docComment":"","visibility":"public","simpleName":"nl.tudelft.jpacman.points.PointCalculatorLoader()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory.nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore","properties":{"simpleName":"spriteStore","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet","properties":{"simpleName":"pellet","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.image","properties":{"sourceText":"/**\r\n * Internal image.\r\n */\r\nprivate final java.awt.Image image;","visibility":"private","simpleName":"image","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Blinky.INTERVAL_VARIATION","properties":{"sourceText":"/**\r\n * The variation in intervals, this makes the ghosts look more dynamic and\r\n * less predictable.\r\n */\r\nprivate static final int INTERVAL_VARIATION = 50;","visibility":"private","simpleName":"INTERVAL_VARIATION","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.main(java.lang.String[])","properties":{"sourceText":"/**\r\n * Main execution method for the Launcher.\r\n *\r\n * @param args\r\n * \t\tThe command line arguments - which are ignored.\r\n * @throws IOException\r\n * \t\tWhen a resource could not be read.\r\n */\r\npublic static void main(java.lang.String[] args) throws java.io.IOException {\r\n    new nl.tudelft.jpacman.Launcher().launch();\r\n}","docComment":"Main execution method for the Launcher.\r\n\r\n@param args\r\n\t\tThe command line arguments - which are ignored.\r\n@throws IOException\r\n\t\tWhen a resource could not be read.\r\n","visibility":"public","simpleName":"main(java.lang.String[])","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","properties":{"sourceText":"/**\r\n * Creates a new board from a grid of cells and connects it.\r\n *\r\n * @param grid\r\n * \t\tThe square grid of cells, in which grid[x][y] corresponds to\r\n * \t\tthe square at position x,y.\r\n * @return A new board, wrapping a grid of connected cells.\r\n */\r\npublic nl.tudelft.jpacman.board.Board createBoard(nl.tudelft.jpacman.board.Square[][] grid) {\r\n    assert grid != null;\r\n    nl.tudelft.jpacman.board.Board board = new nl.tudelft.jpacman.board.Board(grid);\r\n    int width = board.getWidth();\r\n    int height = board.getHeight();\r\n    for (int x = 0; x < width; x++) {\r\n        for (int y = 0; y < height; y++) {\r\n            nl.tudelft.jpacman.board.Square square = grid[x][y];\r\n            for (nl.tudelft.jpacman.board.Direction dir : nl.tudelft.jpacman.board.Direction.values()) {\r\n                int dirX = ((width + x) + dir.getDeltaX()) % width;\r\n                int dirY = ((height + y) + dir.getDeltaY()) % height;\r\n                nl.tudelft.jpacman.board.Square neighbour = grid[dirX][dirY];\r\n                square.link(neighbour, dir);\r\n            }\r\n        }\r\n    }\r\n    return board;\r\n}","docComment":"Creates a new board from a grid of cells and connects it.\r\n\r\n@param grid\r\n\t\tThe square grid of cells, in which grid[x][y] corresponds to\r\n\t\tthe square at position x,y.\r\n@return A new board, wrapping a grid of connected cells.\r\n","visibility":"public","simpleName":"createBoard(nl.tudelft.jpacman.board.Square[][])","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Ground.background","properties":{"sourceText":"/**\r\n * The background for this square.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.Sprite background;","visibility":"private","simpleName":"background","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.getDirection()","properties":{"sourceText":"/**\r\n * Returns the current direction this unit is facing.\r\n *\r\n * @return The current direction this unit is facing.\r\n */\r\npublic nl.tudelft.jpacman.board.Direction getDirection() {\r\n    return this.direction;\r\n}","docComment":"Returns the current direction this unit is facing.\r\n\r\n@return The current direction this unit is facing.\r\n","visibility":"public","simpleName":"getDirection()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.getPlayers()","properties":{"sourceText":"@java.lang.Override\r\npublic java.util.List<nl.tudelft.jpacman.level.Player> getPlayers() {\r\n    return com.google.common.collect.ImmutableList.of(player);\r\n}","docComment":"","visibility":"public","simpleName":"getPlayers()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).square","properties":{"simpleName":"square","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action).action","properties":{"simpleName":"action","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","properties":{"sourceText":"/**\r\n * Creates the default collisions Player-Ghost and Player-Pellet.\r\n *\r\n * @return The collision map containing collisions for Player-Ghost and\r\nPlayer-Pellet.\r\n */\r\nprivate nl.tudelft.jpacman.level.CollisionInteractionMap defaultCollisions() {\r\n    nl.tudelft.jpacman.level.CollisionInteractionMap collisionMap = new nl.tudelft.jpacman.level.CollisionInteractionMap();\r\n    collisionMap.onCollision(nl.tudelft.jpacman.level.Player.class, nl.tudelft.jpacman.npc.Ghost.class, (player, ghost) -> {\r\n        pointCalculator.collidedWithAGhost(player, ghost);\r\n        player.setAlive(false);\r\n        player.setKiller(ghost);\r\n    });\r\n    collisionMap.onCollision(nl.tudelft.jpacman.level.Player.class, nl.tudelft.jpacman.level.Pellet.class, (player, pellet) -> {\r\n        pointCalculator.consumedAPellet(player, pellet);\r\n        pellet.leaveSquare();\r\n    });\r\n    return collisionMap;\r\n}","docComment":"Creates the default collisions Player-Ghost and Player-Pellet.\r\n\r\n@return The collision map containing collisions for Player-Ghost and\r\nPlayer-Pellet.\r\n","visibility":"private","simpleName":"defaultCollisions()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","properties":{"sourceText":"/**\r\n * Provide formatter for the score.\r\n *\r\n * @param scoreFormatter\r\n * \t\tThe score formatter to be used.\r\n * @return The builder.\r\n */\r\npublic nl.tudelft.jpacman.ui.PacManUiBuilder withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel.ScoreFormatter scoreFormatter) {\r\n    this.scoreFormatter = scoreFormatter;\r\n    return this;\r\n}","docComment":"Provide formatter for the score.\r\n\r\n@param scoreFormatter\r\n\t\tThe score formatter to be used.\r\n@return The builder.\r\n","visibility":"public","simpleName":"withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.square","properties":{"sourceText":"/**\r\n * The square associated with this node.\r\n */\r\nprivate final nl.tudelft.jpacman.board.Square square;","visibility":"private","simpleName":"square","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet.image","properties":{"sourceText":"/**\r\n * The sprite of this unit.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.Sprite image;","visibility":"private","simpleName":"image","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map)","properties":{"sourceText":"/**\r\n * Create a new key listener based on a set of keyCode-action pairs.\r\n *\r\n * @param keyMappings\r\n * \t\tThe mappings of keyCode to action.\r\n */\r\nPacKeyListener(java.util.Map<java.lang.Integer, nl.tudelft.jpacman.ui.Action> keyMappings) {\r\n    assert keyMappings != null;\r\n    this.mappings = keyMappings;\r\n}","docComment":"Create a new key listener based on a set of keyCode-action pairs.\r\n\r\n@param keyMappings\r\n\t\tThe mappings of keyCode to action.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square","properties":{"docComment":"A square on a {@link Board}, which can (or cannot, depending on the type) be\r\noccupied by units.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Square","kind":"abstract","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.inProgress","properties":{"sourceText":"/**\r\n * <code>true<\/code> if the game is in progress.\r\n */\r\nprivate boolean inProgress;","visibility":"private","simpleName":"inProgress","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.makeGame()","properties":{"sourceText":"/**\r\n * Creates a new game using the level from {@link #makeLevel()}.\r\n *\r\n * @return a new Game.\r\n */\r\npublic nl.tudelft.jpacman.game.Game makeGame() {\r\n    nl.tudelft.jpacman.game.GameFactory gf = getGameFactory();\r\n    nl.tudelft.jpacman.level.Level level = makeLevel();\r\n    game = gf.createSinglePlayerGame(level, loadPointCalculator());\r\n    return game;\r\n}","docComment":"Creates a new game using the level from {@link #makeLevel()}.\r\n\r\n@return a new Game.\r\n","visibility":"public","simpleName":"makeGame()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game).game","properties":{"simpleName":"game","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","properties":{"simpleName":"handler","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.nl.tudelft.jpacman.ui.ScorePanel(java.util.List)","properties":{"sourceText":"/**\r\n * Creates a new score panel with a column for each player.\r\n *\r\n * @param players\r\n * \t\tThe players to display the scores of.\r\n */\r\npublic ScorePanel(java.util.List<nl.tudelft.jpacman.level.Player> players) {\r\n    super();\r\n    assert players != null;\r\n    setLayout(new java.awt.GridLayout(2, players.size()));\r\n    for (int i = 1; i <= players.size(); i++) {\r\n        add(new javax.swing.JLabel(\"Player \" + i, javax.swing.JLabel.CENTER));\r\n    }\r\n    scoreLabels = new java.util.LinkedHashMap<>();\r\n    for (nl.tudelft.jpacman.level.Player player : players) {\r\n        javax.swing.JLabel scoreLabel = new javax.swing.JLabel(\"0\", javax.swing.JLabel.CENTER);\r\n        scoreLabels.put(player, scoreLabel);\r\n        add(scoreLabel);\r\n    }\r\n}","docComment":"Creates a new score panel with a column for each player.\r\n\r\n@param players\r\n\t\tThe players to display the scores of.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.ui.ScorePanel(java.util.List)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getSquare()","properties":{"sourceText":"/**\r\n *\r\n * @return The square for this node.\r\n */\r\nprivate nl.tudelft.jpacman.board.Square getSquare() {\r\n    return square;\r\n}","docComment":"\r\n@return The square for this node.\r\n","visibility":"private","simpleName":"getSquare()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Blinky","properties":{"docComment":"<p>\r\nAn implementation of the classic Pac-Man ghost Shadow.\r\n<\/p>\r\n<p>\r\nNickname: Blinky. As his name implies, Shadow is usually a constant shadow on\r\nPac-Man's tail. When he's not patrolling the top-right corner of the maze,\r\nShadow tries to find the quickest route to Pac-Man's position. Despite the\r\nfact that Pinky's real name is Speedy, Shadow is actually the fastest of the\r\nghosts because of when there are only a few pellets left, Blinky drastically\r\nspeeds up, which can make him quite deadly. In the original Japanese version,\r\nhis name is Oikake/Akabei.\r\n<\/p>\r\n<p>\r\n<b>AI:<\/b> When the ghosts are not patrolling in their home corners (Blinky:\r\ntop-right, Pinky: top-left, Inky: bottom-right, Clyde: bottom-left), Blinky\r\nwill attempt to shorten the distance between Pac-Man and himself. If he has\r\nto choose between shortening the horizontal or vertical distance, he will\r\nchoose to shorten whichever is greatest. For example, if Pac-Man is four grid\r\nspaces to the left, and seven grid spaces above Blinky, he'll try to move up\r\ntowards Pac-Man before he moves to the left.\r\n<\/p>\r\n<p>\r\nSource: http://strategywiki.org/wiki/Pac-Man/Getting_Started\r\n<\/p>\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Blinky","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerFactory.nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites)","properties":{"sourceText":"/**\r\n * Creates a new player factory.\r\n *\r\n * @param spriteStore\r\n * \t\tThe sprite store containing the Pac-Man sprites.\r\n */\r\npublic PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites spriteStore) {\r\n    this.sprites = spriteStore;\r\n}","docComment":"Creates a new player factory.\r\n\r\n@param spriteStore\r\n\t\tThe sprite store containing the Pac-Man sprites.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square).currentLocation","properties":{"simpleName":"currentLocation","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream)","properties":{"sourceText":"/**\r\n * Parses the provided input stream as a character stream and passes it\r\n * result to {@link #parseMap(List)}.\r\n *\r\n * @param source\r\n * \t\tThe input stream that will be read.\r\n * @return The parsed level as represented by the text on the input stream.\r\n * @throws IOException\r\n * \t\twhen the source could not be read.\r\n */\r\npublic nl.tudelft.jpacman.level.Level parseMap(java.io.InputStream source) throws java.io.IOException {\r\n    try (java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(source, \"UTF-8\"))) {\r\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<>();\r\n        while (reader.ready()) {\r\n            lines.add(reader.readLine());\r\n        } \r\n        return parseMap(lines);\r\n    }\r\n}","docComment":"Parses the provided input stream as a character stream and passes it\r\nresult to {@link #parseMap(List)}.\r\n\r\n@param source\r\n\t\tThe input stream that will be read.\r\n@return The parsed level as represented by the text on the input stream.\r\n@throws IOException\r\n\t\twhen the source could not be read.\r\n","visibility":"public","simpleName":"parseMap(java.io.InputStream)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).board","properties":{"simpleName":"board","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener","properties":{"docComment":"A key listener based on a set of keyCode-action pairs.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"PacKeyListener","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game).game","properties":{"simpleName":"game","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map)","properties":{"sourceText":"/**\r\n * Creates a new random ghost.\r\n *\r\n * @param ghostSprite\r\n * \t\tThe sprite for the ghost.\r\n */\r\nRandomGhost(java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> ghostSprite) {\r\n    super(ghostSprite, ((int) (nl.tudelft.jpacman.level.LevelFactory.RandomGhost.DELAY)), 0);\r\n}","docComment":"Creates a new random ghost.\r\n\r\n@param ghostSprite\r\n\t\tThe sprite for the ghost.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action).caption","properties":{"simpleName":"caption","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.currentSprite()","properties":{"sourceText":"/**\r\n *\r\n * @return The frame of the current index.\r\n */\r\nprivate nl.tudelft.jpacman.sprite.Sprite currentSprite() {\r\n    nl.tudelft.jpacman.sprite.Sprite result = nl.tudelft.jpacman.sprite.AnimatedSprite.END_OF_LOOP;\r\n    if (current < animationFrames.length) {\r\n        result = animationFrames[current];\r\n    }\r\n    assert result != null;\r\n    return result;\r\n}","docComment":"\r\n@return The frame of the current index.\r\n","visibility":"private","simpleName":"currentSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.mappings","properties":{"sourceText":"/**\r\n * The mappings of keyCode to action.\r\n */\r\nprivate final java.util.Map<java.lang.Integer, nl.tudelft.jpacman.ui.Action> mappings;","visibility":"private","simpleName":"mappings","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean).isAnimating","properties":{"simpleName":"isAnimating","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)","properties":{"sourceText":"/**\r\n * Returns a map of animated ghost sprites for all directions.\r\n *\r\n * @param color\r\n * \t\tThe colour of the ghost.\r\n * @return The Sprite for the ghost.\r\n */\r\npublic java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor color) {\r\n    assert color != null;\r\n    java.lang.String resource = (\"/sprite/ghost_\" + color.name().toLowerCase()) + \".png\";\r\n    return directionSprite(resource, nl.tudelft.jpacman.sprite.PacManSprites.GHOST_ANIMATION_FRAMES);\r\n}","docComment":"Returns a map of animated ghost sprites for all directions.\r\n\r\n@param color\r\n\t\tThe colour of the ghost.\r\n@return The Sprite for the ghost.\r\n","visibility":"public","simpleName":"getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.setAlive(boolean).isAlive","properties":{"simpleName":"isAlive","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action)","properties":{"sourceText":"/**\r\n * Adds a button to the UI.\r\n *\r\n * @param caption\r\n * \t\tThe caption of the button.\r\n * @param action\r\n * \t\tThe action to execute when the button is clicked.\r\n * @return The builder.\r\n */\r\npublic nl.tudelft.jpacman.ui.PacManUiBuilder addButton(java.lang.String caption, nl.tudelft.jpacman.ui.Action action) {\r\n    assert caption != null;\r\n    assert !caption.isEmpty();\r\n    assert action != null;\r\n    buttons.put(caption, action);\r\n    return this;\r\n}","docComment":"Adds a button to the UI.\r\n\r\n@param caption\r\n\t\tThe caption of the button.\r\n@param action\r\n\t\tThe action to execute when the button is clicked.\r\n@return The builder.\r\n","visibility":"public","simpleName":"addButton(java.lang.String,nl.tudelft.jpacman.ui.Action)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","properties":{"sourceText":"/**\r\n * Creates a game for a single level with one player.\r\n *\r\n * @param level\r\n * \t\tThe level to create a game for.\r\n * @param pointCalculator\r\n * \t\tThe way to calculate points upon collisions.\r\n * @return A new single player game.\r\n */\r\npublic nl.tudelft.jpacman.game.Game createSinglePlayerGame(nl.tudelft.jpacman.level.Level level, nl.tudelft.jpacman.points.PointCalculator pointCalculator) {\r\n    return new nl.tudelft.jpacman.game.SinglePlayerGame(playerFactory.createPacMan(), level, pointCalculator);\r\n}","docComment":"Creates a game for a single level with one player.\r\n\r\n@param level\r\n\t\tThe level to create a game for.\r\n@param pointCalculator\r\n\t\tThe way to calculate points upon collisions.\r\n@return A new single player game.\r\n","visibility":"public","simpleName":"createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Ground.getSprite()","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite getSprite() {\r\n    return background;\r\n}","docComment":"","visibility":"public","simpleName":"getSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler","properties":{"docComment":"An symmetrical copy of a collision hander.\r\n\r\n@author Michael de Jong\r\n@param <C1>\r\n\t\tThe collider type.\r\n@param <C2>\r\n\t\tThe collidee type.\r\n","simpleName":"InverseCollisionHandler","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension).graphics","properties":{"simpleName":"graphics","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.main(java.lang.String[]).args","properties":{"simpleName":"args","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.collisions","properties":{"sourceText":"/**\r\n * The table of possible collisions between units.\r\n */\r\nprivate final nl.tudelft.jpacman.level.CollisionMap collisions;","visibility":"private","simpleName":"collisions","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.animationDelay","properties":{"sourceText":"/**\r\n * The delay between frames.\r\n */\r\nprivate final int animationDelay;","visibility":"private","simpleName":"animationDelay","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost","properties":{"simpleName":"ghost","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.loadPointCalculator()","properties":{"sourceText":"private nl.tudelft.jpacman.points.PointCalculator loadPointCalculator() {\r\n    return new nl.tudelft.jpacman.points.PointCalculatorLoader().load();\r\n}","docComment":"","visibility":"private","simpleName":"loadPointCalculator()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory.nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory)","properties":{"sourceText":"/**\r\n * Creates a new game factory.\r\n *\r\n * @param playerFactory\r\n * \t\tThe factory providing the player objects.\r\n */\r\npublic GameFactory(nl.tudelft.jpacman.level.PlayerFactory playerFactory) {\r\n    this.playerFactory = playerFactory;\r\n}","docComment":"Creates a new game factory.\r\n\r\n@param playerFactory\r\n\t\tThe factory providing the player objects.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.addPoints(int).points","properties":{"simpleName":"points","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.nl.tudelft.jpacman.points.DefaultPointCalculator()","properties":{"sourceText":"DefaultPointCalculator() {\r\n}","docComment":"","visibility":"public","simpleName":"nl.tudelft.jpacman.points.DefaultPointCalculator()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame","properties":{"docComment":"A game with one player and a single level.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"SinglePlayerGame","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.boardCreator","properties":{"sourceText":"/**\r\n * The factory that creates the squares and board.\r\n */\r\nprivate final nl.tudelft.jpacman.board.BoardFactory boardCreator;","visibility":"private","simpleName":"boardCreator","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","properties":{"sourceText":"@java.lang.Override\r\npublic void consumedAPellet(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.level.Pellet pellet) {\r\n    player.addPoints(pellet.getValue());\r\n}","docComment":"","visibility":"public","simpleName":"consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).grid","properties":{"simpleName":"grid","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$LevelObserver.levelWon()","properties":{"sourceText":"/**\r\n * The level has been won. Typically the level should be stopped when\r\n * this event is received.\r\n */\r\nvoid levelWon();","docComment":"The level has been won. Typically the level should be stopped when\r\nthis event is received.\r\n","visibility":"public","simpleName":"levelWon()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft","properties":{"simpleName":"tudelft","kind":"package","metaSrc":"source code"},"labels":["Container"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collidee","properties":{"simpleName":"collidee","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"short","properties":{"simpleName":"short","metaSrc":"source code"},"labels":["Primitive"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider","properties":{"simpleName":"collider","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).mover","properties":{"simpleName":"mover","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action)","properties":{"sourceText":"/**\r\n * Adds a key listener to the UI.\r\n *\r\n * @param keyCode\r\n * \t\tThe key code of the key as used by {@link java.awt.event.KeyEvent}.\r\n * @param action\r\n * \t\tThe action to perform when the key is pressed.\r\n * @return The builder.\r\n */\r\npublic nl.tudelft.jpacman.ui.PacManUiBuilder addKey(java.lang.Integer keyCode, nl.tudelft.jpacman.ui.Action action) {\r\n    assert keyCode != null;\r\n    assert action != null;\r\n    keyMappings.put(keyCode, action);\r\n    return this;\r\n}","docComment":"Adds a key listener to the UI.\r\n\r\n@param keyCode\r\n\t\tThe key code of the key as used by {@link java.awt.event.KeyEvent}.\r\n@param action\r\n\t\tThe action to perform when the key is pressed.\r\n@return The builder.\r\n","visibility":"public","simpleName":"addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).frames","properties":{"simpleName":"frames","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.players","properties":{"sourceText":"/**\r\n * The players on this level.\r\n */\r\nprivate final java.util.List<nl.tudelft.jpacman.level.Player> players;","visibility":"private","simpleName":"players","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","properties":{"sourceText":"/**\r\n * Finds the nearest unit of the given type and returns its location. This\r\n * method will perform a breadth first search starting from the given\r\n * square.\r\n *\r\n * @param type\r\n * \t\tThe type of unit to search for.\r\n * @param currentLocation\r\n * \t\tThe starting location for the search.\r\n * @return The nearest unit of the given type, or <code>null<\/code> if no\r\nsuch unit could be found.\r\n */\r\npublic static nl.tudelft.jpacman.board.Unit findNearest(java.lang.Class<? extends nl.tudelft.jpacman.board.Unit> type, nl.tudelft.jpacman.board.Square currentLocation) {\r\n    java.util.List<nl.tudelft.jpacman.board.Square> toDo = new java.util.ArrayList<>();\r\n    java.util.Set<nl.tudelft.jpacman.board.Square> visited = new java.util.HashSet<>();\r\n    toDo.add(currentLocation);\r\n    while (!toDo.isEmpty()) {\r\n        nl.tudelft.jpacman.board.Square square = toDo.remove(0);\r\n        nl.tudelft.jpacman.board.Unit unit = nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(type, square);\r\n        if (unit != null) {\r\n            assert unit.hasSquare();\r\n            return unit;\r\n        }\r\n        visited.add(square);\r\n        for (nl.tudelft.jpacman.board.Direction direction : nl.tudelft.jpacman.board.Direction.values()) {\r\n            nl.tudelft.jpacman.board.Square newTarget = square.getSquareAt(direction);\r\n            if ((!visited.contains(newTarget)) && (!toDo.contains(newTarget))) {\r\n                toDo.add(newTarget);\r\n            }\r\n        }\r\n    } \r\n    return null;\r\n}","docComment":"Finds the nearest unit of the given type and returns its location. This\r\nmethod will perform a breadth first search starting from the given\r\nsquare.\r\n\r\n@param type\r\n\t\tThe type of unit to search for.\r\n@param currentLocation\r\n\t\tThe starting location for the search.\r\n@return The nearest unit of the given type, or <code>null<\/code> if no\r\nsuch unit could be found.\r\n","visibility":"public","simpleName":"findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.SinglePlayerGame.player","properties":{"sourceText":"/**\r\n * The player of this game.\r\n */\r\nprivate final nl.tudelft.jpacman.level.Player player;","visibility":"private","simpleName":"player","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List).text","properties":{"simpleName":"text","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).visited","properties":{"simpleName":"visited","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.GHOSTS","properties":{"sourceText":"private static final int GHOSTS = 4;","visibility":"private","simpleName":"GHOSTS","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.getBoardCreator()","properties":{"sourceText":"/**\r\n *\r\n * @return the BoardCreator\r\n */\r\nprotected nl.tudelft.jpacman.board.BoardFactory getBoardCreator() {\r\n    return boardCreator;\r\n}","docComment":"\r\n@return the BoardCreator\r\n","visibility":"protected","simpleName":"getBoardCreator()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite).spriteMap","properties":{"simpleName":"spriteMap","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).game","properties":{"simpleName":"game","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.animationFrames","properties":{"sourceText":"/**\r\n * The animation itself, in frames.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.Sprite[] animationFrames;","visibility":"private","simpleName":"animationFrames","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.stop()","properties":{"sourceText":"/**\r\n * Pauses the game.\r\n */\r\npublic void stop() {\r\n    synchronized(progressLock) {\r\n        if (!isInProgress()) {\r\n            return;\r\n        }\r\n        inProgress = false;\r\n        getLevel().stop();\r\n    }\r\n}","docComment":"Pauses the game.\r\n","visibility":"public","simpleName":"stop()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore","properties":{"docComment":"Utility to load {@link Sprite}s.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"SpriteStore","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory.nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory).playerFactory","properties":{"simpleName":"playerFactory","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.getSprite()","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite getSprite() {\r\n    return sprites.get(getDirection());\r\n}","docComment":"","visibility":"public","simpleName":"getSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)","properties":{"sourceText":"/**\r\n * Creates a new animating sprite that will change frames every interval.\r\n *\r\n * @param frames\r\n * \t\tThe frames of this animation.\r\n * @param delay\r\n * \t\tThe delay between frames.\r\n * @param loop\r\n * \t\tWhether or not this sprite should be looping.\r\n * @param isAnimating\r\n * \t\tWhether or not this sprite is animating from the start.\r\n */\r\npublic AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[] frames, int delay, boolean loop, boolean isAnimating) {\r\n    assert frames.length > 0;\r\n    this.animationFrames = frames.clone();\r\n    this.animationDelay = delay;\r\n    this.looping = loop;\r\n    this.animating = isAnimating;\r\n    this.current = 0;\r\n    this.lastUpdate = java.lang.System.currentTimeMillis();\r\n}","docComment":"Creates a new animating sprite that will change frames every interval.\r\n\r\n@param frames\r\n\t\tThe frames of this animation.\r\n@param delay\r\n\t\tThe delay between frames.\r\n@param loop\r\n\t\tWhether or not this sprite should be looping.\r\n@param isAnimating\r\n\t\tWhether or not this sprite is animating from the start.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int).deltaX","properties":{"simpleName":"deltaX","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.sprites","properties":{"sourceText":"/**\r\n * The sprite store that provides sprites for units.\r\n */\r\nprivate final nl.tudelft.jpacman.sprite.PacManSprites sprites;","visibility":"private","simpleName":"sprites","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.keyMappings","properties":{"sourceText":"/**\r\n * Map of key events and their actions.\r\n */\r\nprivate final java.util.Map<java.lang.Integer, nl.tudelft.jpacman.ui.Action> keyMappings;","visibility":"private","simpleName":"keyMappings","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.moveInterval","properties":{"sourceText":"/**\r\n * The base move interval of the ghost.\r\n */\r\nprivate final int moveInterval;","visibility":"private","simpleName":"moveInterval","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","properties":{"sourceText":"/**\r\n * Method called whenever a player meets a ghost.\r\n * It can be used to update the player's points accordingly.\r\n *\r\n * @param player\r\n * \t\tThe player that will die.\r\n * @param ghost\r\n * \t\tThe ghost causing the player to die.\r\n */\r\nvoid collidedWithAGhost(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.npc.Ghost ghost);","docComment":"Method called whenever a player meets a ghost.\r\nIt can be used to update the player's points accordingly.\r\n\r\n@param player\r\n\t\tThe player that will die.\r\n@param ghost\r\n\t\tThe ghost causing the player to die.\r\n","visibility":"public","simpleName":"collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.levelLost()","properties":{"sourceText":"@java.lang.Override\r\npublic void levelLost() {\r\n    stop();\r\n}","docComment":"","visibility":"public","simpleName":"levelLost()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).symetric","properties":{"simpleName":"symetric","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.stop()","properties":{"sourceText":"/**\r\n * Stops or pauses this level, no longer allowing any movement on the board\r\n * and stopping all NPCs.\r\n */\r\npublic void stop() {\r\n    synchronized(startStopLock) {\r\n        if (!isInProgress()) {\r\n            return;\r\n        }\r\n        stopNPCs();\r\n        inProgress = false;\r\n    }\r\n}","docComment":"Stops or pauses this level, no longer allowing any movement on the board\r\nand stopping all NPCs.\r\n","visibility":"public","simpleName":"stop()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction).unit","properties":{"simpleName":"unit","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$LevelObserver","properties":{"docComment":"An observer that will be notified when the level is won or lost.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"LevelObserver","kind":"interface","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","properties":{"sourceText":"/**\r\n * Actual case of player consuming a pellet.\r\n *\r\n * @param player\r\n * \t\tThe player involved in the collision.\r\n * @param pellet\r\n * \t\tThe pellet involved in the collision.\r\n */\r\npublic void playerVersusPellet(nl.tudelft.jpacman.level.Player player, nl.tudelft.jpacman.level.Pellet pellet) {\r\n    pointCalculator.consumedAPellet(player, pellet);\r\n    pellet.leaveSquare();\r\n}","docComment":"Actual case of player consuming a pellet.\r\n\r\n@param player\r\n\t\tThe player involved in the collision.\r\n@param pellet\r\n\t\tThe pellet involved in the collision.\r\n","visibility":"public","simpleName":"playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String).message","properties":{"simpleName":"message","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.getDeltaY()","properties":{"sourceText":"/**\r\n *\r\n * @return The delta y (height difference) for a single step in this\r\ndirection, in a matrix with 0,0 (x,y) as its top-left element.\r\n */\r\npublic int getDeltaY() {\r\n    return deltaY;\r\n}","docComment":"\r\n@return The delta y (height difference) for a single step in this\r\ndirection, in a matrix with 0,0 (x,y) as its top-left element.\r\n","visibility":"public","simpleName":"getDeltaY()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])","properties":{"sourceText":"/**\r\n * Parses the text representation of the board into an actual level.\r\n *\r\n * <ul>\r\n * <li>Supported characters:\r\n * <li>' ' (space) an empty square.\r\n * <li>'#' (bracket) a wall.\r\n * <li>'.' (period) a square with a pellet.\r\n * <li>'P' (capital P) a starting square for players.\r\n * <li>'G' (capital G) a square with a ghost.\r\n * <\/ul>\r\n *\r\n * @param map\r\n * \t\tThe text representation of the board, with map[x][y]\r\n * \t\trepresenting the square at position x,y.\r\n * @return The level as represented by this text.\r\n */\r\npublic nl.tudelft.jpacman.level.Level parseMap(char[][] map) {\r\n    int width = map.length;\r\n    int height = map[0].length;\r\n    nl.tudelft.jpacman.board.Square[][] grid = new nl.tudelft.jpacman.board.Square[width][height];\r\n    java.util.List<nl.tudelft.jpacman.npc.Ghost> ghosts = new java.util.ArrayList<>();\r\n    java.util.List<nl.tudelft.jpacman.board.Square> startPositions = new java.util.ArrayList<>();\r\n    makeGrid(map, width, height, grid, ghosts, startPositions);\r\n    nl.tudelft.jpacman.board.Board board = boardCreator.createBoard(grid);\r\n    return levelCreator.createLevel(board, ghosts, startPositions);\r\n}","docComment":"Parses the text representation of the board into an actual level.\r\n\r\n<ul>\r\n<li>Supported characters:\r\n<li>' ' (space) an empty square.\r\n<li>'#' (bracket) a wall.\r\n<li>'.' (period) a square with a pellet.\r\n<li>'P' (capital P) a starting square for players.\r\n<li>'G' (capital G) a square with a ghost.\r\n<\/ul>\r\n\r\n@param map\r\n\t\tThe text representation of the board, with map[x][y]\r\n\t\trepresenting the square at position x,y.\r\n@return The level as represented by this text.\r\n","visibility":"public","simpleName":"parseMap(char[][])","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.getSprite()","properties":{"sourceText":"/**\r\n * Returns the sprite of this unit.\r\n *\r\n * @return The sprite of this unit.\r\n */\r\npublic abstract nl.tudelft.jpacman.sprite.Sprite getSprite();","docComment":"Returns the sprite of this unit.\r\n\r\n@return The sprite of this unit.\r\n","visibility":"public","simpleName":"getSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction).neighbour","properties":{"simpleName":"neighbour","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String).resource","properties":{"simpleName":"resource","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.nl.tudelft.jpacman.ui.ScorePanel(java.util.List).players","properties":{"simpleName":"players","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit","properties":{"docComment":"A unit that can be placed on a {@link Square}.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Unit","kind":"abstract","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.getHeight()","properties":{"sourceText":"/**\r\n * Returns the height of this sprite.\r\n *\r\n * @return The height of this sprite in pixels.\r\n */\r\nint getHeight();","docComment":"Returns the height of this sprite.\r\n\r\n@return The height of this sprite in pixels.\r\n","visibility":"public","simpleName":"getHeight()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).delay","properties":{"simpleName":"delay","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.nl.tudelft.jpacman.ui.PacManUiBuilder()","properties":{"sourceText":"/**\r\n * Creates a new Pac-Man UI builder without any mapped keys or buttons.\r\n */\r\npublic PacManUiBuilder() {\r\n    this.defaultButtons = false;\r\n    this.buttons = new java.util.LinkedHashMap<>();\r\n    this.keyMappings = new java.util.HashMap<>();\r\n}","docComment":"Creates a new Pac-Man UI builder without any mapped keys or buttons.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.ui.PacManUiBuilder()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator).pointCalculator","properties":{"simpleName":"pointCalculator","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.board","properties":{"sourceText":"/**\r\n * The grid of squares with board[x][y] being the square at column x, row y.\r\n */\r\nprivate final nl.tudelft.jpacman.board.Square[][] board;","visibility":"private","simpleName":"board","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.Ghost.sprites","properties":{"sourceText":"/**\r\n * The sprite map, one sprite for each direction.\r\n */\r\nprivate final java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> sprites;","visibility":"private","simpleName":"sprites","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).graphics","properties":{"simpleName":"graphics","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","properties":{"docComment":"Helper class to keep track of the path.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"Node","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit)","properties":{"sourceText":"/**\r\n * Sets the cause of death.\r\n *\r\n * @param killer\r\n * \t\tis set if collision with ghost happens.\r\n */\r\npublic void setKiller(nl.tudelft.jpacman.board.Unit killer) {\r\n    this.killer = killer;\r\n}","docComment":"Sets the cause of death.\r\n\r\n@param killer\r\n\t\tis set if collision with ghost happens.\r\n","visibility":"public","simpleName":"setKiller(nl.tudelft.jpacman.board.Unit)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","properties":{"sourceText":"/**\r\n * Adds a square to the grid based on a given character. These\r\n * character come from the map files and describe the type\r\n * of square.\r\n *\r\n * @param grid\r\n * \t\tThe grid of squares with board[x][y] being the\r\n * \t\tsquare at column x, row y.\r\n * @param ghosts\r\n * \t\tList of all ghosts that were added to the map.\r\n * @param startPositions\r\n * \t\tList of all start positions that were added\r\n * \t\tto the map.\r\n * @param x\r\n * \t\tx coordinate of the square.\r\n * @param y\r\n * \t\ty coordinate of the square.\r\n * @param c\r\n * \t\tCharacter describing the square type.\r\n */\r\nprotected void addSquare(nl.tudelft.jpacman.board.Square[][] grid, java.util.List<nl.tudelft.jpacman.npc.Ghost> ghosts, java.util.List<nl.tudelft.jpacman.board.Square> startPositions, int x, int y, char c) {\r\n    switch (c) {\r\n        case ' ' :\r\n            grid[x][y] = boardCreator.createGround();\r\n            break;\r\n        case '#' :\r\n            grid[x][y] = boardCreator.createWall();\r\n            break;\r\n        case '.' :\r\n            nl.tudelft.jpacman.board.Square pelletSquare = boardCreator.createGround();\r\n            grid[x][y] = pelletSquare;\r\n            levelCreator.createPellet().occupy(pelletSquare);\r\n            break;\r\n        case 'G' :\r\n            nl.tudelft.jpacman.board.Square ghostSquare = makeGhostSquare(ghosts, levelCreator.createGhost());\r\n            grid[x][y] = ghostSquare;\r\n            break;\r\n        case 'P' :\r\n            nl.tudelft.jpacman.board.Square playerSquare = boardCreator.createGround();\r\n            grid[x][y] = playerSquare;\r\n            startPositions.add(playerSquare);\r\n            break;\r\n        default :\r\n            throw new nl.tudelft.jpacman.PacmanConfigurationException(((((\"Invalid character at \" + x) + \",\") + y) + \": \") + c);\r\n    }\r\n}","docComment":"Adds a square to the grid based on a given character. These\r\ncharacter come from the map files and describe the type\r\nof square.\r\n\r\n@param grid\r\n\t\tThe grid of squares with board[x][y] being the\r\n\t\tsquare at column x, row y.\r\n@param ghosts\r\n\t\tList of all ghosts that were added to the map.\r\n@param startPositions\r\n\t\tList of all start positions that were added\r\n\t\tto the map.\r\n@param x\r\n\t\tx coordinate of the square.\r\n@param y\r\n\t\ty coordinate of the square.\r\n@param c\r\n\t\tCharacter describing the square type.\r\n","visibility":"protected","simpleName":"addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","properties":{"sourceText":"/**\r\n * Let the score panel use a dedicated score formatter.\r\n *\r\n * @param scoreFormatter\r\n * \t\tScore formatter to be used.\r\n */\r\npublic void setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel.ScoreFormatter scoreFormatter) {\r\n    assert scoreFormatter != null;\r\n    this.scoreFormatter = scoreFormatter;\r\n}","docComment":"Let the score panel use a dedicated score formatter.\r\n\r\n@param scoreFormatter\r\n\t\tScore formatter to be used.\r\n","visibility":"public","simpleName":"setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).to","properties":{"simpleName":"to","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Clyde.SHYNESS","properties":{"sourceText":"/**\r\n * The amount of cells Clyde wants to stay away from Pac Man.\r\n */\r\nprivate static final int SHYNESS = 8;","visibility":"private","simpleName":"SHYNESS","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Pellet.getSprite()","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite getSprite() {\r\n    return image;\r\n}","docComment":"","visibility":"public","simpleName":"getSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()","properties":{"sourceText":"/**\r\n * {@inheritDoc }\r\n *\r\n * <p>\r\n * When the ghosts are not patrolling their home corners, Pinky wants to go\r\n * to the place that is four grid spaces ahead of Pac-Man in the direction\r\n * that Pac-Man is facing. If Pac-Man is facing down, Pinky wants to go to\r\n * the location exactly four spaces below Pac-Man. Moving towards this place\r\n * uses the same logic that Blinky uses to find Pac-Man's exact location.\r\n * Pinky is affected by a targeting bug if Pac-Man is facing up - when he\r\n * moves or faces up, Pinky tries moving towards a point up, and left, four\r\n * spaces.\r\n * <\/p>\r\n */\r\n@java.lang.Override\r\npublic java.util.Optional<nl.tudelft.jpacman.board.Direction> nextAiMove() {\r\n    assert hasSquare();\r\n    nl.tudelft.jpacman.board.Unit player = nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(nl.tudelft.jpacman.level.Player.class, getSquare());\r\n    if (player == null) {\r\n        return java.util.Optional.empty();\r\n    }\r\n    assert player.hasSquare();\r\n    nl.tudelft.jpacman.board.Square destination = player.squaresAheadOf(nl.tudelft.jpacman.npc.ghost.Pinky.SQUARES_AHEAD);\r\n    java.util.List<nl.tudelft.jpacman.board.Direction> path = nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(getSquare(), destination, this);\r\n    if ((path != null) && (!path.isEmpty())) {\r\n        return java.util.Optional.ofNullable(path.get(0));\r\n    }\r\n    return java.util.Optional.empty();\r\n}","docComment":"{@inheritDoc }\r\n\r\n<p>\r\nWhen the ghosts are not patrolling their home corners, Pinky wants to go\r\nto the place that is four grid spaces ahead of Pac-Man in the direction\r\nthat Pac-Man is facing. If Pac-Man is facing down, Pinky wants to go to\r\nthe location exactly four spaces below Pac-Man. Moving towards this place\r\nuses the same logic that Blinky uses to find Pac-Man's exact location.\r\nPinky is affected by a targeting bug if Pac-Man is facing up - when he\r\nmoves or faces up, Pinky tries moving towards a point up, and left, four\r\nspaces.\r\n<\/p>\r\n","visibility":"public","simpleName":"nextAiMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Wall.getSprite()","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite getSprite() {\r\n    return background;\r\n}","docComment":"","visibility":"public","simpleName":"getSprite()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.ui.BoardPanel.SQUARE_SIZE","properties":{"sourceText":"/**\r\n * The size (in pixels) of a square on the board. The initial size of this\r\n * panel will scale to fit a board with square of this size.\r\n */\r\nprivate static final int SQUARE_SIZE = 16;","visibility":"private","simpleName":"SQUARE_SIZE","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).startPositions","properties":{"simpleName":"startPositions","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee","properties":{"simpleName":"collidee","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.SQUARES_AHEAD","properties":{"sourceText":"private static final int SQUARES_AHEAD = 2;","visibility":"private","simpleName":"SQUARES_AHEAD","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.points.PointCalculator","properties":{"docComment":"The responsibility of the point calculator is to update the points\r\nof the player when certain activities happen.\r\nDifferent calculation strategies can be employed,\r\ngiving rise to different types of games, for example at different levels.\r\n","simpleName":"PointCalculator","kind":"interface","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)","properties":{"sourceText":"/**\r\n * Determines whether the given <code>x,y<\/code> position is on this board.\r\n *\r\n * @param x\r\n * \t\tThe <code>x<\/code> position (row) to test.\r\n * @param y\r\n * \t\tThe <code>y<\/code> position (column) to test.\r\n * @return <code>true<\/code> iff the position is on this board.\r\n */\r\npublic boolean withinBorders(int x, int y) {\r\n    return (((x >= 0) && (x < getWidth())) && (y >= 0)) && (y < getHeight());\r\n}","docComment":"Determines whether the given <code>x,y<\/code> position is on this board.\r\n\r\n@param x\r\n\t\tThe <code>x<\/code> position (row) to test.\r\n@param y\r\n\t\tThe <code>y<\/code> position (column) to test.\r\n@return <code>true<\/code> iff the position is on this board.\r\n","visibility":"public","simpleName":"withinBorders(int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","properties":{"sourceText":"/**\r\n * {@inheritDoc }\r\n *\r\n * <p>\r\n * Inky has the most complicated AI of all. Inky considers two things: Blinky's\r\n * location, and the location two grid spaces ahead of Pac-Man. Inky\r\n * draws a line from Blinky to the spot that is two squares in front of\r\n * Pac-Man and extends that line twice as far. Therefore, if Inky is\r\n * alongside Blinky when they are behind Pac-Man, Inky will usually\r\n * follow Blinky the whole time. But if Inky is in front of Pac-Man when\r\n * Blinky is far behind him, Inky tends to want to move away from Pac-Man\r\n * (in reality, to a point very far ahead of Pac-Man). Inky is affected\r\n * by a similar targeting bug that affects Speedy. When Pac-Man is moving or\r\n * facing up, the spot Inky uses to draw the line is two squares above\r\n * and left of Pac-Man.\r\n * <\/p>\r\n *\r\n * <p>\r\n * <b>Implementation:<\/b>\r\n * To actually implement this in jpacman we have the following approximation:\r\n * first determine the square of Blinky (A) and the square 2\r\n * squares away from Pac-Man (B). Then determine the shortest path from A to\r\n * B regardless of terrain and walk that same path from B. This is the\r\n * destination.\r\n * <\/p>\r\n */\r\n@java.lang.Override\r\npublic java.util.Optional<nl.tudelft.jpacman.board.Direction> nextAiMove() {\r\n    assert hasSquare();\r\n    nl.tudelft.jpacman.board.Unit blinky = nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(nl.tudelft.jpacman.npc.ghost.Blinky.class, getSquare());\r\n    nl.tudelft.jpacman.board.Unit player = nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(nl.tudelft.jpacman.level.Player.class, getSquare());\r\n    if ((blinky == null) || (player == null)) {\r\n        return java.util.Optional.empty();\r\n    }\r\n    assert player.hasSquare();\r\n    nl.tudelft.jpacman.board.Square playerDestination = player.squaresAheadOf(nl.tudelft.jpacman.npc.ghost.Inky.SQUARES_AHEAD);\r\n    java.util.List<nl.tudelft.jpacman.board.Direction> firstHalf = nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(blinky.getSquare(), playerDestination, null);\r\n    if (firstHalf == null) {\r\n        return java.util.Optional.empty();\r\n    }\r\n    nl.tudelft.jpacman.board.Square destination = followPath(firstHalf, playerDestination);\r\n    java.util.List<nl.tudelft.jpacman.board.Direction> path = nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(getSquare(), destination, this);\r\n    if ((path != null) && (!path.isEmpty())) {\r\n        return java.util.Optional.ofNullable(path.get(0));\r\n    }\r\n    return java.util.Optional.empty();\r\n}","docComment":"{@inheritDoc }\r\n\r\n<p>\r\nInky has the most complicated AI of all. Inky considers two things: Blinky's\r\nlocation, and the location two grid spaces ahead of Pac-Man. Inky\r\ndraws a line from Blinky to the spot that is two squares in front of\r\nPac-Man and extends that line twice as far. Therefore, if Inky is\r\nalongside Blinky when they are behind Pac-Man, Inky will usually\r\nfollow Blinky the whole time. But if Inky is in front of Pac-Man when\r\nBlinky is far behind him, Inky tends to want to move away from Pac-Man\r\n(in reality, to a point very far ahead of Pac-Man). Inky is affected\r\nby a similar targeting bug that affects Speedy. When Pac-Man is moving or\r\nfacing up, the spot Inky uses to draw the line is two squares above\r\nand left of Pac-Man.\r\n<\/p>\r\n\r\n<p>\r\n<b>Implementation:<\/b>\r\nTo actually implement this in jpacman we have the following approximation:\r\nfirst determine the square of Blinky (A) and the square 2\r\nsquares away from Pac-Man (B). Then determine the shortest path from A to\r\nB regardless of terrain and walk that same path from B. This is the\r\ndestination.\r\n<\/p>\r\n","visibility":"public","simpleName":"nextAiMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player).player","properties":{"simpleName":"player","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.nl.tudelft.jpacman.Launcher()","properties":{"sourceText":"Launcher() {\r\n}","docComment":"","visibility":"public","simpleName":"nl.tudelft.jpacman.Launcher()","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node)","properties":{"sourceText":"/**\r\n * Creates a new node.\r\n *\r\n * @param direction\r\n * \t\tThe direction, which is <code>null<\/code> for the root\r\n * \t\tnode.\r\n * @param square\r\n * \t\tThe square.\r\n * @param parent\r\n * \t\tThe parent node, which is <code>null<\/code> for the root\r\n * \t\tnode.\r\n */\r\nNode(nl.tudelft.jpacman.board.Direction direction, nl.tudelft.jpacman.board.Square square, nl.tudelft.jpacman.npc.ghost.Navigation.Node parent) {\r\n    this.direction = direction;\r\n    this.square = square;\r\n    this.parent = parent;\r\n}","docComment":"Creates a new node.\r\n\r\n@param direction\r\n\t\tThe direction, which is <code>null<\/code> for the root\r\n\t\tnode.\r\n@param square\r\n\t\tThe square.\r\n@param parent\r\n\t\tThe parent node, which is <code>null<\/code> for the root\r\n\t\tnode.\r\n","visibility":"default","simpleName":"nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacKeyListener.nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map).keyMappings","properties":{"simpleName":"keyMappings","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()","properties":{"sourceText":"/**\r\n * {@inheritDoc }\r\n *\r\n * <p>\r\n * Clyde has two basic AIs, one for when he's far from Pac-Man, and one for\r\n * when he is near to Pac-Man.\r\n * When Clyde is far away from Pac-Man (beyond eight grid spaces),\r\n * Clyde behaves very much like Blinky, trying to move to Pac-Man's exact\r\n * location. However, when Clyde gets within eight grid spaces of Pac-Man,\r\n * he automatically changes his behavior and runs away\r\n * <\/p>\r\n */\r\n@java.lang.Override\r\npublic java.util.Optional<nl.tudelft.jpacman.board.Direction> nextAiMove() {\r\n    assert hasSquare();\r\n    nl.tudelft.jpacman.board.Unit nearest = nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(nl.tudelft.jpacman.level.Player.class, getSquare());\r\n    if (nearest == null) {\r\n        return java.util.Optional.empty();\r\n    }\r\n    assert nearest.hasSquare();\r\n    nl.tudelft.jpacman.board.Square target = nearest.getSquare();\r\n    java.util.List<nl.tudelft.jpacman.board.Direction> path = nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(getSquare(), target, this);\r\n    if ((path != null) && (!path.isEmpty())) {\r\n        nl.tudelft.jpacman.board.Direction direction = path.get(0);\r\n        if (path.size() <= nl.tudelft.jpacman.npc.ghost.Clyde.SHYNESS) {\r\n            return java.util.Optional.of(direction.opposite());\r\n        }\r\n        return java.util.Optional.of(direction);\r\n    }\r\n    return java.util.Optional.empty();\r\n}","docComment":"{@inheritDoc }\r\n\r\n<p>\r\nClyde has two basic AIs, one for when he's far from Pac-Man, and one for\r\nwhen he is near to Pac-Man. \r\nWhen Clyde is far away from Pac-Man (beyond eight grid spaces),\r\nClyde behaves very much like Blinky, trying to move to Pac-Man's exact\r\nlocation. However, when Clyde gets within eight grid spaces of Pac-Man,\r\nhe automatically changes his behavior and runs away\r\n<\/p>\r\n","visibility":"public","simpleName":"nextAiMove()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).level","properties":{"simpleName":"level","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.DIRECTIONS","properties":{"sourceText":"/**\r\n * The sprite files are vertically stacked series for each direction, this\r\n * array denotes the order.\r\n */\r\nprivate static final nl.tudelft.jpacman.board.Direction[] DIRECTIONS = new nl.tudelft.jpacman.board.Direction[]{ nl.tudelft.jpacman.board.Direction.NORTH, nl.tudelft.jpacman.board.Direction.EAST, nl.tudelft.jpacman.board.Direction.SOUTH, nl.tudelft.jpacman.board.Direction.WEST };","visibility":"private","simpleName":"DIRECTIONS","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int).deltaY","properties":{"simpleName":"deltaY","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).height","properties":{"simpleName":"height","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)","properties":{"sourceText":"/**\r\n * Returns a portion of this sprite as a new Sprite.\r\n *\r\n * @param x\r\n * \t\tThe x start coordinate.\r\n * @param y\r\n * \t\tThe y start coordinate.\r\n * @param width\r\n * \t\tThe width of the target sprite.\r\n * @param height\r\n * \t\tThe height of the target sprite.\r\n * @return A new sprite of width x height, or a new {@link EmptySprite} if\r\nthe region was not in the current sprite.\r\n */\r\nnl.tudelft.jpacman.sprite.Sprite split(int x, int y, int width, int height);","docComment":"Returns a portion of this sprite as a new Sprite.\r\n\r\n@param x\r\n\t\tThe x start coordinate.\r\n@param y\r\n\t\tThe y start coordinate.\r\n@param width\r\n\t\tThe width of the target sprite.\r\n@param height\r\n\t\tThe height of the target sprite.\r\n@return A new sprite of width x height, or a new {@link EmptySprite} if\r\nthe region was not in the current sprite.\r\n","visibility":"public","simpleName":"split(int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.WEST","properties":{"sourceText":"/**\r\n * West, or left.\r\n */\r\nWEST(-1, 0)","visibility":"public","simpleName":"WEST","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level$NpcMoveTask.run()","properties":{"sourceText":"@java.lang.Override\r\npublic void run() {\r\n    nl.tudelft.jpacman.board.Direction nextMove = npc.nextMove();\r\n    if (nextMove != null) {\r\n        move(npc, nextMove);\r\n    }\r\n    long interval = npc.getInterval();\r\n    service.schedule(this, interval, java.util.concurrent.TimeUnit.MILLISECONDS);\r\n}","docComment":"","visibility":"public","simpleName":"run()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.ui.PacManUiBuilder.STOP_CAPTION","properties":{"sourceText":"/**\r\n * Caption for the default stop button.\r\n */\r\nprivate static final java.lang.String STOP_CAPTION = \"Stop\";","visibility":"private","simpleName":"STOP_CAPTION","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).x","properties":{"simpleName":"x","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","properties":{"simpleName":"handler","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory","properties":{"docComment":"Factory that creates levels and units.\r\n\r\n@author Jeroen Roosen\r\n","simpleName":"LevelFactory","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.ui.ScorePanel.scoreLabels","properties":{"sourceText":"/**\r\n * The map of players and the labels their scores are on.\r\n */\r\nprivate final java.util.Map<nl.tudelft.jpacman.level.Player, javax.swing.JLabel> scoreLabels;","visibility":"private","simpleName":"scoreLabels","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)","properties":{"sourceText":"@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite split(int x, int y, int width, int height) {\r\n    return new nl.tudelft.jpacman.sprite.EmptySprite();\r\n}","docComment":"","visibility":"public","simpleName":"split(int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","properties":{"sourceText":"/**\r\n * Creates a new level from the provided data.\r\n *\r\n * @param board\r\n * \t\tThe board with all ghosts and pellets occupying their squares.\r\n * @param ghosts\r\n * \t\tA list of all ghosts on the board.\r\n * @param startPositions\r\n * \t\tA list of squares from which players may start the game.\r\n * @return A new level for the board.\r\n */\r\npublic nl.tudelft.jpacman.level.Level createLevel(nl.tudelft.jpacman.board.Board board, java.util.List<nl.tudelft.jpacman.npc.Ghost> ghosts, java.util.List<nl.tudelft.jpacman.board.Square> startPositions) {\r\n    // We'll adopt the simple collision map for now.\r\n    nl.tudelft.jpacman.level.CollisionMap collisionMap = new nl.tudelft.jpacman.level.PlayerCollisions(pointCalculator);\r\n    return new nl.tudelft.jpacman.level.Level(board, ghosts, startPositions, collisionMap);\r\n}","docComment":"Creates a new level from the provided data.\r\n\r\n@param board\r\n\t\tThe board with all ghosts and pellets occupying their squares.\r\n@param ghosts\r\n\t\tA list of all ghosts on the board.\r\n@param startPositions\r\n\t\tA list of squares from which players may start the game.\r\n@return A new level for the board.\r\n","visibility":"public","simpleName":"createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).loop","properties":{"simpleName":"loop","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","properties":{"sourceText":"private static void addNewTargets(nl.tudelft.jpacman.board.Unit traveller, java.util.List<nl.tudelft.jpacman.npc.ghost.Navigation.Node> targets, java.util.Set<nl.tudelft.jpacman.board.Square> visited, nl.tudelft.jpacman.npc.ghost.Navigation.Node node, nl.tudelft.jpacman.board.Square square) {\r\n    for (nl.tudelft.jpacman.board.Direction direction : nl.tudelft.jpacman.board.Direction.values()) {\r\n        nl.tudelft.jpacman.board.Square target = square.getSquareAt(direction);\r\n        if ((!visited.contains(target)) && ((traveller == null) || target.isAccessibleTo(traveller))) {\r\n            targets.add(new nl.tudelft.jpacman.npc.ghost.Navigation.Node(direction, target, node));\r\n        }\r\n    }\r\n}","docComment":"","visibility":"private","simpleName":"addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.restart()","properties":{"sourceText":"/**\r\n * (Re)starts the current animation.\r\n */\r\npublic void restart() {\r\n    this.current = 0;\r\n    this.lastUpdate = java.lang.System.currentTimeMillis();\r\n    setAnimating(true);\r\n}","docComment":"(Re)starts the current animation.\r\n","visibility":"public","simpleName":"restart()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.getPacmanSprites()","properties":{"sourceText":"/**\r\n *\r\n * @return A map of animated Pac-Man sprites for all directions.\r\n */\r\npublic java.util.Map<nl.tudelft.jpacman.board.Direction, nl.tudelft.jpacman.sprite.Sprite> getPacmanSprites() {\r\n    return directionSprite(\"/sprite/pacman.png\", nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_ANIMATION_FRAMES);\r\n}","docComment":"\r\n@return A map of animated Pac-Man sprites for all directions.\r\n","visibility":"public","simpleName":"getPacmanSprites()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.Level.startNPCs()","properties":{"sourceText":"/**\r\n * Starts all NPC movement scheduling.\r\n */\r\nprivate void startNPCs() {\r\n    for (final nl.tudelft.jpacman.npc.Ghost npc : npcs.keySet()) {\r\n        java.util.concurrent.ScheduledExecutorService service = java.util.concurrent.Executors.newSingleThreadScheduledExecutor();\r\n        service.schedule(new nl.tudelft.jpacman.level.Level.NpcMoveTask(service, npc), npc.getInterval() / 2, java.util.concurrent.TimeUnit.MILLISECONDS);\r\n        npcs.put(npc, service);\r\n    }\r\n}","docComment":"Starts all NPC movement scheduling.\r\n","visibility":"private","simpleName":"startNPCs()","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","properties":{"sourceText":"/**\r\n * Finds a subtype of Unit in a level.\r\n * This method is very useful for finding the ghosts in the parsed map.\r\n *\r\n * @param clazz\r\n * \t\tthe type to search for.\r\n * @param board\r\n * \t\tthe board to find the unit in.\r\n * @param <T>\r\n * \t\tthe return type, same as the type in clazz.\r\n * @return the first unit found of type clazz, or null.\r\n */\r\npublic static <T extends nl.tudelft.jpacman.board.Unit> T findUnitInBoard(java.lang.Class<T> clazz, nl.tudelft.jpacman.board.Board board) {\r\n    for (int y = 0; y < board.getHeight(); y++) {\r\n        for (int x = 0; x < board.getWidth(); x++) {\r\n            final T ghost = nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(clazz, board.squareAt(x, y));\r\n            if (ghost != null) {\r\n                return ghost;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}","docComment":"Finds a subtype of Unit in a level.\r\n This method is very useful for finding the ghosts in the parsed map.\r\n\r\n@param clazz\r\n\t\tthe type to search for.\r\n@param board\r\n\t\tthe board to find the unit in.\r\n@param <T>\r\n\t\tthe return type, same as the type in clazz.\r\n@return the first unit found of type clazz, or null.\r\n","visibility":"public","simpleName":"findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.PacmanConfigurationException","properties":{"docComment":"Exception that is thrown when JPacman cannot be properly loaded\r\nfrom its resources.\r\n\r\n@author Arie van Deursen, 2014\r\n","simpleName":"PacmanConfigurationException","kind":"class","metaSrc":"source code"},"labels":["Structure"]}},{"data":{"id":"nl.tudelft.jpacman.board.Direction.NORTH","properties":{"sourceText":"/**\r\n * North, or up.\r\n */\r\nNORTH(0, -1)","visibility":"public","simpleName":"NORTH","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.END_OF_LOOP","properties":{"sourceText":"/**\r\n * Static empty sprite to serve as the end of a non-looping sprite.\r\n */\r\nprivate static final nl.tudelft.jpacman.sprite.Sprite END_OF_LOOP = new nl.tudelft.jpacman.sprite.EmptySprite();","visibility":"private","simpleName":"END_OF_LOOP","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).square","properties":{"simpleName":"square","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)","properties":{"sourceText":"/**\r\n * Overloads the default sprite loading, ignoring the exception. This class\r\n * assumes all sprites are provided, hence the exception will be thrown as a\r\n * {@link RuntimeException}.\r\n *\r\n * {@inheritDoc }\r\n */\r\n@java.lang.Override\r\npublic nl.tudelft.jpacman.sprite.Sprite loadSprite(java.lang.String resource) {\r\n    try {\r\n        return super.loadSprite(resource);\r\n    } catch (java.io.IOException e) {\r\n        throw new nl.tudelft.jpacman.PacmanConfigurationException(\"Unable to load sprite: \" + resource, e);\r\n    }\r\n}","docComment":"Overloads the default sprite loading, ignoring the exception. This class\r\nassumes all sprites are provided, hence the exception will be thrown as a\r\n{@link RuntimeException}.\r\n\r\n{@inheritDoc }\r\n","visibility":"public","simpleName":"loadSprite(java.lang.String)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int).amountToLookAhead","properties":{"simpleName":"amountToLookAhead","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator)","properties":{"sourceText":"/**\r\n * Creates a new level factory.\r\n *\r\n * @param spriteStore\r\n * \t\tThe sprite store providing the sprites for units.\r\n * @param ghostFactory\r\n * \t\tThe factory providing ghosts.\r\n * @param pointCalculator\r\n * \t\tThe algorithm to calculate the points.\r\n */\r\npublic LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites spriteStore, nl.tudelft.jpacman.npc.ghost.GhostFactory ghostFactory, nl.tudelft.jpacman.points.PointCalculator pointCalculator) {\r\n    this.sprites = spriteStore;\r\n    this.ghostIndex = -1;\r\n    this.ghostFact = ghostFactory;\r\n    this.pointCalculator = pointCalculator;\r\n}","docComment":"Creates a new level factory.\r\n\r\n@param spriteStore\r\n\t\tThe sprite store providing the sprites for units.\r\n@param ghostFactory\r\n\t\tThe factory providing ghosts.\r\n@param pointCalculator\r\n\t\tThe algorithm to calculate the points.\r\n","visibility":"public","simpleName":"nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator)","kind":"ctor","metaSrc":"source code"},"labels":["Constructor"]}},{"data":{"id":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).width","properties":{"simpleName":"width","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).graphics","properties":{"simpleName":"graphics","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction).direction","properties":{"simpleName":"direction","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.board.BoardFactory$Ground.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit","properties":{"simpleName":"unit","kind":"parameter","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int)","properties":{"sourceText":"@java.lang.Override\r\npublic void draw(java.awt.Graphics graphics, int x, int y, int width, int height) {\r\n    // nothing to draw.\r\n}","docComment":"","visibility":"public","simpleName":"draw(java.awt.Graphics,int,int,int,int)","kind":"method","metaSrc":"source code"},"labels":["Operation"]}},{"data":{"id":"nl.tudelft.jpacman.level.LevelFactory.CLYDE","properties":{"sourceText":"private static final int CLYDE = 3;","visibility":"private","simpleName":"CLYDE","kind":"field","metaSrc":"source code"},"labels":["Variable"]}},{"data":{"id":"nl.tudelft.jpacman.Launcher.pacManUI","properties":{"sourceText":"private nl.tudelft.jpacman.ui.PacManUI pacManUI;","visibility":"private","simpleName":"pacManUI","kind":"field","metaSrc":"source code"},"labels":["Variable"]}}],"edges":[{"data":{"id":"205fd662a54751a1d215167931a4c6fe","source":"nl.tudelft.jpacman.board.BoardFactory$Wall","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall.getSprite()"}},{"data":{"id":"c10b392a458ac0b8afb631662404b146","source":"nl.tudelft.jpacman.ui.PacKeyListener","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.keyPressed(java.awt.event.KeyEvent)"}},{"data":{"id":"c4c4cec7a93b205477390313a7f88fa1","source":"nl.tudelft.jpacman.board.Direction.deltaX","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"902aeaf6d388d63d012f65602e842eb2","source":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int).height"}},{"data":{"id":"e52f9c75685a12a171adfcf412f17aed","source":"nl.tudelft.jpacman.board.Board.squareAt(int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"8be9d525ae543d60b18bc99a5c5424e0","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"1560680294b1b815b896e24ae21f1724","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet"}},{"data":{"id":"9f0dd1f395c892ffdb8186dd9014e0cb","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)"}},{"data":{"id":"c9768ac8f714fc73354ea821316a4850","source":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"0ab9956600b47a5e36dd9c1504fbaa5f","source":"nl.tudelft.jpacman.ui.PacKeyListener.keyTyped(java.awt.event.KeyEvent)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.keyTyped(java.awt.event.KeyEvent).event"}},{"data":{"id":"2770e5739e878d5a0e588f025711b125","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createClyde()"}},{"data":{"id":"c7b0b2ae624b2859b2a39b1657807b33","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler"}},{"data":{"id":"b5c12d7a90c62174acc3696031478176","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.nl.tudelft.jpacman.board.Unit()"}},{"data":{"id":"3615a666279d8ec3ac9bb8a4a942ff14","source":"nl.tudelft.jpacman.board.BoardFactory.nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore"}},{"data":{"id":"361560ba444a0e4a20a934ce7ab2ccd0","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"a3cdab1f93e258d106c4f4d708843948","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)"}},{"data":{"id":"5dc4355a6d0c8f7f4cf9637351f4fc88","source":"nl.tudelft.jpacman.level.Level.players","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"65f9978d86384440669c5e7979776131","source":"nl.tudelft.jpacman.board.BoardFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createGround()"}},{"data":{"id":"6efa65ead803f68b382dce10838ba7ef","source":"nl.tudelft.jpacman.level.PlayerFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()"}},{"data":{"id":"c1c8800da5205a2f3af52ff7952d82ad","source":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"fe9330eed9ae379c85672ab1e2ac51dd","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.current"}},{"data":{"id":"eb11f8b7b0a302edb2a53ae057b7ad30","source":"nl.tudelft","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman"}},{"data":{"id":"e623efc4324cd3c40c90d7da0c6f9a49","source":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction).neighbour","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"ff092693c18e05a33394214af215d223","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"f716f9cb1805d36220ac1ae1ec5a92e7","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.ghostIndex"}},{"data":{"id":"a33bc40f89103e0918787044ec069ceb","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).map"}},{"data":{"id":"5caeaa1e829e71b25ac051b552751f12","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.lastUpdate","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"long"}},{"data":{"id":"aec1a7520966bd563c4a602b5310ff47","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.getSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"fad7c7245fb1c61a14f5fdeaa2242a74","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask.npc"}},{"data":{"id":"8801774e746864d27c72188bab23e6b2","source":"nl.tudelft.jpacman.npc.ghost.Navigation","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)"}},{"data":{"id":"8ab296ffc1c213170e54e4d50e3deb6f","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder)"}},{"data":{"id":"7d1ebb7c8c239b0e628b0083c844ea9a","source":"nl.tudelft.jpacman.board.Direction.EAST","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"83eac61c54494cd115e33a4d464ad989","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).x"}},{"data":{"id":"b8a6eb6f40b2c003df1360f6a375c576","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)"}},{"data":{"id":"c48c2011240725b5876d302873b8445d","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.getInheritance(java.lang.Class)"}},{"data":{"id":"4abc3f1b0395adc2a6fed99a4239b6e1","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPacManDeathAnimation()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)"}},{"data":{"id":"aceb44bc5b1c1cee2dc5e2f1f22e6a5a","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"8b2c9cd6a3b28e88762d5b70b8cd3628","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).width"}},{"data":{"id":"8426e93a34d4fe494747e7522efc8288","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.nl.tudelft.jpacman.board.Square()"}},{"data":{"id":"4643fa98db4c4cb83fef677c772f29d8","source":"nl.tudelft.jpacman.level.Pellet","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"c86b37976923edb8d87ae7c4c3b952c8","source":"nl.tudelft.jpacman.npc.ghost.Pinky.SQUARES_AHEAD","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"80e392e852b61c06f9c28ad9cb93a412","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.startSquareIndex"}},{"data":{"id":"71acf9bdf61d7606a86102b058d7881b","source":"nl.tudelft.jpacman.Launcher.getLevelFactory()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getGhostFactory()"}},{"data":{"id":"b8cb1f2ff724a2d340283b5fc415d6e3","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.animationFrames","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"8472a13a2ff78e7d0872640ba113f023","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"ce596d6b55f95cd04ba6a229adb9c738","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"3faf5ff45a523c923f5cc5111ea181be","source":"nl.tudelft.jpacman.npc.ghost.Navigation","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"130436198c4b2b17e4eccfc0aab24e6b","source":"nl.tudelft.jpacman.board.Direction.getDeltaY()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"1143b117ca757da8f741484538005c5a","source":"nl.tudelft.jpacman.level.Level.updateObservers()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.remainingPellets()"}},{"data":{"id":"ce111c40e00b9437d07cb6c77aabac75","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStopButton(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"3ea60e76aac92e75d60ccef2657b9235","source":"nl.tudelft.jpacman.Launcher.levelMap","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"6bedcb330cce73d9a707609e70a5828a","source":"nl.tudelft.jpacman.board.Unit.leaveSquare()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"0f42be28bd9cabf7c4c2beac33b13cf7","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setAlive(boolean)"}},{"data":{"id":"b0a829b49f25492d9612a9d16a163138","source":"nl.tudelft.jpacman.level.LevelFactory.PINKY","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"04539ee02d45365cc338deda8471f36f","source":"nl.tudelft.jpacman.Launcher.launch()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.withDefaultButtons()"}},{"data":{"id":"286111ca28d21e8419e0c8f784bb4f19","source":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"943b51585c2d21a3385462bdfde15df4","source":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","label":"invokes","properties":{"weight":4,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"a8215ee665b6c3c04a630d2962bf862b","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"0eee82d2068300096292129b65e8fe47","source":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"8a4ae11db7590926a79231e10d0a82be","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"f3382c28c2015403b23794061d2f421d","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).game"}},{"data":{"id":"236ed5e2e6c18ac238005bad6c860a64","source":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"ff70f1d591c22983a63b3778df8ca083","source":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"0c3cdd947af8666b22f8d9e1d2df061d","source":"nl.tudelft.jpacman.sprite.PacManSprites.SPRITE_SIZE","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"3976ea5055962628be9c884b825204d5","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.isInProgress()"}},{"data":{"id":"320005e85eac91702fefab8846baf1bb","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).loop","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"4f0573ba3537e34b7b29c6314b5d2805","source":"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)"}},{"data":{"id":"61e5176f12318bd46847a8c75ba5e3e3","source":"nl.tudelft.jpacman.level.LevelFactory.PELLET_VALUE","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"946bd1847f0161a053eb81db512c3eb6","source":"nl.tudelft.jpacman.ui.PacManUI","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.boardPanel"}},{"data":{"id":"b8423e4b63d2c446c8c10a267187acb3","source":"nl.tudelft.jpacman.level.Player.sprites","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"49875b00533ca9860f03423e3403c1fc","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.animationDelay"}},{"data":{"id":"c819d623b6b584029e393f57a73b75d0","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getPath()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getDirection()"}},{"data":{"id":"b250fea19a9e1916a89e8a5a322b1f9c","source":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String)"}},{"data":{"id":"ddcd96139bee2438cc0d2160bd05ee95","source":"nl.tudelft.jpacman.level.Pellet.image","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"a2d49e8932e0248bcb806a6959ff665f","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"ce06baccbcba2d4dcff151cfd0e1f883","source":"nl.tudelft.jpacman.points.PointCalculator","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)"}},{"data":{"id":"366a42c93f92e0dc7de6d2942f66111b","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall"}},{"data":{"id":"8b7ff3c95dee55d456fee37bbfc286b7","source":"nl.tudelft.jpacman.board.BoardFactory$Ground","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground.isAccessibleTo(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"97ccdc18f529d3b977aae4978d689b3e","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"7babd6aa9c224423c12d2c9abdaf039b","source":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action.doAction()"}},{"data":{"id":"c0569bbf286c71627b44c4ac690157e1","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).baseImage","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"cdd5fb062a4ac7fa33640d2ab3a6b9f4","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.getDeltaY()"}},{"data":{"id":"a1b0de388bc9b52a35cc945e17269572","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider"}},{"data":{"id":"2d067c2eec317d407cc52878cfec25e2","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStartButton(nl.tudelft.jpacman.game.Game)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStartButton(nl.tudelft.jpacman.game.Game).game"}},{"data":{"id":"382767162b3942ef7edfab4d036b27d3","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).graphics"}},{"data":{"id":"b7cfb41ad894ece6080ec79401d27bf5","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collidee"}},{"data":{"id":"4de64be13d9a9231c4765d1f0c34a890","source":"nl.tudelft.jpacman.board.Direction","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.EAST"}},{"data":{"id":"8ad56dede360740bee9ad6bc09b62356","source":"nl.tudelft.jpacman.npc.Ghost.getSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"4fdca3fd1f5715f7b3340192375296b3","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])"}},{"data":{"id":"24d877dd80951523a0cfb53ceb548889","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.getSprite()"}},{"data":{"id":"f11001929f8799567f566e340a9ce876","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.scoreLabels"}},{"data":{"id":"30f08c493000d6599b99c794d56ec493","source":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"187ce130a28472fa51c372287ed6ae41","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.moveLock"}},{"data":{"id":"5d30f9593eda349f8018247805673e72","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int)"}},{"data":{"id":"32a26106995cbf5c822bc95a57716a61","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"4527d5a17e5f7da2061f8b16ac5a9905","source":"nl.tudelft.jpacman.board.Board","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.board"}},{"data":{"id":"ce7fc53997df383cbc58302239d3e8ff","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.handlers"}},{"data":{"id":"ad2f86b43914f6ff8f99aceda3747fe9","source":"nl.tudelft.jpacman.npc.ghost.Navigation","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.nl.tudelft.jpacman.npc.ghost.Navigation()"}},{"data":{"id":"19f6eb2a0088473b04594e4caae8eb6e","source":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"09ce07f0942b0337430c727cbd6e397a","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit).collidedOn"}},{"data":{"id":"6e8f01afc2af92599992e44d3d867661","source":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int).y"}},{"data":{"id":"f8234401758e25b22510b20e442f6f6a","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)"}},{"data":{"id":"b74e11d7f768fc1d2f8e42bfa8f132b8","source":"nl.tudelft.jpacman.sprite","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite"}},{"data":{"id":"f9e97e4cb0a44deb7cfd2cf25c239cc7","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getGhostFactory()"}},{"data":{"id":"1c14e3330c3a3ece84e84059eab06872","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky"}},{"data":{"id":"9e475199d38295ed0e6ca0b218032fad","source":"nl.tudelft.jpacman.game.GameFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.playerFactory"}},{"data":{"id":"93663b00a99a6ca78f3d22799df81309","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getLevel()"}},{"data":{"id":"266d212797767c5bf647b803ce3f6a49","source":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][]).grid","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"7a359fa71fd3c38e442ee49f7d638169","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.npcs"}},{"data":{"id":"45fc3f2e30ccfa9b93e29d63e32d22a5","source":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory.getSprites()"}},{"data":{"id":"48bccfac00ff1f50e5847e3dd22c971e","source":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player"}},{"data":{"id":"d78ba7d406d3080d49f33f4de5afa555","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collider"}},{"data":{"id":"b866844b821a884b613a6776b076367d","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky"}},{"data":{"id":"b139e744de7f4efdf2f6faca0f765992","source":"nl.tudelft.jpacman.game.SinglePlayerGame.getPlayers()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"9b93588b7697c606bc700ea7f7b59606","source":"nl.tudelft.jpacman.Launcher.getGame()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"9c6febdbe866ef3889363ad4a553cea2","source":"nl.tudelft.jpacman.Launcher.makeLevel()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"5dafb3206f0d01220cc5bd9c0112095b","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).moveInterval","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"22cf39d651d9b9e5e6f2e5463af68e49","source":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit).collidedOn","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"5178731059edba93b94c058b02a12e49","source":"nl.tudelft.jpacman.level.Pellet.value","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"a3f83b102d3fdd96fd28168122112124","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener"}},{"data":{"id":"c4900897ec78ce3b1ab32b98c9b40ee5","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).startPositions","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"c9828fd3cc80a805d57e44363983442d","source":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory).boardFactory","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory"}},{"data":{"id":"9e17f754e133e5532919a69e0ebd98aa","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).width"}},{"data":{"id":"18b1319faddc0000e288b487bdbd24ed","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.getWidth()"}},{"data":{"id":"625ea5da4a51957e29430c26dba91427","source":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory).boardFactory"}},{"data":{"id":"deb81d36683c77bd846a91ee649742c5","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()"}},{"data":{"id":"63c2c263751236f73eae623e65b79fba","source":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getHeight()"}},{"data":{"id":"35c1478b7f3fe3b800f520fd6a9e64b4","source":"nl.tudelft.jpacman.board","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"0f5f946a85545317fdfb1f5463316ae0","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"578e6da33da507064c977115fd92a7b2","source":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"3b3b505a0f82d31c2648b587de983f84","source":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"74e0cb90360dc751912a489b825af30f","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)"}},{"data":{"id":"f204431106885d0fe84bc4bd354447ac","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.nl.tudelft.jpacman.level.CollisionInteractionMap()"}},{"data":{"id":"fff84bce46de9a8bca7c40e54b92d208","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.DIRECTIONS"}},{"data":{"id":"e03e8b7b789a8f6ac154a2029ebfecaf","source":"nl.tudelft.jpacman.level.Level.addObserver(nl.tudelft.jpacman.level.Level$LevelObserver)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.addObserver(nl.tudelft.jpacman.level.Level$LevelObserver).observer"}},{"data":{"id":"533c6c14914b3ea7b1901e1aca04758e","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.npc","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"8298e5a216782912d51bdf78afef305c","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.START_CAPTION"}},{"data":{"id":"5f008f3c5747a3a6f7071e1618ae517e","source":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost"}},{"data":{"id":"c76de30933f6b902bb244f9131bb186d","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.getScore()"}},{"data":{"id":"6e0e25a4a082d6383dd35d2f94a8d79d","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"364ef5261059ba8126ff294392d629b8","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collider"}},{"data":{"id":"39d0f5e10356587e859e14e49640f2b5","source":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)"}},{"data":{"id":"2b75e40b6f166a8a104729370c88721d","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"4e6eddd93d819147a97123592bccc677","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.currentSprite()"}},{"data":{"id":"72ce7d9ef17b0ca23e52babb231d87b1","source":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite).sprite","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"54fb72d15eda38386a8b76da48a48329","source":"nl.tudelft.jpacman.game.SinglePlayerGame","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"f4e4dc3850415aa23740f3f6235fd229","source":"nl.tudelft.jpacman.level.Player.setAlive(boolean)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.restart()"}},{"data":{"id":"306379ecff322a0c15702fc3ae0ef0ca","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler"}},{"data":{"id":"be477e69278166974047c4b4995b77cc","source":"nl.tudelft.jpacman.level.Level.stop()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.stopNPCs()"}},{"data":{"id":"bbd2fca9b675988e8bda2c78a0084ca5","source":"nl.tudelft.jpacman.npc","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"cca148f4adad01c4469e063730c89442","source":"nl.tudelft.jpacman.level.Player","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.alive"}},{"data":{"id":"68cd4818a466f67d7426a6ea1bfa9372","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"54c51126362af20a2e099273323087e3","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)"}},{"data":{"id":"f8a6c45af70a98c8f5ce195a8cf32fab","source":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.put(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"563c49aebb9f84ba3a01815e08f79b75","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map)"}},{"data":{"id":"5992a9f917a3c4ae81c724ecdd1b6f68","source":"nl.tudelft.jpacman.level.Level.isAnyPlayerAlive()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"86abb146f7daf77fe8dea1fc29548e91","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"0cacd980005e2d2ba0d735247731035b","source":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"853e849e0a9e5d57cc33cc092e963dd4","source":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor).color","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor"}},{"data":{"id":"55a54e80e0e87982da81fb64d2f16808","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"42771b80e7d922a7890b591b80877a6c","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createPinky()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"ec6596ce9434954a1f2a79b9f72fdac1","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction).unit","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"8029c1b6368bbb2ff0d9b3f43ff63892","source":"nl.tudelft.jpacman.Launcher.SPRITE_STORE","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"6f58979621484fab985d0969f390ef6e","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"f6d174a62d5b4b93f4e4a2002c036421","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createPinky()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky"}},{"data":{"id":"3977942fc1ee02479cc7c2a25f61fb37","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"60f3189d9fb19af44cc978609c080677","source":"nl.tudelft.jpacman.level.Player.getSprite()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getDirection()"}},{"data":{"id":"d8a56d6864efcfbcd5cd88937a590ea8","source":"nl.tudelft.jpacman.Launcher.launch()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"b9ab70b3573dac16b30038f9a3da619b","source":"nl.tudelft.jpacman.sprite","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"f20cfed623d84ea83f84442b3bdeae52","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)"}},{"data":{"id":"1fc72dfe07f03b942cadc86db9dc5437","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getOccupants()"}},{"data":{"id":"0bddfb4820baa65b14303f9a5fd6d8d1","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.getBoard()"}},{"data":{"id":"3497a41ceebf2467bdbd228f84195f8b","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).y"}},{"data":{"id":"848fff92e7c0a6812a65a96fd6daa23c","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collidee"}},{"data":{"id":"56bf579e8833bda100b9048c3fe87cb0","source":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String).resource","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"125a360b5617c8cb6a1b19af1ba17fff","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String).resource"}},{"data":{"id":"70b684acc56521ff52bf59e95e54681a","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)"}},{"data":{"id":"f76c923c0b55fb75655b0e6f62e61332","source":"nl.tudelft.jpacman.sprite.ImageSprite.getHeight()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"a930b63ede0ec55653478b025736d231","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"7de51a59670466263e9dc1b143f1492c","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite).spriteMap"}},{"data":{"id":"6de885eaac7676a31743b5b37965a525","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"759a3f97953ab75f104c9b87a45fae87","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collisions"}},{"data":{"id":"867d1402b6143022e7663675a1106f6f","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler"}},{"data":{"id":"2965e348da0107048a7d39166b9eac7f","source":"nl.tudelft.jpacman.board.BoardFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.sprites"}},{"data":{"id":"2f44c05c4d14461672490df5d3b141a7","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createGhost()"}},{"data":{"id":"f32c33a71179c2086659005135c140d6","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"7148e3dd2ecb3bad7bb41cd2439869aa","source":"nl.tudelft.jpacman.board.Unit.setDirection(nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.setDirection(nl.tudelft.jpacman.board.Direction).newDirection"}},{"data":{"id":"e10360801fcce8d561800c250b484713","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).board","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"89619ac0adf9661c1a00c51dcb8b2013","source":"nl.tudelft.jpacman.points.PointCalculator","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"f79c0d2bb89f75e55e9ccc36cefe580e","source":"nl.tudelft.jpacman.board.Unit.getSquare()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"87e7fd5b5802489ac25e522bb1924e4f","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"6c45224ac80b7143ef4e7a297bb9d8d9","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"50be78d20a4569b2b96bc02b27c4548a","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask"}},{"data":{"id":"a5c02860e20094d48460c69eebe2d186","source":"nl.tudelft.jpacman.board.BoardFactory$Ground","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground.getSprite()"}},{"data":{"id":"5a5e23ad1065ba9dd032b3bdc10f3553","source":"nl.tudelft.jpacman.sprite.Sprite.getWidth()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"42c336cf10e3506f59a02594c0d95dfb","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"f06e8fe2e25b8332786169f2d60b5e62","source":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame"}},{"data":{"id":"1448088d47c4e4b8a17b2397ec5266fb","source":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"64ea5b3ac4b280ebc539f3dc32db1e91","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"bfc421c3d23269dbf533bd60d4c2ca69","source":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"c3a091b6b7274ea496069a4e8545ee3c","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).y"}},{"data":{"id":"639e7f4cdbfa85cc795ff3f194431491","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler"}},{"data":{"id":"8ef75e7b223168e10b7fabd4232af697","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"2403b71f8f6fcf87e064479dc25d3ea8","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde"}},{"data":{"id":"7daefd3a46f11b8c982372e7647cb979","source":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"192569ae5c2a33ab8e610eb1e5209414","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).grid"}},{"data":{"id":"a4232babb87f8914cdd54e8ad13da6ee","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.getWidth()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.currentSprite()"}},{"data":{"id":"ca417e8fbb02102b98f638c04c481661","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).frames","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"bb2b36976c82deb947cea092cd04f930","source":"nl.tudelft.jpacman.board.BoardFactory$Wall","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall.isAccessibleTo(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"4821e311ce691cb281259d5e50c67ca4","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getDirection()"}},{"data":{"id":"eba4373b2e220e3aec3c3afd92f3ded9","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).graphics"}},{"data":{"id":"f177ce8a1677208c308d95478d13e285","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"e73472444b9982d7acc5678d225400ba","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory"}},{"data":{"id":"cc0eebdd255e256185f5843b0b9db695","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"c482b264fb16ac3aa4fa8ae2fe3bbf76","source":"nl.tudelft.jpacman.game.SinglePlayerGame.getLevel()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"9299fd89bc13c5a472aa49fcada8cf83","source":"nl.tudelft.jpacman.level.Pellet","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.getValue()"}},{"data":{"id":"a13112d67cb867014519e794645241fd","source":"nl.tudelft.jpacman.board.Direction","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.SOUTH"}},{"data":{"id":"95f3e65b23c3e952b6afce0755ecf74d","source":"nl.tudelft.jpacman.ui.PacManUI.boardPanel","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel"}},{"data":{"id":"5216d09873d0509c0876c71b3be28763","source":"nl.tudelft.jpacman.npc.ghost.Inky","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"07813d259fd69e20ee0400665a6cb102","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)"}},{"data":{"id":"a78b45474f09ce88c5033ce97d4c8d87","source":"nl.tudelft.jpacman.points.PointCalculatorLoader","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.nl.tudelft.jpacman.points.PointCalculatorLoader()"}},{"data":{"id":"680eb3931bdfcaab7c0b56ad68a68806","source":"nl.tudelft.jpacman.board.Board","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getWidth()"}},{"data":{"id":"f39ee9311fe4129839ecfac960ea7d76","source":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square).start"}},{"data":{"id":"32909e5aced4a264c7d64589cebb4d4a","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).baseImage"}},{"data":{"id":"446b45833d41ecb88be375dad93e7395","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"2d06702c4716e8ea991d78e9c7c2810a","source":"nl.tudelft.jpacman.Launcher.getMapParser()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser"}},{"data":{"id":"b2b1c80748535fb6dd0b5017b0e7e24e","source":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][]).map","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"char"}},{"data":{"id":"3948a237c31d2bcbe2a18f6a23b25111","source":"nl.tudelft.jpacman.game.Game","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.progressLock"}},{"data":{"id":"656e291e804e84dabe7a7aaa2c187764","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream).source"}},{"data":{"id":"9227c696509f2e077687413206aa3b01","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createWall()"}},{"data":{"id":"93f4af6f5186aa15a14d9b3e6e61d438","source":"nl.tudelft.jpacman.level.PlayerFactory.nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory.nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore"}},{"data":{"id":"85f00c4f9d6eaa0d7edbb5c1e88bd77d","source":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit).ghost","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"bc1b3ff1a2e8473cdb0c8c4684de4ac9","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handler","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"d59fd17a5a64fe65fc3277ae84d28c15","source":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit).killer"}},{"data":{"id":"d26b1f11dc49a85f60e695d5895ab039","source":"nl.tudelft.jpacman.board.Unit.direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"443b4e6fbe294be0352243f713af3679","source":"nl.tudelft.jpacman.board.Square","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.neighbours"}},{"data":{"id":"360ea3815b042901a330ac544df447b6","source":"nl.tudelft.jpacman.Launcher.makeGame()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"68f8761e5c13828c41754cb73ae84b0c","source":"nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_DEATH_FRAMES","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"be4ca5b231d27e167622eb8488623a66","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).intervalVariation","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"6443d4fa45d7698ef3ea17f065c4c98b","source":"nl.tudelft.jpacman.npc.ghost.Pinky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky.INTERVAL_VARIATION"}},{"data":{"id":"4affe0bc74b9b2af526bb43abc9caeba","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action).action"}},{"data":{"id":"5885b1b7848d27a9ccd0ceeb035f2a5e","source":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).spriteStore","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"a5a50456f4af4ea4b234051df3d843b4","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler"}},{"data":{"id":"adfe2329db5031325331f988fb84e3a2","source":"nl.tudelft.jpacman.npc.ghost.GhostColor.nl.tudelft.jpacman.npc.ghost.GhostColor()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor"}},{"data":{"id":"28428b0b682664b47acc75670022ab24","source":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.withinBorders(int,int).y"}},{"data":{"id":"d2129a703cb18dc7428fa73567b3e7c4","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.updateObservers()"}},{"data":{"id":"e87cb9b62aa58a3bab9ee5a20011a2ae","source":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"8cf989e36803c7196c9eedb5d6dbb2b4","source":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"914bd150affc0896c5c1b2266a807898","source":"nl.tudelft.jpacman.npc.ghost.Navigation","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"1d1d3a4c71d42c3183ec465d56dd2596","source":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getWidth()"}},{"data":{"id":"350fcefc2322cddf55214da412ff6c89","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"a8f825e89321444ce26398d774b0e0f7","source":"nl.tudelft.jpacman.npc.ghost.Pinky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky.SQUARES_AHEAD"}},{"data":{"id":"f8af9100b6a9f2d7603565683edbee8a","source":"nl.tudelft.jpacman.board.Unit.getDirection()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"edc97e657325e6a6bce5332124899921","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).startPositions"}},{"data":{"id":"cec9dfe99fe9bb8529baa70fc47a43f5","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.levelWon()"}},{"data":{"id":"88ddcb0ac3e6c130a2569ec854d5f69d","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getPacManDeathAnimation()"}},{"data":{"id":"120edea0493eda3edb69bd07ff93ad69","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"71948e89c903780a77496d9a35ec5f41","source":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getGame()"}},{"data":{"id":"9a1bdc359e7c9d76f9276c23a78577b1","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.nl.tudelft.jpacman.board.Unit()"}},{"data":{"id":"c1713132ed576b5168952959cd9433b2","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStopButton(nl.tudelft.jpacman.game.Game).game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"ed5ec8e91c3daadac2d524f87a3b049f","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getMapParser()"}},{"data":{"id":"e50a09d4bec78e33713092563c1adaeb","source":"nl.tudelft.jpacman.npc.ghost.Inky","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()"}},{"data":{"id":"255a752cdf5779959040df0e7975398c","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).delay","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"1b51e606f9824c2a7ab449c9e5dcb585","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.buttons"}},{"data":{"id":"daaf3514f657be0e01ddd4ec3a1e4421","source":"nl.tudelft.jpacman.points.PointCalculatorLoader.load()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.loadClassFromFile()"}},{"data":{"id":"420f3fd1a045180f1e472b68524d9ade","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)"}},{"data":{"id":"ac6be56da03b58f062bdc66055d06475","source":"nl.tudelft.jpacman.points.DefaultPointCalculator","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.nl.tudelft.jpacman.points.DefaultPointCalculator()"}},{"data":{"id":"b9ca3df5a1579cf035ebdd7732253fe9","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"7df7c0eb4d3aced55e9a71a453bcecae","source":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int).deltaY"}},{"data":{"id":"1bbb92d1cf4b0ea4fa73d5c53c22a15d","source":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"f3dd8794516ce1553503fea601cfeae6","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.pointCalculator"}},{"data":{"id":"0ae90c527b0fdc47c576bbabb3eb1c27","source":"nl.tudelft.jpacman.ui.ScorePanel.setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"4418039f1dc214a7eccbf473d83df2a6","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.nl.tudelft.jpacman.Launcher()"}},{"data":{"id":"ab19d71d1ac293011951d1cd0b3ce7b9","source":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map).spriteMap"}},{"data":{"id":"965f3e70104b47a7e0c0a9d1da7a2a41","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).y"}},{"data":{"id":"dd981c8407f84e616b41a1e8a4d99d87","source":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"838df37d13c961e77c1bcd7ca4bf8edd","source":"nl.tudelft.jpacman.Launcher.getGhostFactory()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory"}},{"data":{"id":"522c1a9ed5b31e9f591c2a5edcb667d7","source":"nl.tudelft.jpacman.Launcher.getGhostFactory()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory"}},{"data":{"id":"84bdead78dc2b4a8aa3692d1ce0618ac","source":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction).direction"}},{"data":{"id":"f5659ff0d48234a472958f17fd517430","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getSquare()"}},{"data":{"id":"081333b157575e4439f6f20a74adc909","source":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getHeight()"}},{"data":{"id":"094b7f14f500c8dfc699b90186d3525d","source":"nl.tudelft.jpacman.board.Board.squareAt(int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)"}},{"data":{"id":"313cbaff5dcde6356bda8ba598f5ed0c","source":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction).direction"}},{"data":{"id":"3dab3a474f4985f68ba09c848da07be5","source":"nl.tudelft.jpacman.Launcher","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.levelMap"}},{"data":{"id":"d6510d5c73d520e35883bb70233e869e","source":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost"}},{"data":{"id":"a884b75399ff3745cbafb046c77e9afd","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)"}},{"data":{"id":"7ac96000f686a2ff2b9ddca17c8bc218","source":"nl.tudelft.jpacman.sprite.EmptySprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.getWidth()"}},{"data":{"id":"24864d3ba3af545fa9c59405fa1c5acf","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"8a9632a8adcaa2c94b4dd9b94aff4373","source":"nl.tudelft.jpacman.points.PointCalculator","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"f9cd09633d59c7d88922c8c521d0e972","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).width"}},{"data":{"id":"ed0b0a4530a1acb667202602a9e9cbb0","source":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getPacmanSprites()"}},{"data":{"id":"80a098ec480a3b5a0c1091bc6051a2a9","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.makeLevel()"}},{"data":{"id":"a0d228d7aaf039ac1eda04cb4ce9fa2c","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int)"}},{"data":{"id":"aae77c2c415e3740d32ed90bf650ddc6","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createBlinky()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"ed20f6cffbb8baf3156bf10fe2adb787","source":"nl.tudelft.jpacman.board.Board.squareAt(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.squareAt(int,int).y"}},{"data":{"id":"19cd6d5bc8c6434bccff1aabf002f9fb","source":"nl.tudelft.jpacman.board.BoardFactory$Wall","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"1bd9fcb567029afa16bd037c62c1b813","source":"nl.tudelft.jpacman.level.Level$LevelObserver","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver.levelWon()"}},{"data":{"id":"8bc032fc661a8d97138423b180240344","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"3ab12d89d5898c9ef52f554a64ddcea9","source":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction"}},{"data":{"id":"12bea88277e28bb19f04b2de2e2347a6","source":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)"}},{"data":{"id":"2191d1b898269fc10ed8bda97e0cf0c9","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator).pointCalculator"}},{"data":{"id":"43cb8dab882156311728fa4fd5b6825d","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"c171ba0bc16aeba172fa15484f71ea5d","source":"nl.tudelft.jpacman.level.LevelFactory.GHOSTS","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"2603facc205491ed1ea16bca9863c6fb","source":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"2042b0d74381c32a49e90557b4dcf1a7","source":"nl.tudelft.jpacman.Launcher.makeLevel()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getMapParser()"}},{"data":{"id":"3cb86f09131320441466424c12bd41f9","source":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).spriteStore"}},{"data":{"id":"a3c4ce607ceeab04ab0d277e0371edbf","source":"nl.tudelft.jpacman.board.Unit.setDirection(nl.tudelft.jpacman.board.Direction).newDirection","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"5af99b32ddf256c59f4070d01fac6b39","source":"nl.tudelft.jpacman.level.Level","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver"}},{"data":{"id":"729efcd1c37b0b3f145b36b4639a4f6e","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)"}},{"data":{"id":"cbd3d403fb683f9faa1e2efb4e1d7ea4","source":"nl.tudelft.jpacman.game.Game","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver"}},{"data":{"id":"190cd34bbc9bc466f2d9f0c764518195","source":"nl.tudelft.jpacman.npc.ghost.GhostColor.ORANGE","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor"}},{"data":{"id":"92603c9055950de907585a1a8bbebe89","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.levelLost()"}},{"data":{"id":"939b53d889bd233fd26897b210a184c9","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nextAiMove()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"ffa6bfa04c691eec338e2073e0c2a12d","source":"nl.tudelft.jpacman.board.Board.withinBorders(int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"14b80d5d89ae4e82cb58030627e76dd0","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map).ghostSprite","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"5265a5ced5df5069c501c7b1e9ae5b6d","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).startPositions","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"bf046a09e959b4068194fbebe65c7347","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square).currentLocation","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"5a25ee1c968beefd266a95d0ee11df79","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.opposite()"}},{"data":{"id":"70ba2f95ab2b9bf95f216cf2c998bfac","source":"nl.tudelft.jpacman.board.Square.occupants","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"70883adf5fb3a73f455c4c4fde21655f","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).delay"}},{"data":{"id":"c7a58cef00b551dfd7923ff9e9419a86","source":"nl.tudelft.jpacman.sprite.ImageSprite.nl.tudelft.jpacman.sprite.ImageSprite(java.awt.Image)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite"}},{"data":{"id":"ddbf7e879cb266b16518c0556ce7be67","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.withMapFile(java.lang.String)"}},{"data":{"id":"0beb84a79a377fa304883fec17cd52f3","source":"nl.tudelft.jpacman.Launcher.DEFAULT_MAP","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"6f2ce06ec00440ed254552a16c773e16","source":"nl.tudelft.jpacman.npc.ghost.Clyde.SHYNESS","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"77cb3ba566c27f0c242aa74f88cce8ed","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).board"}},{"data":{"id":"5eda7589b38465d9d712c9e9f97b834b","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getPath()"}},{"data":{"id":"d2876a26afc0c920e679873a0b70c089","source":"nl.tudelft.jpacman.level.Pellet.getSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"9ca3ccd13430da22474e31045244f9a1","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getParent()"}},{"data":{"id":"3f12bb09a1b1187caac123d2ca55e48e","source":"nl.tudelft.jpacman.game.SinglePlayerGame.level","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"5f9a7012538740f6b611af5643ab6e06","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"5d06c35df720fa789660a6cb8677bd6b","source":"nl.tudelft.jpacman.game.GameFactory.getPlayerFactory()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory"}},{"data":{"id":"843eb0ca5e564d723dda1c9c101c7d3c","source":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor).color"}},{"data":{"id":"302f26cdec91cafe1c220ffb1fb184bf","source":"nl.tudelft.jpacman.Launcher.withMapFile(java.lang.String)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher"}},{"data":{"id":"bf549f13b36a24d47b421f8caf76a42f","source":"nl.tudelft.jpacman.npc.ghost.Clyde","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map)"}},{"data":{"id":"f957d4481d248caa1c787c1e8d326e32","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"03356484e88fb5c0c49ab511b9a1fe4c","source":"nl.tudelft.jpacman.game.SinglePlayerGame","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"49d1154444b136cdb6db5253b9d7905b","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask.service"}},{"data":{"id":"8976b5a7db6c29cb4d1f6b95729f4d11","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"7f709b4b928db241702b3bdf8d35af4b","source":"nl.tudelft.jpacman.sprite.SpriteStore","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)"}},{"data":{"id":"d851e3393fedeec090fb1cb1c2d83df5","source":"nl.tudelft.jpacman.npc.ghost.GhostColor.RED","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor"}},{"data":{"id":"72c9be37e1da4661134d0e248c056663","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.nl.tudelft.jpacman.points.DefaultPointCalculator()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator"}},{"data":{"id":"c6f4997adb6596988d3a154760e2461f","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String).mapName"}},{"data":{"id":"fa12d62efe0282156970059422aafe19","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"5d921e589e786091f5d6fcc3b2470263","source":"nl.tudelft.jpacman.npc.ghost.Clyde","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde.MOVE_INTERVAL"}},{"data":{"id":"93de4014fb0a1b2a2e16f742461123a8","source":"nl.tudelft.jpacman.ui.ScorePanel.DEFAULT_SCORE_FORMATTER","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"9e3327a90897aadd4ec26f498e348a85","source":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square).directions"}},{"data":{"id":"a99e47e125d616183cf1680fd2764c76","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.start()"}},{"data":{"id":"4cc2348042fbf26d5d98a9f8e4c9474d","source":"nl.tudelft.jpacman.ui.PacKeyListener.mappings","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"1be041eb18bdf4bd7538788f17c73ae4","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee"}},{"data":{"id":"10b5dc9e0d7d687bee5080764a232baf","source":"nl.tudelft.jpacman.Launcher.getBoardFactory()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory"}},{"data":{"id":"1fe474b24f62601c75028c296416836f","source":"nl.tudelft.jpacman.level.Level.startNPCs()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask"}},{"data":{"id":"d0860225b4fad218b9a404721c585a9c","source":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit).killer","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"010fe1b22aeba8b39eda3118ed7da2eb","source":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"ec9695d1d1e905e4d90eae3dc8163aef","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream)"}},{"data":{"id":"bd8869b230b73210dc41abd6a8e273df","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).mover"}},{"data":{"id":"2086aee2dce37ac277ee2d22b69e3ce3","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getPacmanSprites()"}},{"data":{"id":"fd17f5ccd0a958c492a257907e971f2f","source":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit).occupant","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"7f4208e4097c0d77e3dbd30a921a5282","source":"nl.tudelft.jpacman.Launcher","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.game"}},{"data":{"id":"b5fb3d91339bb7a375708d84650ccd12","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.getSprite()"}},{"data":{"id":"671e4b364df99cc042c8cca6b6f00e98","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getLevelMap()"}},{"data":{"id":"7c912a0e0cd205d13dd88f57beaa37de","source":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator).pointCalculator"}},{"data":{"id":"40f2a34c169e621280d11428db8a4734","source":"nl.tudelft.jpacman.Launcher","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.DEFAULT_MAP"}},{"data":{"id":"f4cf701a697510d26d4e40f0c40c70ca","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"faaadc9cf423f26d4e31b904a36264e9","source":"nl.tudelft.jpacman.Launcher.main(java.lang.String[]).args","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"05aab37a647649e5b86c25b47e77c68a","source":"nl.tudelft.jpacman.npc.ghost.GhostColor","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor.ORANGE"}},{"data":{"id":"de340a526b11c1b940c991c2313377fa","source":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"5cd36a1b2898947481b5e8ecda32b850","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board).board","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"53dc4c7428c0139fd3265fa24890057b","source":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder).builder"}},{"data":{"id":"078f4a516d0a9fe6ed70ed183a69a060","source":"nl.tudelft.jpacman.board.Board.board","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"265224c5e2475553509a862186ca95de","source":"nl.tudelft.jpacman.sprite.ImageSprite.getWidth()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"50cde832cbcb2f2fc8ad8e02c3fe3abd","source":"nl.tudelft.jpacman.ui.PacKeyListener.keyPressed(java.awt.event.KeyEvent)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.keyPressed(java.awt.event.KeyEvent).event"}},{"data":{"id":"aa0b4b7d55b5e9747e13159254ae22e6","source":"nl.tudelft.jpacman.points","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader"}},{"data":{"id":"9950f0e577b9ea70b947cdcf893415d1","source":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost).ghost"}},{"data":{"id":"dc79f7338c5bbf92a20796e9cb316b61","source":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"9672c02cc1c6517e743f6c483e716f4d","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_ANIMATION_FRAMES"}},{"data":{"id":"317e7a7b173736910565f24a16fc0dd1","source":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square).start","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"5debfbcfe22534740e1b367fef3891ad","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"f2740a3602afd2da98cb8c908b1b0d29","source":"nl.tudelft.jpacman.board.BoardFactory$Wall","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite)"}},{"data":{"id":"c593ff10e66987a74a9fde251d40524d","source":"nl.tudelft.jpacman.board.Direction","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.opposite()"}},{"data":{"id":"024c6a700ab9fb6876b5e88f9489b900","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getPath()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getPath()"}},{"data":{"id":"f4ab9b15e4213b9d79e93e4758f77cbf","source":"nl.tudelft.jpacman.level.PlayerCollisions.nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator).pointCalculator"}},{"data":{"id":"e500782a3600f0fd919a202b8e7a00da","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).height"}},{"data":{"id":"6d63322cea56044bc00528b35885476b","source":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"6867edd01f93a9cfdf3eebffa33429d0","source":"nl.tudelft.jpacman.npc.ghost.Inky.MOVE_INTERVAL","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"cdc23178d71ac7feb5ecfed4f47dee6f","source":"nl.tudelft.jpacman.level.PlayerCollisions.nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator).pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"70b4f54257a29034a40a3f6838c33c64","source":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"791a6033564b2a208b7af2a8b41c8def","source":"nl.tudelft.jpacman.level.Level.isAnyPlayerAlive()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.isAlive()"}},{"data":{"id":"c55b4f9fa4bbbe9d05940a33028c2788","source":"nl.tudelft.jpacman.points.DefaultPointCalculator","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"8957d1584c2a6ce60e8637992a07a703","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createInky()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)"}},{"data":{"id":"2a31a1fc5b6408cc5ca3ed07d0dc206f","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).c","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"char"}},{"data":{"id":"f738e4a78dc3e85367b5f0fe3962aae7","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)"}},{"data":{"id":"93ab92d0453db4f2cb5e5254f0fd003b","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPacmanSprites()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"92490de493c375d14c81c1d8e5bd2d8b","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.ANIMATION_DELAY"}},{"data":{"id":"1bc3926076603220a1d58ad11739cb3e","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"9149b4a2d93bb9a38b3a140cc919fbf6","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).width"}},{"data":{"id":"16de080044839831a50c13acaac49e3e","source":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String).message","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"362291fe26629ee54d29c1199ce70219","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"cbc77315707ea087c88498a4905e63dd","source":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).ghostFactory"}},{"data":{"id":"5717e08a34da377561ff2d1c6d0dce6b","source":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit).collidedOn"}},{"data":{"id":"5e99765d62ea39df1e4c67db9a6ca86c","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).frames"}},{"data":{"id":"6856ad3426f95613554d2b9e35d3af25","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)"}},{"data":{"id":"8383a8cfd260a092cf4051c0ac1abba7","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)"}},{"data":{"id":"8deb3707048b2ff666c5442f0228cd01","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createPinky()"}},{"data":{"id":"d1f8dcb04610e242cad29d4db495a900","source":"nl.tudelft.jpacman.game.Game.stop()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.isInProgress()"}},{"data":{"id":"8da3a0e800b476452cbc8c3f281287e8","source":"nl.tudelft.jpacman.npc.ghost.Inky","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map)"}},{"data":{"id":"50a8d64f4bad4f8b37a378d87450d217","source":"nl.tudelft.jpacman.Launcher.loadPointCalculator()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"262e6ad0fd3c71145a1c6a38520fd3fd","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square).type"}},{"data":{"id":"1f19cd290cbd1be63924e1aeb39f02af","source":"nl.tudelft.jpacman.level.PlayerCollisions.pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"3a0768900ba24854c7896dec95571ec9","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap"}},{"data":{"id":"ee6031ba07b7890d459f5aaf574ec3f4","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square).currentLocation"}},{"data":{"id":"497b68198d1ba0ab2159c930566032e9","source":"nl.tudelft.jpacman.sprite.SpriteStore","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String)"}},{"data":{"id":"d7a1bd22a212ec26c56f645211e38fb7","source":"nl.tudelft.jpacman.game","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory"}},{"data":{"id":"7df0e0dbba088743c5964cac2b72394c","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player"}},{"data":{"id":"34c3045a23fa5685bfe2a3bef52bef9a","source":"nl.tudelft.jpacman.sprite.SpriteStore.nl.tudelft.jpacman.sprite.SpriteStore()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore"}},{"data":{"id":"5f98f165237bdc0167599c24d4a126fe","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"4854e4af3bf3ae7b1428800bfb6a87a9","source":"nl.tudelft.jpacman.board.Unit","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.direction"}},{"data":{"id":"57a5eecf729196333da1cc1917934b12","source":"nl.tudelft.jpacman.ui.ButtonPanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ButtonPanel.serialVersionUID"}},{"data":{"id":"80944d5d135641c140bb9846aa661690","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"7d546273e4a6639cf6bc1e2247a89e9a","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"c931a12b244f4f9d6f0426fce3a4a72e","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.stopNPCs()"}},{"data":{"id":"0a17d4b45c469781151079c70f512791","source":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"7e152ec390fcf4e0b719720a13f5a23d","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.keyMappings"}},{"data":{"id":"5326166b168a783128199313b6fd6049","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"edebce11870b06b30b35532a56e26b51","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.game"}},{"data":{"id":"abd59ebabfecb0f69baeee981c1960cf","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost"}},{"data":{"id":"13722ce36755c2095cf2494d34cc1b92","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite"}},{"data":{"id":"6d6af0cb7bec00f3780dcb09b7eb9fbb","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)"}},{"data":{"id":"e7956bb7fe6206eb76bd743cceee0f9d","source":"nl.tudelft.jpacman.level.Player.addPoints(int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.addPoints(int).points"}},{"data":{"id":"aae957c0b0adf1a808ec57d7ba5ddb84","source":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"555e3c8eb16cfa9036eb6376c21a8cf8","source":"nl.tudelft.jpacman.level.MapParser.getBoardCreator()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory"}},{"data":{"id":"5f671beee9463d3b80a6dcc8fa33fa28","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()","label":"invokes","properties":{"weight":3,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"ed5856591207fd0f1b6064e476d8a7be","source":"nl.tudelft.jpacman.sprite.PacManSprites.nl.tudelft.jpacman.sprite.PacManSprites()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.nl.tudelft.jpacman.sprite.SpriteStore()"}},{"data":{"id":"b14115c03a7596af54da8be962743fec","source":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit"}},{"data":{"id":"496653121fa3455f5f4831c15a9a07c7","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"1bb9538b87e174ac88cf2b78052b362a","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).visited"}},{"data":{"id":"224720855949a64a5c3de6c52dcc8e0e","source":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getLevel()"}},{"data":{"id":"28f69fce57fe58c7c12907d535ccb6d8","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).traveller","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"5ec9d49d2ff7aeae33199705ebd75d6e","source":"nl.tudelft.jpacman.ui.PacKeyListener.keyReleased(java.awt.event.KeyEvent)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.keyReleased(java.awt.event.KeyEvent).event"}},{"data":{"id":"c775808bec092c24f1fa29a4d978b34e","source":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).pointCalculator"}},{"data":{"id":"90d01fae72524e8a489683b1ba5b7936","source":"nl.tudelft.jpacman.level.MapParser","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.boardCreator"}},{"data":{"id":"0ce2b1afa5cf6495975a39414b27d0e8","source":"nl.tudelft.jpacman.npc.ghost.Pinky.MOVE_INTERVAL","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"93e08272994546f6def56bb51208f9df","source":"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)"}},{"data":{"id":"0ac29d5188747e0519974e9a58fdad6b","source":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).pointCalculator"}},{"data":{"id":"6a73a8d8f7051f9a7fc16874f81ef33b","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStartButton(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"e6b2b764d7309892efae2a3905526a0d","source":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getLevel()"}},{"data":{"id":"5849458afdd8db78852abe5564b0cd81","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.PINKY"}},{"data":{"id":"7b7531799270369cbeb4ab50b4e3778d","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore"}},{"data":{"id":"04bd10d3e2422aaefce0a2606107c2b3","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"99261f0a3ef2350cbac92ddf4a1fb91f","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getPelletSprite()"}},{"data":{"id":"6a9379fb2016e773e1b95725ff83c7fd","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).frames"}},{"data":{"id":"bd1369ee6cbcee461de80971710817a1","source":"nl.tudelft.jpacman.ui.ButtonPanel.serialVersionUID","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"long"}},{"data":{"id":"bf4a29653cbe6b038f4270fc1b1f5ebd","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"21d08151121827971be8b2262db1d64c","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.keyMappings","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"08905a9d44c153aaa66c90544dad9613","source":"nl.tudelft.jpacman.npc.ghost.GhostColor","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor.RED"}},{"data":{"id":"060ff697ec34ddabb772281957f9ebf9","source":"nl.tudelft.jpacman.game.GameFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.getPlayerFactory()"}},{"data":{"id":"9ea4431c78a29e8176d6473eb3298468","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite"}},{"data":{"id":"b6d458a960fc5fc6d98c77d143c8ab6a","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).width"}},{"data":{"id":"4cca3024ca5fa5cc5e2cc0038847b120","source":"nl.tudelft.jpacman.Launcher.getLevelFactory()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory"}},{"data":{"id":"caede41fc317bdef9256d014e6bd0d7d","source":"nl.tudelft.jpacman.board","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory"}},{"data":{"id":"8d5cc054c37b00dc10a43b518542c63c","source":"nl.tudelft.jpacman.npc.ghost.Clyde","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde.SHYNESS"}},{"data":{"id":"65fa9e3aae3e61af556975f1fb7fdff3","source":"nl.tudelft.jpacman.level.Player.getSprite()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.isAlive()"}},{"data":{"id":"073f784348b0bd037870773dc82209b9","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI"}},{"data":{"id":"48df6aeb20e7981a0111b74fc4683ff1","source":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"4c1949703086cd6c121fb441908725db","source":"nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_ANIMATION_FRAMES","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"8dff700628b7224f8b2e45dd1433df8c","source":"nl.tudelft.jpacman.level.LevelFactory.pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"4449dbafc9e599d75f218c91455f6425","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createBlinky()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky"}},{"data":{"id":"0ff70d06bda3d2611d4ce6150983c7a2","source":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"6f79974a0caef3a80dd1230f19aa672b","source":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics).g"}},{"data":{"id":"9d2262478ae34d5f042b4974d61d24ca","source":"nl.tudelft.jpacman.game.Game.levelWon()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.stop()"}},{"data":{"id":"b6ed90a83447ba4c5e5d62ced3a33aca","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getPath()"}},{"data":{"id":"9aec821c9a0776a9ab477c19bdbb6a42","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"695aa95358e57913b93e00cb3aa10396","source":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)"}},{"data":{"id":"437dcefeb3061e019f7477fbb4026000","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap"}},{"data":{"id":"4c37c80d01626544834616a4cc72bf94","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.GHOSTS"}},{"data":{"id":"3abd1e0cebdc51d296b298a2158e1b2f","source":"nl.tudelft.jpacman.level.Player.setAlive(boolean)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)"}},{"data":{"id":"ef383ecd4bf06b1445a31ed671866d88","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"bd08e2d9c354925c805b8b70456edc27","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).loop"}},{"data":{"id":"af4f9a47c2c04d236e5fe6528ae3a91e","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).square"}},{"data":{"id":"224630a52f4bbfcec909da619c3f37c8","source":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.invariant()"}},{"data":{"id":"d06dc1e7ce9ff3ea091bd085017c3844","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List)"}},{"data":{"id":"f63c1b30042b87ae85f07b751a27d931","source":"nl.tudelft.jpacman.board.Direction.deltaY","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"39a4847bb90428d82133d577dcfa694b","source":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game).game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"eefa2ef99c33c0389ed8a4f2afa29d5a","source":"nl.tudelft.jpacman.npc.ghost.Pinky","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"aa7a2aeeeea92ef2cf0bd617710f27f8","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator).pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"e3c755ff51298a112d2c1ff1456ec5f4","source":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"6994a26d3d63981c85e04d0a9d26946a","source":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder)","label":"invokes","properties":{"weight":4,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action)"}},{"data":{"id":"1225fd63e2a46a6e0181e2eb2c7c3959","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"8a3045816e1f43e0bf0e38f03990c6bc","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.END_OF_LOOP"}},{"data":{"id":"c19e388e0475ec91068e91dd96657663","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)"}},{"data":{"id":"8716ea23073e5b723359bf679401f1e9","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).frames","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"03206eea7c8c3fb1783cef9308c53bd0","source":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet"}},{"data":{"id":"bb0bc0e2f74e7601116263f7c6b2f33a","source":"nl.tudelft.jpacman.level.LevelFactory","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost"}},{"data":{"id":"d2ed925731ca92d62775897e95ad15bf","source":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List).text"}},{"data":{"id":"e7675519b73170e69f7677346f6590f0","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"7926ea753347debe65eb99e0fb7d7911","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game).game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"4ed0765dd656478e3e32b9e6863ef790","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"b2a38f563d6b6b61b1fa04cce46e0b41","source":"nl.tudelft.jpacman.board.BoardFactory.sprites","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"e4bf0ce87c7b97164724dd3d35e06b1d","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction).direction"}},{"data":{"id":"ef8834a439ee7c98f56a01a4712d6564","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"0c28450726a2154e81b8ef8c44003c95","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.STOP_CAPTION","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"e328ab18cc6f3ff47debdbb8860b5979","source":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"e470e711d592b2a805182dfe35905407","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player"}},{"data":{"id":"af163bfb779f0d5439d0b8b77f702787","source":"nl.tudelft.jpacman.level.Player.getScore()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"684f046947bd46f879dfb9ac99aa4256","source":"nl.tudelft.jpacman.game.Game.pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"bff46324620bc64f239fb779ef6b8441","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"invokes","properties":{"weight":3,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createGround()"}},{"data":{"id":"82b7bd0d01fd55b8b86cb0d8e8704f8b","source":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int).amountToLookAhead","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"7558b33cfa4eee96971e05471dbf27d6","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"068434b263ec7bf09ef8fe287a6f2625","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).buttons"}},{"data":{"id":"3349baeef1d85e3dbd40954a19a34c50","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createInky()"}},{"data":{"id":"ae714ef16619ac8418764afd6fcde287","source":"nl.tudelft.jpacman.level.Pellet","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.image"}},{"data":{"id":"af2b05647612021f56415db1c45092da","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"fcb3a87790f9c4d9f1acd117c62eebc7","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSprite()"}},{"data":{"id":"648f1a0235bdd3887aa86cc46915333e","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board).clazz"}},{"data":{"id":"05d541f248b4f445a6b37f4c3edfbbef","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String).resource","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"84dcfbd44721a6f1ce3ccd713b938791","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).graphics"}},{"data":{"id":"4c5c8baf005bf903c8672d1e323a4c65","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).x"}},{"data":{"id":"0d4b59d9c803d8a112f88d2c4a3a846b","source":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"cd9de39ae120c9891aa9ed42ca7367bb","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)"}},{"data":{"id":"b37f448096df6fdac95c2911bfc15542","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nextAiMove()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"db4d85393d6b11b115b9d234abd5ea87","source":"nl.tudelft.jpacman.npc.ghost.Navigation","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"285c8bd948b45acee6578c5ab1c26c52","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).delay","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"9c2fdf6276bd86f5ee5b779eb40ef046","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)"}},{"data":{"id":"2f8ebfd261e363fcf6e10719bf1be4b5","source":"nl.tudelft.jpacman.game.Game.start()","label":"invokes","properties":{"weight":4,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getLevel()"}},{"data":{"id":"f3cc11fe779bee52b99af4a6c7f02da6","source":"nl.tudelft.jpacman.Launcher.withMapFile(java.lang.String).fileName","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"58c74906e5a967662809b9ae2454b874","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.players"}},{"data":{"id":"deac640bc0a077d4a9ae8feb03902d70","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).width"}},{"data":{"id":"faf37bf99848323549cb0c690ffe81b4","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap"}},{"data":{"id":"bfdf23137fae8b17930c9c1047b67764","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite).sprite","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"a0270ba61c174a58a6046cc22aef1048","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)"}},{"data":{"id":"c0cf043b4762ced7506102686f6e75a5","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"f3704e03dc21ab8f9e90954ce45559ca","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])"}},{"data":{"id":"157c5bbc93fd3263c5482abf81e81e29","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.sprites"}},{"data":{"id":"7c388433e857eee9e5cbaa73363ef6b7","source":"nl.tudelft.jpacman.sprite.PacManSprites.nl.tudelft.jpacman.sprite.PacManSprites()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"757bb5869fdb83a7872f6f28980aade4","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class)"}},{"data":{"id":"0a103acf1362d543635c203ff32baab7","source":"nl.tudelft.jpacman.board.Direction.opposite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"4fe9dcb620399f7c4f29811d499cb6f3","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPacManDeathAnimation()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)"}},{"data":{"id":"7144308943608c0525e3114c6f97a36c","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter"}},{"data":{"id":"6977a106fe6adf788451c3fa9c9ae2bd","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"9d2ebec50e7c90be93177c342f07d364","source":"nl.tudelft.jpacman.board.BoardFactory.createWall()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall"}},{"data":{"id":"aa14e5c6c0faea2b517c0812a5aa6441","source":"nl.tudelft.jpacman.game.Game.inProgress","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"cd59e63d06032fe059372f7386c78540","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).isAnimating","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"90895da8095ee8d6b90fd829627ec14e","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)"}},{"data":{"id":"218f87b9ff6028cec9f450073f5585bd","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.run()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.getInterval()"}},{"data":{"id":"57c2596704a5769c7d9cfe3a22cc175e","source":"nl.tudelft.jpacman.board.Board.squareAt(int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"d8aa198950fa5e76b050d80243d375ad","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.scoreFormatter"}},{"data":{"id":"00ad85fdac8f53230dbd8275644547b1","source":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"0a0144458bbd80e79d5acda542502e46","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"ab41e6f901b2259622c4acd063d906f4","source":"nl.tudelft.jpacman.board.BoardFactory$Wall","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall.background"}},{"data":{"id":"30d17980a6bfad2175499ec5210466fe","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.getWidth()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.getWidth()"}},{"data":{"id":"136328c97657706982e84374a78f41fe","source":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"9f3240c633583009ae2a329a0ea5fdb9","source":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"7a63314ebebf211d479a0dc244ea700f","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.ghostFact"}},{"data":{"id":"287dda01cb9ac952b1ef92e7da4db550","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).startPositions"}},{"data":{"id":"b0a78b8ff34937e109eed6cf2f49023c","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getOccupants()"}},{"data":{"id":"261c1fa06ab42e4646f59b5ef03415f1","source":"nl.tudelft.jpacman.npc.Ghost.sprites","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"f27c1010ee0bee5b23b379504a36de67","source":"nl.tudelft.jpacman.ui.PacManUI","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.serialVersionUID"}},{"data":{"id":"5ef3212dc9b60ae73bf3a367bd3c032e","source":"nl.tudelft.jpacman.board.BoardFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createWall()"}},{"data":{"id":"c6af42b232abce25e8dea6726f0b2e22","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String)"}},{"data":{"id":"a00e1270eb2ad97a1f65fc25336e0ade","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int)"}},{"data":{"id":"47b4670188a773bf8085c30107de87e4","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.removeObserver(nl.tudelft.jpacman.level.Level$LevelObserver)"}},{"data":{"id":"6682328c0c3b1ebc978ff166e9bff837","source":"nl.tudelft.jpacman.npc.ghost.Inky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.SQUARES_AHEAD"}},{"data":{"id":"c0552674fd294e11e88539ef91fb6093","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).graphics"}},{"data":{"id":"0cc28083e2af7e1d52a3dfc13caa04d3","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.parent","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"cc0c47bb39f0f0f28a12f9f246d27142","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player"}},{"data":{"id":"d449568be238350a9072b7c46482be58","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).width"}},{"data":{"id":"5eff9e95715b04ae0eee79b7fd817f6a","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite"}},{"data":{"id":"fc49bc698dbeec3603da2030275c24dc","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).square"}},{"data":{"id":"3f7c919e52068fc201c97ef1dcc9ba21","source":"nl.tudelft.jpacman.ui.PacManUI","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.start()"}},{"data":{"id":"7767d9ea733ecf521253c231927be6cd","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"f0b14fd98ab863d061714a42ca50e77f","source":"nl.tudelft.jpacman.game.GameFactory.nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory).playerFactory","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory"}},{"data":{"id":"cf31281ccec87aaaf197092c73e09820","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"ccc5154c53203f1784b2bbce924eb504","source":"nl.tudelft.jpacman.ui.PacManUI","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.nextFrame()"}},{"data":{"id":"7943e2122b6c794bb23ff1b6f6477f22","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"d21248009a86fe31536ed6c3001f82a7","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSprite()"}},{"data":{"id":"1a832a0313515af4c1651ae086c3ae2d","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSpriteStore()"}},{"data":{"id":"228df34638ba04ff8d9f9022c906a5e7","source":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game).game"}},{"data":{"id":"db496195bdbef268a6266e1149b36278","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.defaultButtons"}},{"data":{"id":"c7c13bc50ba7f6a91a1074d17be7ca04","source":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"6d3788af568b34acd673f9a2fc0b58f3","source":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][])","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"bd657603ef940a2cfa5e57f829aa54ec","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action).caption"}},{"data":{"id":"07e50032002063f019f7ca8626445f77","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler"}},{"data":{"id":"abe61b21a3e2c5d2e993dffd9655a485","source":"nl.tudelft.jpacman.level.Level","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask"}},{"data":{"id":"be694bd7bef0648890e2fc2fce4e251e","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).width"}},{"data":{"id":"14ca7454dfce22146e3eee5f3e1d2099","source":"nl.tudelft.jpacman.level.CollisionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"12426b85697ad627c424e2928044b09f","source":"nl.tudelft.jpacman.level.Player.getKiller()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"7666225c68599e5444feb8f3af175a27","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).isAnimating"}},{"data":{"id":"aaa81aceb358bd3dd846cbe4f99ad44b","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createPellet()"}},{"data":{"id":"02116496fd5e1bef539b3a172d8c5a56","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).from","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"763841a88d39aefc2d9c76bc252c6a4d","source":"nl.tudelft.jpacman.game.Game.stop()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.stop()"}},{"data":{"id":"5168d7dbf91f61afd17eb2e939a10783","source":"nl.tudelft.jpacman.sprite.SpriteStore","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.nl.tudelft.jpacman.sprite.SpriteStore()"}},{"data":{"id":"6c9afe07c0d0f5d08a61da8ece3d1764","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"91795165d840b8258583e2a6028d494b","source":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).mover"}},{"data":{"id":"a4fff9c085d990f172344843e2a1c8e0","source":"nl.tudelft.jpacman.Launcher.getMapParser()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser"}},{"data":{"id":"d3f3d9055a6a47ff6924570700367808","source":"nl.tudelft.jpacman.npc.ghost.Pinky","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map)"}},{"data":{"id":"907bc553077d5885ae320c4018cefbe9","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.stop()"}},{"data":{"id":"f465e7c7510703c53c13218e74c6282f","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"b7ab0205c33ecd2cef8edef209e5b8e1","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.animationFrames"}},{"data":{"id":"2edbf41ff1bdb1504bf1f321aa8c1e01","source":"nl.tudelft.jpacman.level.Pellet.getValue()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"3c87d6e7a20bbb95dee0b40d28375bee","source":"nl.tudelft.jpacman.board.Unit.invariant()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"6afa3d1ddc5ab06a28a41ef85a9f93c3","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.addPoints(int)"}},{"data":{"id":"eca60c9212e9cc87db8e864188781361","source":"nl.tudelft.jpacman.sprite.Sprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.getHeight()"}},{"data":{"id":"50099579ddc48995b0a8c59e220fb3ee","source":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.withinBorders(int,int).x"}},{"data":{"id":"028adee5b0a25e0ec8aee8385aa9a6d9","source":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).level"}},{"data":{"id":"6f2a906cd04bc81b8c79f96c0441a4e7","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"9229ee652791ffddcfdb4f3a8fcc269e","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.nl.tudelft.jpacman.sprite.ImageSprite(java.awt.Image)"}},{"data":{"id":"ed0c4f6d8732e9e6c907cb2f14fb6f56","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action).keyCode"}},{"data":{"id":"69a97f92d3be0a7c59dd6a69585a1337","source":"nl.tudelft.jpacman.level.Level.remainingPellets()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.getBoard()"}},{"data":{"id":"8529d1ff1ade3f68c11ff58f0c121ae5","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.getInheritance(java.lang.Class)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.getInheritance(java.lang.Class).clazz"}},{"data":{"id":"f8f6179cd1b78ebd9ed325f46dd8ab01","source":"nl.tudelft.jpacman.game.GameFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory)"}},{"data":{"id":"c10768d51aac461bda55c27d21a15083","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"b42f718de24bce8af84fa8bba2346103","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.squareAt(int,int)"}},{"data":{"id":"79931b8b7543d1bb32319af93c6b12e1","source":"nl.tudelft.jpacman.Launcher.makeGame()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getGameFactory()"}},{"data":{"id":"ff07c0189a04b33b565d752fc288bb1d","source":"nl.tudelft.jpacman.ui.PacKeyListener","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.keyTyped(java.awt.event.KeyEvent)"}},{"data":{"id":"6ab256a2f8c5f62dbfe1fb2347282ae9","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game"}},{"data":{"id":"48f27ab8e9ccb1e10e4312296214f3a6","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).loop"}},{"data":{"id":"9e8d049c3143e386b0d76a8a47027af7","source":"nl.tudelft.jpacman.board.Direction.WEST","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"37d7d2efc1f7a418d063591e3d2b8cae","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean).isAnimating"}},{"data":{"id":"0a85b9e51618f528e7565c14f3cf8fb8","source":"nl.tudelft.jpacman.level.Player","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"958dc24812f5d7bac9c00cfad8480eb6","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap"}},{"data":{"id":"b2c2f59919f621d6406e58676889fce1","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)"}},{"data":{"id":"c13798533edff7bbb41d2c7d1bd9f0d1","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.parent"}},{"data":{"id":"9c0d591f0e888eb386dcaa6a87130ba1","source":"nl.tudelft.jpacman.npc.ghost.Inky","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"f92ab988dc084bd439e88a155fc6efa0","source":"nl.tudelft.jpacman.npc.Ghost.randomMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"09915028bc6347afb0c887565829fe76","source":"nl.tudelft.jpacman.board.BoardFactory$Ground","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"8b634ce97a5aefb09595de516a1f225f","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit).player"}},{"data":{"id":"05aef46035084962b68fc0b723afd582","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"b84358d9300594081ad5fe8f2f8e7319","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"12cfa417954d153545876180373bd285","source":"nl.tudelft.jpacman.board.Board","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getHeight()"}},{"data":{"id":"bca081845b0facae3c641557f57b81af","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"c382d7195dba4002f11ab482871130a4","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"b017c7a9373ad794dac0fd7673fc8e14","source":"nl.tudelft.jpacman.board.Unit.nl.tudelft.jpacman.board.Unit()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"1435a046e9d87786b1ac6c4648b6d4d4","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"bb414d6224af4dfa6fdb97d1f12dab7e","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.invariant()"}},{"data":{"id":"9d79bf90df6fb9e88bc436d9a3a3211a","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).x"}},{"data":{"id":"3d940c7e796ce425812f171870234661","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky"}},{"data":{"id":"80b0e2f76ab3b07cc7856a90500f47fc","source":"nl.tudelft.jpacman.points.DefaultPointCalculator","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)"}},{"data":{"id":"7ef6178079c35618bdaaffe87633cf2f","source":"nl.tudelft.jpacman.ui.BoardPanel.game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"9924d1d3a04e039946513183a5b1a58d","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"953e65824a17b1597514b458a3c3f491","source":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ButtonPanel"}},{"data":{"id":"2443602862228c2e91dfdaa12487a67b","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).grid"}},{"data":{"id":"7e75d34471cf4de657ba64132a4580c0","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).level","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"4ffcb99384e39d253d05a0c01b1165de","source":"nl.tudelft.jpacman.game","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"9e6dda53e5f98dbc12fad10a81ecc81d","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStopButton(nl.tudelft.jpacman.game.Game)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStopButton(nl.tudelft.jpacman.game.Game).game"}},{"data":{"id":"26083a58f7571dfb843283e2a21a6ee2","source":"nl.tudelft.jpacman.game.Game","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.inProgress"}},{"data":{"id":"8f46dcd0c86608515ce3c7b7c130db2b","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)"}},{"data":{"id":"c4c76035343ccf94a906870866563450","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"786773a398882572e2f02b741f040558","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).height"}},{"data":{"id":"c4d58a9d57de9534e6a079baf5e8846d","source":"nl.tudelft.jpacman.Launcher.makeLevel()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String)"}},{"data":{"id":"f300ba8eb14af3b693f83f6741a32f4f","source":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite).points","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"335872417cf8ce1e2cef1402414ddb38","source":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getWidth()"}},{"data":{"id":"cc716a2cf19facc087e39af5c3821a66","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.DELAY"}},{"data":{"id":"9a64c48fb866d39a24b4349794e6a0ef","source":"nl.tudelft.jpacman.board.Board.squareAt(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.squareAt(int,int).x"}},{"data":{"id":"1b6ed38f7146aeba43ce810d7d375bf1","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setAlive(boolean)"}},{"data":{"id":"7474a0ee10a78f5aeaf79b29d4b4646d","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee"}},{"data":{"id":"1c457801a8603e5363a52877cb654971","source":"nl.tudelft.jpacman.level.Player.setAlive(boolean).isAlive","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"53ba9446acdc4838515b02bb3fb240fc","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).height"}},{"data":{"id":"5dda3410fcfb279dcf4ef373b250716f","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.animating","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"219b97ea50a1892d74f2b23de8d21190","source":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"d6e3771f329906570386648c03c8b529","source":"nl.tudelft.jpacman.game.SinglePlayerGame","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.player"}},{"data":{"id":"9a88ae792362c17a759d59768e5d52e0","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).grid","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"edfe236883fdefb927eb19e3c3218e23","source":"nl.tudelft.jpacman.board.Square.nl.tudelft.jpacman.board.Square()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"712527e2bb05731359a0430c40af64c0","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)"}},{"data":{"id":"7dd558cf64b2a9c2d43831240c578bfe","source":"nl.tudelft.jpacman.npc.ghost.Clyde.INTERVAL_VARIATION","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"cfbbebbd8f67b210006bfbc65c87dcab","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.restart()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)"}},{"data":{"id":"bf624ab2dba6b24e2a744dd46e716dca","source":"nl.tudelft.jpacman.board","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"324d43012c2b252ae4ba3571742da4fc","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).ghosts"}},{"data":{"id":"d7a5783094829e870a260b8dc11f4b47","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener"}},{"data":{"id":"8489e61fef97ad1930fc01e4f83fd613","source":"nl.tudelft.jpacman.game.SinglePlayerGame","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.level"}},{"data":{"id":"ea49b371362cb5b902c0b2055094e128","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"781028ecb428eb6f890aa70492888005","source":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square).this","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"e5299712ca903815823223a2f7dc9ecc","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"341569c87a5e6ab4365fc5bb133b5f26","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.background","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"afce4f708a73c49af14554abc1b0f075","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher"}},{"data":{"id":"8b603b0fb2e87627fb63350e5f16db91","source":"nl.tudelft.jpacman.Launcher.launch()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder)"}},{"data":{"id":"a8d598f2c30a13529a8125142c4fd121","source":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"ef95e2d3017afe0bd868f6c3b422fd71","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).traveller"}},{"data":{"id":"a5b79a276ef2586c538e7f35ae8830d0","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createBlinky()"}},{"data":{"id":"e5ed6ecfd2d9d09ee86b185ea0ce8826","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"a57684fb22ce4af582836d0cef4ec802","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getDirection()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"803d0794ebbaf6a3dcdc18f9c1eb3e7b","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.inProgress"}},{"data":{"id":"01f13e7a008dcaab2e6e75aff6728918","source":"nl.tudelft.jpacman.level.Level.removeObserver(nl.tudelft.jpacman.level.Level$LevelObserver).observer","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver"}},{"data":{"id":"0dd9da6fa869bb77a09de269445748d4","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.getWidth()"}},{"data":{"id":"e49643ae10921d5dc8c838dc0faf529d","source":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit).collidedOn"}},{"data":{"id":"21d0fc50196df40ee4412e920d7d49dd","source":"nl.tudelft.jpacman.npc.Ghost.moveInterval","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"c213edf9ce70677e15cd2563e1b71a20","source":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder)","label":"invokes","properties":{"weight":4,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"a2fe4ea5ab252acec879691f9b132cb9","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"1c47789297882be0616d4c5884c9a359","source":"nl.tudelft.jpacman.level.Level.stop()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.isInProgress()"}},{"data":{"id":"ac1abd93fbe3073eeab808379f2fba79","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.looping"}},{"data":{"id":"4964eab625a3ce2bca5fc2fc888b3f3f","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"dd1cd2c21c3a1e54733debb539c51ef0","source":"nl.tudelft.jpacman.board.BoardFactory.createGround()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground"}},{"data":{"id":"cbe9c1749cf62b37f1549e8f99271039","source":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost).ghosts"}},{"data":{"id":"64798452c18fe2d58a465e08a6a578a2","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][]).grid","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"11c5c6481bc12ea0991fcca14aa14ff6","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).board","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"d72d7ff3a0a8ecd36890a24ec9b3f70a","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.PELLET_VALUE"}},{"data":{"id":"f2a6ccd18a8882cb14a93dddb911ce04","source":"nl.tudelft.jpacman.npc.Ghost.nextAiMove()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"47be4344131b8ae82c6faed0a2934c4b","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall.nl.tudelft.jpacman.board.BoardFactory$Wall(nl.tudelft.jpacman.sprite.Sprite).sprite"}},{"data":{"id":"f96cae6c5795ea64f2c406dd9370e5c5","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.sprites","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"cee4aa1d9b61c36bcb5c9267e5b0345a","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getPlayers()"}},{"data":{"id":"aa98517c8af7049d4f0777d0c4876d70","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.start()"}},{"data":{"id":"6d26fa795abdbee9c8250fbc038b6e9d","source":"nl.tudelft.jpacman.level.Level.updateObservers()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver.levelLost()"}},{"data":{"id":"200dea21999b7af0b266061d20250b8d","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.isInProgress()"}},{"data":{"id":"0fe013a82a88cea033c5556207fd9315","source":"nl.tudelft.jpacman.Launcher.main(java.lang.String[])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.launch()"}},{"data":{"id":"151d469a56e63105679abbb38fd3e728","source":"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"9b513aa7998d491eac3222d4e2373eb4","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.withDefaultButtons()"}},{"data":{"id":"25a49baa0486dfe74673ed5a9024bbe7","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"2a775093dc11091dc1642b328392dab1","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame"}},{"data":{"id":"0cdbd263b62f4a3f6071759f041debef","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class)"}},{"data":{"id":"4ff7cac6960d685e9331182ce929f960","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"76619ca062b480eae33c5b7229afa9e3","source":"nl.tudelft.jpacman.level.MapParser.boardCreator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory"}},{"data":{"id":"ca9f53b4a4e8e6d7732fbdf6ff36ca39","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"8784ebace98c37ffea942acabdb92c0d","source":"nl.tudelft.jpacman.sprite.EmptySprite.nl.tudelft.jpacman.sprite.EmptySprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite"}},{"data":{"id":"2fafcf8e9f666de7ec259d2603d367e0","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"466f970c6becf1ff6456ccb29a0d6f6c","source":"nl.tudelft.jpacman.board.BoardFactory.createGround()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()"}},{"data":{"id":"36a8031aec811b3c55dbd57548b51c6e","source":"nl.tudelft.jpacman.board.Square.getSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"255e599d2536b138a4825a4e0b611294","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board"}},{"data":{"id":"8f1732ebd0d9ef84e5bb1840018b0b71","source":"nl.tudelft.jpacman.ui.PacManUI","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)"}},{"data":{"id":"c931d2558e72aa1f75ce25081528c051","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"8941cb74f59db07a6587ed57354bf9c5","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.currentSprite()"}},{"data":{"id":"316d21d7ccc82eab52db76c0f72e4f3e","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"3469a0170be5407126cefa07da8b2427","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createPinky()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)"}},{"data":{"id":"abc24d5bd1a1f49f939bc0f5a879b772","source":"nl.tudelft.jpacman.level.LevelFactory.createPellet()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getPelletSprite()"}},{"data":{"id":"2be9aeee9542ba85ef0aaf8c003f0810","source":"nl.tudelft.jpacman.level.Player","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.score"}},{"data":{"id":"0ae04d72777d8cf8454e6ce0c064bb09","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel"}},{"data":{"id":"0618412ae89afebabf08595a68de0431","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"e8e709a0444eb5fe13a92bc7c0426fcc","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).startPositions","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"ad1c2dfa01c2158aff70ca821767855b","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"cd588878167880867a061de072a18e0a","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde"}},{"data":{"id":"c620472f394f71025b6d01a770d0a5a3","source":"nl.tudelft.jpacman.board.BoardFactory.nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"e0f740ed7cf57a021e362c42c2225445","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics)"}},{"data":{"id":"94f65e06d5224fe15da39c446ce93804","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.withDefaultButtons()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"20f306c7703f967e5bdc340efcd20cc5","source":"nl.tudelft.jpacman.level.LevelFactory.sprites","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"6e5dbeb633d5d1909a7b7f9672f61a37","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)"}},{"data":{"id":"d2307579b2e6a1c97de95ef3e673ed42","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"bd4523a9662274688f288f3e3cdb8284","source":"nl.tudelft.jpacman.Launcher.launch()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.start()"}},{"data":{"id":"166994f6a8e6dfd7d1b3815fcad25f7c","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.setDirection(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"210616afa972f85e25551330277c6836","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension).board"}},{"data":{"id":"3f6103c826d4b3aef0e219cea1dcaa82","source":"nl.tudelft.jpacman.npc.Ghost.intervalVariation","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"6b12319f834261ae0561de22c48de6bc","source":"nl.tudelft.jpacman.level.Level.board","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"4ee321b4e9b65eca9212cd423de5e745","source":"nl.tudelft.jpacman.Launcher.pacManUI","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI"}},{"data":{"id":"a9043b2288d71ecf960b243b0ffdfaec","source":"nl.tudelft.jpacman.level.LevelFactory.createPellet()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"8c659bace0047047d2ca068254657c9b","source":"nl.tudelft.jpacman.npc.ghost.Navigation.nl.tudelft.jpacman.npc.ghost.Navigation()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation"}},{"data":{"id":"373b90ebb8b218d16103e2a9a77f5b6a","source":"nl.tudelft.jpacman.Launcher.main(java.lang.String[])","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.main(java.lang.String[]).args"}},{"data":{"id":"e211948eaa4046498833f22bcdb362c9","source":"nl.tudelft.jpacman.board.Direction","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.deltaY"}},{"data":{"id":"fb831bdfb2f704405b3e6944653833fe","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite).deathAnimation","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"8ef39ac122d1b0130185f8cd34d17710","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"af6a7c0d2abefb7279cf6a35b15209d7","source":"nl.tudelft.jpacman.board.Board.withinBorders(int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"e292e548ec1d806d50b27c5c3ce8be04","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List).text","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"bd2a5332de083aadc82b51175352920e","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.getWidth()"}},{"data":{"id":"5c1d9bca5c7ec382fa63309cd6fc5fa3","source":"nl.tudelft.jpacman.board.BoardFactory","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground"}},{"data":{"id":"c53e7b3ba0d975de1d189c82fda55810","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension).graphics"}},{"data":{"id":"14062879b2ead1ce2569ba1f169d4275","source":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.getBoard()"}},{"data":{"id":"13fa6f538fc2ae27e0724c8dbc04bb6d","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)"}},{"data":{"id":"49b8638716b4a55d44eb210af5e40a0f","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"02307b279b4fdbc3827438ef56c6911a","source":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator).pointCalculator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"6f286c22cec36af7b4b33343ee66101a","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getPath()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"64ab0fd23440be532990da9bf1d1debe","source":"nl.tudelft.jpacman.Launcher.makeGame()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.loadPointCalculator()"}},{"data":{"id":"b48323c5c2750841bffb64378d83857d","source":"nl.tudelft.jpacman.sprite.SpriteStore.spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"88277dbe7965b65734a549f14a19406f","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getLevel()"}},{"data":{"id":"ff72928f6ca1bb264807da9ca8c11290","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List).text"}},{"data":{"id":"48923f083de2809a4729b4668e391dcb","source":"nl.tudelft.jpacman.Launcher.getPlayerFactory()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory"}},{"data":{"id":"e8cf008a046b6c333a57a2928ef9ab26","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).height"}},{"data":{"id":"7a9c96df5fe7eb993b74125015077174","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)"}},{"data":{"id":"43e5acb1d7a51414f380c14f902eca02","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action).action"}},{"data":{"id":"9eb68e769119d1f2be4e59a6f0acd2dc","source":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"0644938cb3384db172550c22a2ead3a1","source":"nl.tudelft.jpacman.npc.ghost.Clyde","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde.INTERVAL_VARIATION"}},{"data":{"id":"1be1ea9026efe43cb60598dfdf5f453c","source":"nl.tudelft.jpacman.level.PlayerFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory.getSprites()"}},{"data":{"id":"9f7e45487f731cccbb2565fea8803c18","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"78990f0fb3550b49fdd381f150440b91","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.nl.tudelft.jpacman.ui.ScorePanel(java.util.List)"}},{"data":{"id":"ee71bd43be896703889b8ef5f87b2d81","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky"}},{"data":{"id":"c4787b51a7c2e260bb3b9d72af60f730","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.square","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"6891d721415f91328da70a29eb28e56b","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPacManDeathAnimation()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)"}},{"data":{"id":"18c2f3a4d82e7883edbf60541594fa2d","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.scoreFormatter"}},{"data":{"id":"4987b1ce8f6810c75c7de2bf8dd3756a","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite).deathAnimation"}},{"data":{"id":"6ccbff7c50a429ca646944331eeac5e5","source":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame).buttons","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"4e80404f4648f5e06ffcc1cf816becdb","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String).mapName","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"c340b5290ef3d0e279cb8ec2dfc7f6f1","source":"nl.tudelft.jpacman.Launcher.withMapFile(java.lang.String)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.withMapFile(java.lang.String).fileName"}},{"data":{"id":"bda47c3fb3b89ba4ed11c941fb907eb3","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int).frames","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"dbccbfd26e9b9ba7ea550341a1effd9b","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"d1bddf2b6f2e08caff0a4b7cb09f80ed","source":"nl.tudelft.jpacman.sprite.EmptySprite","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"aac3f85b0d0badb12c681d6982365684","source":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square).directions","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"d753b90dd6d9d6257f7a674aa6ae8320","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"2dc0bd0646aa79cc3e4d47147c26b2a3","source":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int).deltaY","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"aa28ac9c2098b019997912529ebe7bf5","source":"nl.tudelft.jpacman.sprite.Sprite.getHeight()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"69fb9cffbc2373027d5af996c5593ad2","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"c39160c2ca2137c72c257cc54ef876b2","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"c8bdb27128a2800bf631cc5b8eed3683","source":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost).ghost","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"b2c6924b85ccd1e2443fa265be292201","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"4a94a2c454aa8a5bbffb189724aab8b0","source":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player"}},{"data":{"id":"af8ff7f1d8f44db3bbeaaad2f3f7e2c7","source":"nl.tudelft.jpacman.points.PointCalculatorLoader.getCalculatorClassName()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"8ee145faa1142ea59f0f8250946d86b8","source":"nl.tudelft.jpacman.PacmanConfigurationException","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String)"}},{"data":{"id":"5ebce619eda26aa5158675c4c6cee9ae","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).map","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"char"}},{"data":{"id":"ff522224425e4461508f4cc2c83e7edb","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)"}},{"data":{"id":"259f231bfbe2e1dd93fb880fcd957265","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite).sprite","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"84ece4df76c3062f2ae987e5962ecbf1","source":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit).ghost"}},{"data":{"id":"54291e431b00a0618484f10eba5f979a","source":"nl.tudelft.jpacman.board.Board.squareAt(int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"ebf1662b6170435018272e452ab6b4b5","source":"nl.tudelft.jpacman.level.PlayerFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory.sprites"}},{"data":{"id":"f0098c0ed55f48e6adb42845407b78b2","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler(nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"a2955c9c23b6c17e2c90fae0cb375810","source":"nl.tudelft.jpacman.game.Game.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.start()"}},{"data":{"id":"53799e5c507edd8762397d55e47ea10f","source":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"5c4909c9c63dc09ca01dd0cd22be77ed","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)"}},{"data":{"id":"fe0904427626be4ecfe691f05ef2cad6","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"2deef72a2021f489f9da42eabd7bdc79","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"4ca36307d26995b2b3ba15158ef7ee92","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"62d49c7eddb47a44bcfe9c548565536d","source":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createPinky()"}},{"data":{"id":"0ecb815229a70a0118e4de1736d26c4f","source":"nl.tudelft.jpacman.Launcher.makeLevel()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getLevelMap()"}},{"data":{"id":"4d07df6e615c198df03f0cc7e7a0a3d8","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"16b9c51af1a46fc7911b5f3ec8af4695","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.getValue()"}},{"data":{"id":"da7dc1924928f58a42fd0dfc6e4b6b93","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createPellet()"}},{"data":{"id":"18ddbe48b1b4f51f969b41f511b0bcdb","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List)"}},{"data":{"id":"679c1e474cdff7ff46deb27b7bc5b17f","source":"nl","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft"}},{"data":{"id":"ed1d38d7ecdf327a2a98fba80167a5f5","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"030295f039b1d72971073fd3c11d34bb","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask"}},{"data":{"id":"181e7ff0beb3b679027b7bf8eb17e64d","source":"nl.tudelft.jpacman.npc.ghost.Blinky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky.INTERVAL_VARIATION"}},{"data":{"id":"0bd699c4f215c5d75207c6f3ae712824","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.defaultButtons","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"2b291a5f20d6eac3e921d40503d22bd8","source":"nl.tudelft.jpacman.board.Square.put(nl.tudelft.jpacman.board.Unit).occupant","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"a5f6626774b0e88bb3173c19f3476e0a","source":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidedOn","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"1f296a21866e6c26d42dfae835953bc6","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.SQUARE_SIZE"}},{"data":{"id":"c1aa9141b0ed1e0fad1ecdab092f8173","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).board"}},{"data":{"id":"a87421f7388a4622b3e9333ba1f0c182","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).keyMappings","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"1a3f49463251504d317487927741c19b","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).parent","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"adc5c76480f9ea7d97241537edb3c5f6","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.intervalVariation"}},{"data":{"id":"7845a625e3bf8fb04f5ccd7ad94c2183","source":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])"}},{"data":{"id":"aad37b78f268e7644fd0af4969158a92","source":"nl.tudelft.jpacman.game.GameFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"5ccc149ec430fd82ec1734d52ed1905a","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)"}},{"data":{"id":"bedb0a9bcfd0c26bfe6971b1eca4e703","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"ae7a5bbf0ff0193cd8c5714b997bd006","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"d8fa3482cb1cf7671b4d4761512d1e6e","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points"}},{"data":{"id":"34f13750b5417afa2a522d73356008db","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).ghosts","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"4ac9fd628372dc2a875f4560624e498f","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"2d66f1943da8e5dbdb7691cd3abf8fae","source":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"d6ea6e2ac1ecbfa50de43909ba66fe89","source":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player)"}},{"data":{"id":"c9680d8d239d6c228246f1971faf87cd","source":"nl.tudelft.jpacman.sprite.Sprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)"}},{"data":{"id":"73caf479ccff1cac40f62de938f0cc98","source":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"838944e8782b5ac9e41ae2de6b71d2cb","source":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator).ghostFactory","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory"}},{"data":{"id":"5b4239557c377977ed996df21adc11d7","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream)"}},{"data":{"id":"3f2ca8c7e9f49512839b78c5af2ec9c9","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)"}},{"data":{"id":"10e1c42c1f408efd745f25a3cc168f61","source":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"71b7e33ed1f38d30feb433fe0e37ef42","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"36bb168bfb560b359bbc9552fd8015bb","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).player"}},{"data":{"id":"f5096ed42680419e894742039e485501","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).node","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"d0dba897abd49434574c77d82b1fab96","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).square"}},{"data":{"id":"72894f69827c073f9107982a81aa1eb4","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map).ghostSprite"}},{"data":{"id":"8e6847b462bff79624648c6413bd7fe6","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)"}},{"data":{"id":"4476b44390718d65675aaf26d57690c3","source":"nl.tudelft.jpacman.Launcher.launch()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getGame()"}},{"data":{"id":"7ca35183c842d5baa78e1c3a7f7196b8","source":"nl.tudelft.jpacman.level.LevelFactory.INKY","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"aa69fb1f9d7a49355adc38c900fb25c3","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"a395a89528bb48e91c1113af18206ca6","source":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite).sprite"}},{"data":{"id":"ab37bd78c3ad2ee4ba2bf26e01506194","source":"nl.tudelft.jpacman.npc.ghost.Blinky","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map)"}},{"data":{"id":"1b6113a8128b027a3eaf595307378e9e","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean).delay"}},{"data":{"id":"9e0bf86b4cf75be02aca1ef4a00ad582","source":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame).buttons"}},{"data":{"id":"0be41e8d8ce2e6ffb49cabc5c22c5cee","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"69feb5a54d5c279b6cc59ac4389fb0f4","source":"nl.tudelft.jpacman.npc.ghost.Pinky.INTERVAL_VARIATION","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"f9b3f41bdfa77cab6df5235eb7b06cf2","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite"}},{"data":{"id":"625b9d252e2b07218ebec8c8cd7138b9","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action).action","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"e793b6b8e18e5fa18e2631fddf9be57f","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"ded0c2cc14b0870fc2c270e4259ffa71","source":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"6183fc2c90e8d54fda3b6e96e127be1e","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost"}},{"data":{"id":"290a80f4e6a0d532c30296ad3b696ac8","source":"nl.tudelft.jpacman.points","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator"}},{"data":{"id":"77766cd3fca6b8ad030db4cf2b7574c6","source":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"efef87a7a48af1c533619418458229d3","source":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createInky()"}},{"data":{"id":"c3adeeece531a1306f6da305530e4c2e","source":"nl.tudelft.jpacman.board.Square","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.occupants"}},{"data":{"id":"7d446ea62afcf394b652ebd16582e3b2","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.leaveSquare()"}},{"data":{"id":"3804672cd529146d25d28e5ff0e17ac4","source":"nl.tudelft.jpacman.npc.ghost.Blinky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky.MOVE_INTERVAL"}},{"data":{"id":"4b96024e0e694673a23bf8ae02468a30","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).height"}},{"data":{"id":"d7f60aeb1c35adf54ee5c8dc271289fc","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension).window"}},{"data":{"id":"50d3af3f0a236307cba87bbe170d97b8","source":"nl.tudelft.jpacman.npc.ghost.Blinky.MOVE_INTERVAL","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"ad37cbcc95827f49039c372380ecaef6","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost).npc","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"6d132fc04add0711602a06927409a27e","source":"nl.tudelft.jpacman.board.Unit.getSquare()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.invariant()"}},{"data":{"id":"5e8630ca8bcf6d7d5430dbfbff29e60e","source":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame).parent"}},{"data":{"id":"a394c65e16f52dc9d008c5bbf04be959","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"08f4eed99668b730cb5d1f74c5631d2b","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int)"}},{"data":{"id":"400fe37061ef5af113d3f65c0fd78f12","source":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square).target","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"091025f775a7b1a396cd2aacea546810","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"b1f639913dc98461e74945e4610f2524","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"34baae415cc66c26fb4eeb8d3a0fc109","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)"}},{"data":{"id":"b31e3d0a04c1172256775f7f93b6b9e3","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List).ghosts"}},{"data":{"id":"d0335cc10032a5ad9afebc2d7dfe0521","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSprite()"}},{"data":{"id":"2b96a05bf9f45eaf7d7f0eed00fe0e12","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getGame()"}},{"data":{"id":"0bef08b25d58ccf5f59e6f82a0dfde2e","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).x"}},{"data":{"id":"352d2cad09aa313803543e1289a6cd21","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStartButton(nl.tudelft.jpacman.game.Game).game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"aa64169136dd4f4c965089451239c153","source":"nl.tudelft.jpacman.Launcher.nl.tudelft.jpacman.Launcher()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher"}},{"data":{"id":"1d95a3ec7e4998f1c64442cd7cab7a96","source":"nl.tudelft.jpacman.game.Game.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.isInProgress()"}},{"data":{"id":"ce5385d91aefec1255172d71e89fe791","source":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"e1346479aaebcbe3568d32e78b5e965d","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).mover","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"8dcb47ab312d60b4f9a5eb01282c7e16","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider"}},{"data":{"id":"3e14d563c718b3c4844e0f8ceeffef67","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"fd8112dac9d684594233a94765e08207","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"889e753759b56514293680328192d5c0","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.currentSprite()"}},{"data":{"id":"3cd44ffff5a6e1882eb193ed290b72c6","source":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable).cause"}},{"data":{"id":"3953fc463ad62520886d699495f8e2ce","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).delay"}},{"data":{"id":"1563b4fc804ca03d5532a96a2d0195a6","source":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)"}},{"data":{"id":"7ba0a3cb453dd2f3712d5c212f44d387","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)"}},{"data":{"id":"55d29d020f07968c87705875601a2ea7","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square).type"}},{"data":{"id":"adbe1d8ad93915529648dfb4951babdf","source":"nl.tudelft.jpacman.Launcher.addSinglePlayerKeys(nl.tudelft.jpacman.ui.PacManUiBuilder).builder","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"a749a6cc645c49c07b29979858e5a77e","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getWidth()"}},{"data":{"id":"abb2181fafe3c9b0fdbfa9a65c6ab3e3","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).width"}},{"data":{"id":"12365d5a948a96088226107dfc057043","source":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int).width"}},{"data":{"id":"1462f66d118afe45f5484950200c8850","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.getDeltaX()"}},{"data":{"id":"a328f8d40f6e9d43510bcb80d17323b3","source":"nl.tudelft.jpacman.ui.ScorePanel.nl.tudelft.jpacman.ui.ScorePanel(java.util.List).players","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"099889df81d55636d687394beedcc9d7","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"4669644a41b23deeb4d412dd23e12075","source":"nl.tudelft.jpacman.game.SinglePlayerGame","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.getPlayers()"}},{"data":{"id":"562c5dfe68c5e11a5565024b95f4cd5c","source":"nl.tudelft.jpacman.points.PointCalculatorLoader","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.load()"}},{"data":{"id":"b62779d2b5d73b90d3f7cdbff7be5c79","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).direction"}},{"data":{"id":"0e8299b283c212680738bf7a0721d801","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"3ba70fc9df1a6e608a22831e4b7345ce","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.isAnyPlayerAlive()"}},{"data":{"id":"c5ae1ca249830434f838f452b88c5000","source":"nl.tudelft.jpacman.Launcher.getGameFactory()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory"}},{"data":{"id":"6bf4c96c16e614b1c1227bc5a3a84ca5","source":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"9eaba2197c306d9f4ca4ca88d5e04b76","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.setDirection(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"25a6e41e3960a7bd0b26431e53f8f192","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getBoardFactory()"}},{"data":{"id":"9698e0fc24b87b295057bcfc86cf1f24","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"3e967a26e129a229b8e305f4f1525f21","source":"nl.tudelft.jpacman.Launcher","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.pacManUI"}},{"data":{"id":"c0c1fc15a01c782d5252aaa940e0614d","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).moveInterval"}},{"data":{"id":"48708485ff94094522ca41cb4a91b7b2","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nextMove()"}},{"data":{"id":"5bb216cecb48627e2dd183c2cf326c9b","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"24d796149b8d8098e7b9ec388bbef97d","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).buttons","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"0d6b09addaae4b423bfe28a29c84d087","source":"nl.tudelft.jpacman.game.Game.getLevel()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"e1df2c861e1b5c642ce1ca4cf7884b5e","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).startPositions"}},{"data":{"id":"52f613b69aec7b84e5bdac33e8265886","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player"}},{"data":{"id":"0dcc67daa5f896ef4a48989d9ce23e95","source":"nl.tudelft.jpacman.points.DefaultPointCalculator","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"5bf6a1269dbf24f99df9d8cb319eacea","source":"nl.tudelft.jpacman.board.BoardFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites)"}},{"data":{"id":"357a962797dffcbd75773e02119b46d0","source":"nl.tudelft.jpacman.ui.PacManUI.scorePanel","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel"}},{"data":{"id":"88ca4be0de78216e2d69665a6159d262","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.getBoardCreator()"}},{"data":{"id":"218ae4d1440d74ecd892a05ba428260f","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"3320df14d2acce8260067f6cc08f1663","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit"}},{"data":{"id":"fda584f8e014ba6c4fb3486346723a6f","source":"nl.tudelft.jpacman.Launcher.getSpriteStore()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"da5a6ab6a109e3ff5ec3b06ddd66cb9a","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createInky()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky"}},{"data":{"id":"6fe40253a711a0cc3bba884d325f22d9","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()"}},{"data":{"id":"375b55da7a9705feac88dbbbb290f0a2","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit).collidedOn","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"5fe6c9104eea265e33bcbd41bf000dbf","source":"nl.tudelft.jpacman.board.Direction","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.getDeltaY()"}},{"data":{"id":"41184bc4d80298411eb9263d2eec4510","source":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidedOn"}},{"data":{"id":"76cde1e062ae85d6dcf63d747fb7d85b","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.restart()"}},{"data":{"id":"a23aa0ef5be8c4b7ecab3672e64885fb","source":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List)","label":"instantiates","properties":{"weight":4,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException"}},{"data":{"id":"bfaeb4b32e29c43aac18e5de0986ca92","source":"nl.tudelft.jpacman.level.Level.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.isInProgress()"}},{"data":{"id":"28dc3122b3962f8181a897e137f68dad","source":"nl.tudelft.jpacman.level.Level.npcs","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"ff942d4ad3130bdfb005832ebff6214b","source":"nl.tudelft.jpacman.ui.ScorePanel.refresh()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.isAlive()"}},{"data":{"id":"7196b24657cf72592e6286bf25c572c4","source":"nl.tudelft.jpacman.board.Direction.NORTH","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"502c1d6aff1a4119177cc074f66000c9","source":"nl.tudelft.jpacman.board.Direction.getDeltaX()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"af3044d2ec75d1a9c053f09e9063ef25","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createBlinky()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)"}},{"data":{"id":"444791f79e7c92e64026ab8fb339960b","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"f7c37b146743c5985c3cd9ea619f4a69","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level"}},{"data":{"id":"5dd3caadc6f22282648faf593734d485","source":"nl.tudelft.jpacman.level.Level.inProgress","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"445b166db4ede689d647d86a8f2ee240","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.image"}},{"data":{"id":"7113d4ab8cf6a3bb8698b8deb10ff060","source":"nl.tudelft.jpacman.board.BoardFactory$Ground","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground.background"}},{"data":{"id":"441dd5dd319e13fb77dd49113d7b502d","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List)"}},{"data":{"id":"d5f5f036cb8da24cfd9e8eb0ea0136c6","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"8d96a39b6986430c5fbbf0b3e9b79ccd","source":"nl.tudelft.jpacman.points.PointCalculatorLoader","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.loadClassFromFile()"}},{"data":{"id":"5cb573e49ecd0ca7b2e71f6899c96da3","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"0e61505631755c10942f331ed124f113","source":"nl.tudelft.jpacman.game.Game.getPlayers()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"491b4a8ed576bb8e3a40145b2ab46cc2","source":"nl.tudelft.jpacman.level.LevelFactory.ghostFact","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory"}},{"data":{"id":"443ae3a6b74ddbc5ca149bc57bcda3bd","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String).resource","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"60c9377f2d33a22eee816a34a78a4a86","source":"nl.tudelft.jpacman.Launcher.main(java.lang.String[])","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher"}},{"data":{"id":"e907bb5a7a3449591b2c652ca807bd8e","source":"nl.tudelft.jpacman.level.LevelFactory.createPellet()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"4ad4aa5005bd8d319a2a2709495f58cc","source":"nl.tudelft.jpacman.board.BoardFactory.createWall()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"bf14f423842da23c4d44fc118684a6b7","source":"nl.tudelft.jpacman.level.Level.removeObserver(nl.tudelft.jpacman.level.Level$LevelObserver)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.removeObserver(nl.tudelft.jpacman.level.Level$LevelObserver).observer"}},{"data":{"id":"9a3a68fe9fa1f175b6b6f76f63bb579a","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"c9bfa8e158153350dcf8b79351952d54","source":"nl.tudelft.jpacman.level.Player.deathSprite","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"ce73346d0fb53b0aea9115554801b3dd","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).collisionMap"}},{"data":{"id":"c0d3bd6037cdebf594b73d466f9f0986","source":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction).neighbour"}},{"data":{"id":"3ec967a2e5702f25bdcbaf7d1db421c8","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"adc838e18b5de7a7e4fad4103f5c1172","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).frames"}},{"data":{"id":"4e277583f7afe5a414ef106d7932ba21","source":"nl.tudelft.jpacman.board.Board","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][])"}},{"data":{"id":"87f6f048037ea6fff4fac5dd508bce8a","source":"nl.tudelft.jpacman.level.PlayerCollisions.nl.tudelft.jpacman.level.PlayerCollisions(nl.tudelft.jpacman.points.PointCalculator)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions"}},{"data":{"id":"130db89cfccade8023eaed45f0adac25","source":"nl.tudelft.jpacman.level.PlayerFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory.nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites)"}},{"data":{"id":"a1cc5b7ab0053bfedee619f1e5c4ef14","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).ghosts","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"f20572ba4f5460e1572d306ab4e1956f","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square).square","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"3cef85d46fc69fcb865b7c6856b89b0f","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.getHeight()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.currentSprite()"}},{"data":{"id":"8e77e37ffe5c31519c0215a406ce87f9","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"f008cfea28ebd151fac488ac595774ad","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handler"}},{"data":{"id":"ef32902487835a86a2c12b0e67dd2942","source":"nl.tudelft.jpacman.level.Level.startNPCs()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.getInterval()"}},{"data":{"id":"e9481ef430e4581e3c4939dd087b6f90","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).intervalVariation"}},{"data":{"id":"0d1764b540329ba298404d66e3332b1e","source":"nl.tudelft.jpacman.Launcher.getMapParser()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getLevelFactory()"}},{"data":{"id":"f0a7895205483670ee9a3ced13716bf3","source":"nl.tudelft.jpacman.level.Player.nl.tudelft.jpacman.level.Player(java.util.Map,nl.tudelft.jpacman.sprite.AnimatedSprite)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.nl.tudelft.jpacman.board.Unit()"}},{"data":{"id":"c9705613a1617df2aa1b097569ce4802","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver"}},{"data":{"id":"e4f3531ad1774af92aa7505ca6265339","source":"nl.tudelft.jpacman.level.CollisionInteractionMap","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap"}},{"data":{"id":"2482a6b382058c1bd57fc35cf13d86e3","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPacManDeathAnimation()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"22b18ff99e7724b9b3f40cbc5ad2c837","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"6189ab3b5d99765737174ee1ca099f88","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"38d71465310338656372868366cabe44","source":"nl.tudelft.jpacman.Launcher.getPlayerFactory()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory"}},{"data":{"id":"9f96533fbaa773b8153edcfbd727fc01","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit"}},{"data":{"id":"3ef20482358e21c47b532be2315472a5","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).y"}},{"data":{"id":"83113a0ee6920c88e427647de12c4617","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory"}},{"data":{"id":"fa8fab6a389810ab7213de89c7b6688b","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class).map"}},{"data":{"id":"4038137539678b64820e87765c0f05da","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI"}},{"data":{"id":"ecbbf2cb4ea1aa2df9ac15bf15ab9137","source":"nl.tudelft.jpacman.Launcher.getGhostFactory()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSpriteStore()"}},{"data":{"id":"25ab4f87e94ce9b6ef8d0d3dda3e0b45","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.isInProgress()"}},{"data":{"id":"14ba3194abad15a938b772945b109f8b","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.addPoints(int)"}},{"data":{"id":"9f2be32b63b98addc1410d831f86ab61","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List)"}},{"data":{"id":"480bd76af52415a6d74e75c142ef2f86","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction"}},{"data":{"id":"3864183e09aa559ce46317efb156d801","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"bd731ae1d222892d044405063fa6ca9c","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.squareAt(int,int)"}},{"data":{"id":"9b2358f1f33c09ea03c41d9f97c287a6","source":"nl.tudelft.jpacman.Launcher.getLevelFactory()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSpriteStore()"}},{"data":{"id":"d9361990ca110b938b8e785aec0ad430","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int).resource","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"00b7fec94d795ed6612a970230636cd4","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean,boolean)"}},{"data":{"id":"a8ebc68ec7f50631082a5db5b4d2d8d3","source":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square).target"}},{"data":{"id":"21f065011deeb959689654f773e1df8d","source":"nl.tudelft.jpacman.game.Game","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.pointCalculator"}},{"data":{"id":"6324c8f893f2393adc8e087cc90d97ce","source":"nl.tudelft.jpacman.level.Level.collisions","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap"}},{"data":{"id":"6bf5389b0341921450914a5857eb1ed6","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action).action","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"0f63b6d5099a566668aabcc435011f8f","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nextAiMove()"}},{"data":{"id":"6dea8b2cd39c579f766b5ec64bb0c418","source":"nl.tudelft.jpacman.ui.PacManUI","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.scorePanel"}},{"data":{"id":"7b2ee3a31275a4ac466f249ad64d2df5","source":"nl.tudelft.jpacman.sprite.EmptySprite.getHeight()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"1f904b3fb69bdfe4d18c940ebc2a1473","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player)"}},{"data":{"id":"a0ba0542bbc4775cb9eeb24f36869501","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.PACMAN_DEATH_FRAMES"}},{"data":{"id":"e1dae957e73eeb72032c5fc066e33533","source":"nl.tudelft.jpacman.sprite.SpriteStore","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.spriteMap"}},{"data":{"id":"30c7d422b7fd6565d138a432e5a43ddc","source":"nl.tudelft.jpacman.board.Board.getHeight()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"f79a761e278bc6e2cbf8271ec6714ff9","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.buttons","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"a9dd26e3919dab06b41a76237f031adb","source":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee"}},{"data":{"id":"8babe096327824b154e1adf47c85ef70","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost"}},{"data":{"id":"3741890b74519ce62c2dd624dd417153","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getHeight()"}},{"data":{"id":"c61e074d247db739e189cffa10e7eb9d","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player"}},{"data":{"id":"dff44fbf0fd52dea712701ba376c243d","source":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).level","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"592ae903c3ef67a31c16c554beae4cc4","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).x"}},{"data":{"id":"ae5c41adf7f7186f914a5ff316d5037d","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getLevelFactory()"}},{"data":{"id":"2cc52e4fa8cda82788b56aac060d35ec","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setKiller(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"829a69a39d741d128c4210a6536a9c3c","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel"}},{"data":{"id":"9c5fb0d4b4953375625c44961b1e9df5","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)"}},{"data":{"id":"ddd1fb1043b51e2c95c07bbef5999834","source":"nl.tudelft.jpacman.game.Game.levelLost()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.stop()"}},{"data":{"id":"00821612f48a398260e3a18b6bf59877","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"c866b17badad4796d9fdd2fe4373315d","source":"nl.tudelft.jpacman.sprite.SpriteStore.spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"bd14f2e2117a1e29b3080531697ec39d","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"b142af0fd0942263faddf330877967a7","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions"}},{"data":{"id":"14da5d79c3ade70ddc092bfc8d3585f6","source":"nl.tudelft.jpacman.game.GameFactory.nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory"}},{"data":{"id":"8b72b909010266c3ec8661c468147196","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler"}},{"data":{"id":"2ee9af68cdd9c87b8568e55f0ab70855","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStopButton(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"8217cf48466394043b9ad8f65092ebb7","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node)"}},{"data":{"id":"2e9d53093ec1ef6e906a7c7b360f8da6","source":"nl.tudelft.jpacman.level.PlayerFactory.getSprites()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"8abfc6c3af263b3abc652e2737d8bb96","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"55eed1e148e3ed6b3867e60fca7a24a2","source":"nl.tudelft.jpacman.board","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground"}},{"data":{"id":"d6b01b3951d2f3f325067c0bc59a1f46","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.put(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"ef6fe8437bec6c34dc4403be45d2e74b","source":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player).player"}},{"data":{"id":"b8f52744d9e3b5406a33456e7f8579b5","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.pointCalculator"}},{"data":{"id":"ea7c415c602862abc6371db5020188bd","source":"nl.tudelft.jpacman.Launcher.getLevelMap()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"fb2818491827d8f29e5c6dcdcb731fa0","source":"nl.tudelft.jpacman.npc.ghost.Navigation","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"e6b97b46e91e3f32f31d5c9bd8d2f0a9","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createClyde()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde"}},{"data":{"id":"91c1128afe618651e2c432b012d2fd8b","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.GHOST_ANIMATION_FRAMES"}},{"data":{"id":"d4c1af4d4e8022e32fea47d052ce451c","source":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"b9b4104670c3b29698eea07122db8e44","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"d9f4bb13ded55a39d41cf00cb84a032a","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.occupy(nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"75e17484ef32865acba4daa86e12c3d8","source":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler.handleCollision(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"196ebec78b727ebbc9b2679c7cc987e1","source":"nl.tudelft.jpacman.level.Player.alive","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"dfd31e5f555e470b2daf53293c831542","source":"nl.tudelft.jpacman.sprite.ImageSprite.nl.tudelft.jpacman.sprite.ImageSprite(java.awt.Image)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.nl.tudelft.jpacman.sprite.ImageSprite(java.awt.Image).img"}},{"data":{"id":"4892bd9faf0ef237cfa8bdd9f76c27c3","source":"nl.tudelft.jpacman.ui.ScorePanel.nl.tudelft.jpacman.ui.ScorePanel(java.util.List)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel"}},{"data":{"id":"eb774e01d50b763ba9383bdfe780cd5a","source":"nl.tudelft.jpacman.level.Player.sprites","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"d243a670d40434a396f4631c79cb58cd","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).height"}},{"data":{"id":"e66b42e985a59a3cb7d024c710f15166","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc"}},{"data":{"id":"9b5267be84d818f67cddc27521813c17","source":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit).collidedOn","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"1a8587631955ff9106a9eaf631e349e7","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addStartButton(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"6ce19d5d74475544bb16fe06ad08a37b","source":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame).buttons","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"a0cb9cb476a3c49a34cefa05ffdb6f32","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.startStopLock"}},{"data":{"id":"f194b895ac9d3f238975c6da1de2d465","source":"nl.tudelft.jpacman.level.MapParser.checkMapFormat(java.util.List).text","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"a0560504d4117c9abd47e1c197cb6a39","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).frames","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"1468cb9fee82285ed73a49544f2f7995","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"9330e9bb8d87b2bf5c870a60d9a69844","source":"nl.tudelft.jpacman.board.BoardFactory$Ground","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite)"}},{"data":{"id":"51e67ddde28d77dfee43eb20dfc04ef9","source":"nl.tudelft.jpacman.ui.BoardPanel.serialVersionUID","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"long"}},{"data":{"id":"c46eff0c7870a7990593904a9c7fed9c","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).to","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"092d568c09722d7bd5dbb60c3cc20bc4","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"325f00d33af1cbfd3807986cc0f915e2","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)"}},{"data":{"id":"20500c179ce1fba076098f610bdffc60","source":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"5306085fca9a12dc804d925220cf3129","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky"}},{"data":{"id":"572458384f894a224d54c1abc1b1329f","source":"nl.tudelft.jpacman.board.Unit.invariant()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getOccupants()"}},{"data":{"id":"832214a7a9bd586b7beaed8da35602ce","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.moveInterval"}},{"data":{"id":"09deafc865d093c896aaa18802b93f2a","source":"nl.tudelft.jpacman.ui.PacKeyListener","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.keyReleased(java.awt.event.KeyEvent)"}},{"data":{"id":"de261497460654d491d874f864bffb1e","source":"nl.tudelft.jpacman.npc.Ghost.getSprite()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getDirection()"}},{"data":{"id":"c548bf30faf0dd878fed4708dcc6bf18","source":"nl.tudelft.jpacman.game.Game.stop()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getLevel()"}},{"data":{"id":"46ca0114e813740d0cbecfcfe4ebbff8","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.main(java.lang.String[])"}},{"data":{"id":"786dc6fbd68d7fc23ca49f0bf6d3763b","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)"}},{"data":{"id":"530a089ce7c59378774bbf2fbe45ccf7","source":"nl.tudelft.jpacman.level.PlayerFactory.nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"830148ec05598ed8e3694836c7e63a3b","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites)"}},{"data":{"id":"e89a237523883798b2d23359bf494816","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"ba1bf37b5846c4c1c45bcc1afff4c7e9","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.board"}},{"data":{"id":"48d73c4d422410a90763dbd175908a20","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.getWidth()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"adff1cedd96660512e3cfa25095b64d3","source":"nl.tudelft.jpacman.board","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"9716941ee641486c90fefadc2b299dc4","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).collisionMap","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap"}},{"data":{"id":"d0485dd8091cff9e2defea4d54899825","source":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.nl.tudelft.jpacman.level.Level(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List,nl.tudelft.jpacman.level.CollisionMap).startPositions"}},{"data":{"id":"16f72edbe21d4e64ef7bd263473abee0","source":"nl.tudelft.jpacman.game.GameFactory.playerFactory","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory"}},{"data":{"id":"59841388a9258192e723136c418a7b66","source":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions"}},{"data":{"id":"32caadcddb545baa22720119f0dac74c","source":"nl.tudelft.jpacman.points.PointCalculatorLoader","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.clazz"}},{"data":{"id":"df6311d9dd0be01a66f198105db4c8d3","source":"nl.tudelft.jpacman","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui"}},{"data":{"id":"2e2722236d05d1f13b72170c68e34bc7","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).height"}},{"data":{"id":"b0f8e8fc293ad455314bd4f311c719fc","source":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"2a8e57e9a887f895223082cf347a5569","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.START_CAPTION","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"5cea65f06cc9f6ef26aac8ca34040eaa","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"03b4822b9dfacde24a86ea3529327320","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"114019b0c53c2c38be5710fdaae54335","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"75b306090e953af0eb6babf317b93262","source":"nl.tudelft.jpacman.level.Level.updateObservers()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.isAnyPlayerAlive()"}},{"data":{"id":"20c4bd5a0c5bdf610bf8ec6d30bd4c02","source":"nl.tudelft.jpacman.board.Board","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.invariant()"}},{"data":{"id":"09f60d7d587c8c0e4ffe677fd65db2d9","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.BLINKY"}},{"data":{"id":"721e44e2d89df0a5183b2725fa50c40e","source":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost).ghosts","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"2f09362a65474a00804e964ba275f1bf","source":"nl.tudelft.jpacman.level.Player.isAlive()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"aa111906429dfe98b1ed64c0df011301","source":"nl.tudelft.jpacman.ui.PacKeyListener","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.mappings"}},{"data":{"id":"c63a941ea033a17acdaac93c864c98d7","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPelletSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"f3a4e64ce35214dfbf5e40eaf04628d1","source":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider"}},{"data":{"id":"f0ae9082978ffc33c73e137bf7b4f9c3","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.buttons","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"a25676b520a523e99757a6726c5424f4","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addKey(java.lang.Integer,nl.tudelft.jpacman.ui.Action)"}},{"data":{"id":"a86a7bd27ac7eb037d22aeeeed723772","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).movedInto","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"5cbc0565bffd18bb7fb1a6d02d320cd3","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.END_OF_LOOP","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"ee0ba27b4418d482dad26e0baacb815c","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.looping","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"b084e81e15017af4cb2557679d60d7a7","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.square"}},{"data":{"id":"1ee75be338d4d86ea9ed8bd010683857","source":"nl.tudelft.jpacman.npc","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost"}},{"data":{"id":"6a364dd7e033829459d70ac7d282e878","source":"nl.tudelft.jpacman.Launcher.getGameFactory()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory"}},{"data":{"id":"80802cba19f138a2cb9881ada123d15b","source":"nl.tudelft.jpacman.npc.ghost.Navigation","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"ff2788800ac30a1e974b62b50ce9dfce","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).x"}},{"data":{"id":"29cab29cf0c535a373a9b7bf55c4e027","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"b7e85376ac5ebadc815d8bd68297f7a5","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPacmanSprites()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)"}},{"data":{"id":"1b802b8ead180ac45133b0c3fb6024c7","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"eb4e1be3cfddadb71a1924de50a278e9","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).targets"}},{"data":{"id":"472aad1ba961e0edbad1693acac2595b","source":"nl.tudelft.jpacman.ui.PacKeyListener.nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map).keyMappings","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"00d3f719bde6e7c54d87f282678b8deb","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.launch()"}},{"data":{"id":"71d907777ff2d856178ee827d971eaa3","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"33fd709a950c93c5485b9d76468bfb9a","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getParent()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"520403dffb2472cf632b3ed3ef8d3d94","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).height"}},{"data":{"id":"692f04fda33ec3863f0c32cf6d6a08fa","source":"nl.tudelft.jpacman.level.Player.killer","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"13070837a2c813e5eb21e5cc198c65a0","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPelletSprite()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)"}},{"data":{"id":"6c7e26eed10bae1b6a276ae9512112d4","source":"nl.tudelft.jpacman.npc.ghost.Blinky","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"ab67e3baa37f5e9f38eddcbc66093afb","source":"nl.tudelft.jpacman.Launcher","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.SPRITE_STORE"}},{"data":{"id":"e8d6f2b97a0921e2d0d29d9772ae988e","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.nl.tudelft.jpacman.level.DefaultPlayerInteractionMap(nl.tudelft.jpacman.points.PointCalculator)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap"}},{"data":{"id":"79b8ecfa0c79bcfd047e201903dd2508","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).traveller"}},{"data":{"id":"8469556be28fd3e95b19c9e11cea887f","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ButtonPanel"}},{"data":{"id":"0ffb5ce775e4ff77d19b0fa3511dbd26","source":"nl.tudelft.jpacman.board.Square.put(nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.put(nl.tudelft.jpacman.board.Unit).occupant"}},{"data":{"id":"282c78641629e9f9b8bf8f4102be77ce","source":"nl.tudelft.jpacman.points.DefaultPointCalculator","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"2c9e443bb462cd8c84e0a6b86c44130e","source":"nl.tudelft.jpacman.level.Level.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.startNPCs()"}},{"data":{"id":"0af0f9e19abbc7a2de3ba80df300c128","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int).resource"}},{"data":{"id":"68135a2950dc3968dc955cd11c592771","source":"nl.tudelft.jpacman.board.Direction","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.deltaX"}},{"data":{"id":"e63839d4365e1c8948976bc09ad80874","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"cec91e23b82e35d2cc4d257875ee76af","source":"nl.tudelft.jpacman.ui.ScorePanel.refresh()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player)"}},{"data":{"id":"0f6c89b2871ca2edea8e44f805e3042d","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.sprites"}},{"data":{"id":"0f28af68114c4c36502a1aee1dc5ef23","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.STOP_CAPTION"}},{"data":{"id":"42972c838b28129b454742ebd4aa84d0","source":"nl.tudelft.jpacman.npc.Ghost.sprites","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"82baf4e95a794f5f1ef0eae48aae836f","source":"nl.tudelft.jpacman.sprite.EmptySprite.getWidth()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"a612f0d158a8282557f0e0f7572898ae","source":"nl.tudelft.jpacman.ui.PacManUI","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.FRAME_INTERVAL"}},{"data":{"id":"121a44aa37b1e382dbd844b6b45c92bf","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square).square"}},{"data":{"id":"ff3bbc4bafbcaf951fddc2b589f06c0c","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).startPositions","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"0eaf15a07d3e793cb046f8f5a5620640","source":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerColliding(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"f9ee5d9f20016e98802d1a5685aad37e","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.getInheritance(java.lang.Class)"}},{"data":{"id":"11f013b286cb38955a522fcef8782745","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setAlive(boolean)"}},{"data":{"id":"fd1eb350ccbad4212aa16b4ccad77265","source":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][]).map"}},{"data":{"id":"c2577f70400f57961fd4536a00df2243","source":"nl.tudelft.jpacman.npc.ghost.Clyde.MOVE_INTERVAL","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"e517060586097227e1c8340a8def858d","source":"nl.tudelft.jpacman.sprite.Sprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.getWidth()"}},{"data":{"id":"035b20f4b0e7b0e5f7d347fbcde72406","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"b31c7904eb944e79b8e7be57bb3ccf34","source":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createBlinky()"}},{"data":{"id":"fc66f0d53fdd24dd92fad02e4653b31e","source":"nl.tudelft.jpacman.game.GameFactory.nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.GameFactory.nl.tudelft.jpacman.game.GameFactory(nl.tudelft.jpacman.level.PlayerFactory).playerFactory"}},{"data":{"id":"706710b0c0a1bbdc5e5a55a01541fd48","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).x"}},{"data":{"id":"4315da2b7294989f9ecf295c98d57ebb","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getHeight()"}},{"data":{"id":"87133c666c9923a9132a8b42cdef0611","source":"nl.tudelft.jpacman.board","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall"}},{"data":{"id":"0ed2f9413db7d51158e4fe7d93928243","source":"nl.tudelft.jpacman.level.Level.addObserver(nl.tudelft.jpacman.level.Level$LevelObserver).observer","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver"}},{"data":{"id":"32f6253759f64a1a116fbb3c951d9ede","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"82d6f42be5aed348ab86a747665c20cd","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"ca2be6db9edded00524b7435599180aa","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getWidth()"}},{"data":{"id":"1b0c41529f238deb387851bcd2a2033c","source":"nl.tudelft.jpacman.board.Board.invariant()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"df339f8dd5c9d7260cf154bf5892d567","source":"nl.tudelft.jpacman.ui.PacManUI.nextFrame()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.refresh()"}},{"data":{"id":"7e4038369612f9fb4de820e4010c111e","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int).height"}},{"data":{"id":"efbc54a76af047325340e70b6810743f","source":"nl.tudelft.jpacman.level.Player.getSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"31c64605c02c4104c3f6800b82b3e362","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.nl.tudelft.jpacman.sprite.AnimatedSprite(nl.tudelft.jpacman.sprite.Sprite[],int,boolean).loop","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"b5a226963370d4160a25d11989bb3b99","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.lastUpdate"}},{"data":{"id":"f2cc110feb43c4e9b663eb1a19ceafb0","source":"nl.tudelft.jpacman.ui.BoardPanel.SQUARE_SIZE","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"c8fd93759afc039dbda49467d9adc729","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"c9fbe322ead2c882abb164ee90ad36f2","source":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter.format(nl.tudelft.jpacman.level.Player).player"}},{"data":{"id":"7cdae3a3531a659d7a60c14eacbe813d","source":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky"}},{"data":{"id":"3b9da64a03ee6ac34e17f5a6b8d3ba45","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ButtonPanel"}},{"data":{"id":"a30b743c349306285c30be5ee83491e0","source":"nl.tudelft.jpacman.level.Level.remainingPellets()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getHeight()"}},{"data":{"id":"6d2d707fe4a0fdcb797a2578585ebff5","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).ghosts"}},{"data":{"id":"f3693afdbf4b0e521a9352aecfab8993","source":"nl.tudelft.jpacman.Launcher.getMapParser()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getBoardFactory()"}},{"data":{"id":"6ab61e3adc44ea6de2c02b8f57fedc3c","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"89914c3fd8871624a64b477188be4340","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).movedInto"}},{"data":{"id":"cdf151e9d575493bd0470dde533eba02","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collisions","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap"}},{"data":{"id":"0f0da3b15af826aa8ce1ce0e5ecd6544","source":"nl.tudelft.jpacman.board.Direction","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int)"}},{"data":{"id":"9155e8df08d77b02a4ef4c1bcbe99d63","source":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getPlayers()"}},{"data":{"id":"ea83216c079c556ced38c5f789c463f2","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"58e076f62c6150f7f21d8338df7887a9","source":"nl.tudelft.jpacman.board.Direction","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.NORTH"}},{"data":{"id":"b797455153611a41c526bf14240f557a","source":"nl.tudelft.jpacman.ui.PacKeyListener.nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map).keyMappings"}},{"data":{"id":"b9f6399fa3c186956a61e06fff047633","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nextAiMove()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"ddfbb03ee473a9970e2041a7996e0faa","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.addHandler(java.lang.Class,java.lang.Class,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).handler","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler"}},{"data":{"id":"1bba5c41f47a059441b0ad91f9112d93","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.nl.tudelft.jpacman.board.Square()"}},{"data":{"id":"28676b706176098f7c7608cf19c45320","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).grid","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"ce6acb051849a7915bf70b88827f862f","source":"nl.tudelft.jpacman.sprite.SpriteStore","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.loadSprite(java.lang.String)"}},{"data":{"id":"c4d4518b3297615332caa9bbf7b89d20","source":"nl.tudelft.jpacman.level.Level.updateObservers()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver.levelWon()"}},{"data":{"id":"463afce8d3e1c31e0981460b8d416974","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).x"}},{"data":{"id":"84e6503244e691b8800d8ca33e3936dd","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board).board"}},{"data":{"id":"0d1e84e08967d72aed2888f218c9e258","source":"nl.tudelft.jpacman.points","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"166b8b63570d38887addf95e22578a80","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).pointCalculator"}},{"data":{"id":"a3159e4f23663f761dc5fb39a207c434","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.DEFAULT_SCORE_FORMATTER"}},{"data":{"id":"6fc142dcd77b7eb4daf0bd300fe3a384","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.nl.tudelft.jpacman.level.LevelFactory$RandomGhost(java.util.Map).ghostSprite","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"095dcd20f9cabcdc226d2f81b442da18","source":"nl.tudelft.jpacman.npc.ghost.GhostColor.PINK","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor"}},{"data":{"id":"6d06167d4e20f1a0e18d8c04c157aa07","source":"nl.tudelft.jpacman.ui.PacManUI.FRAME_INTERVAL","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"4069ed331b48ecaf9a1c5c6373a887da","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.refresh()"}},{"data":{"id":"dda46826cfb98bd3635e8f470f3ff38d","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.nl.tudelft.jpacman.board.Square()"}},{"data":{"id":"7db273b3763f6caf989cca2dfdc4ece0","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).ghosts"}},{"data":{"id":"ae75361b63d15130c21ea9a7cd39b91d","source":"nl.tudelft.jpacman.Launcher.makeLevel()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"c5d787f44d46412abc2175554680d8e0","source":"nl.tudelft.jpacman.board.Direction.SOUTH","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"bc4dcfcbd315f7a602fbf8433914926b","source":"nl.tudelft.jpacman.npc.Ghost.randomMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"92b84ad34458e382e5b965d70f519fc7","source":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nl.tudelft.jpacman.npc.Ghost(java.util.Map,int,int).spriteMap"}},{"data":{"id":"215f8c13edd90085f2483adfeecaa6c6","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.direction"}},{"data":{"id":"448f03ae55af42ea36bfccef638f4b57","source":"nl.tudelft.jpacman.sprite","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore"}},{"data":{"id":"8e9c013b1f89589512e2d116999145b3","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.getHeight()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.getHeight()"}},{"data":{"id":"9449527e2a5ad44d59e5bbbf38edce16","source":"nl.tudelft.jpacman.npc.Ghost.nextMove()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"a61655eccca670b46d433e081a05094f","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)"}},{"data":{"id":"d07f8a5ef547261c71ed86466a71eff6","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser"}},{"data":{"id":"7809f4749ca6547d6ebc71f7def2966b","source":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"6a509ef600be221d73c276924d2f8377","source":"nl.tudelft.jpacman.sprite.EmptySprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.getHeight()"}},{"data":{"id":"b11973bdbcccea4a6e40d7fb60c62cbc","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.getSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"94a2cb3ba48631be59d0c8c152176003","source":"nl.tudelft.jpacman.board.Unit.square","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"ade95c01a5a467fc317cd7cfd844d03d","source":"nl.tudelft.jpacman.Launcher.getLevelFactory()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory"}},{"data":{"id":"c60335e76280500c0c3d38b817804aa2","source":"nl.tudelft.jpacman.Launcher.getBoardFactory()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSpriteStore()"}},{"data":{"id":"efb3357802e122032b8927714735f4ab","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"96adb951ada7fdf685fb30ae3aaa5271","source":"nl.tudelft.jpacman.game.Game.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.addObserver(nl.tudelft.jpacman.level.Level$LevelObserver)"}},{"data":{"id":"c9d1ea63bf0223d84b7da5d574d64dac","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.registerPlayer(nl.tudelft.jpacman.level.Player)"}},{"data":{"id":"81708c757e572ecbcf3b6d5dd4b85e19","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.withScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"94024b6297e609f0f8c1f34b7ee1f16f","source":"nl.tudelft.jpacman.level.Level.remainingPellets()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"e8730621d7028834ca6a62eeac12d925","source":"nl.tudelft.jpacman.level.LevelFactory.createGhost()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createClyde()"}},{"data":{"id":"c21cf1ffa0896beb7a693533e3a25cf9","source":"nl.tudelft.jpacman.level.Player.setAlive(boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.setAlive(boolean).isAlive"}},{"data":{"id":"290681a514dfea43d2fb1626ed24a6d0","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"b0f19826c44b0e8584180b52a87b5d02","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collider"}},{"data":{"id":"6a040c75b8b54fa1afe7a0c5b9720175","source":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser"}},{"data":{"id":"dd7eb7bec683af785ad30cb6827beefb","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.randomMove()"}},{"data":{"id":"d62ca64e6c5a8939073a1bdd00382be1","source":"nl.tudelft.jpacman.Launcher.loadPointCalculator()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.load()"}},{"data":{"id":"4374707dda23a8c906d9bdc88a65209d","source":"nl.tudelft.jpacman.sprite.PacManSprites.ANIMATION_DELAY","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"8d6924f52517d8e00e3fd9506a9a2d18","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension).board","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"1198c956e874a28a2d8a1a730edfa143","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.makeGame()"}},{"data":{"id":"e62913d8a2da83946a35d4ca32c2ed25","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.updateObservers()"}},{"data":{"id":"24a79f71d17f91f11f3334da1a6628c0","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int)"}},{"data":{"id":"5879bda5cd6d19a35343a08805a7649f","source":"nl.tudelft.jpacman.level.MapParser.levelCreator","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory"}},{"data":{"id":"4c2541715f2a073ceb665a249418efb3","source":"nl.tudelft.jpacman.level.PlayerCollisions.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).mover","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"894e0643c8911ee7f804045085dc76ae","source":"nl.tudelft.jpacman.npc.ghost.Pinky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky.MOVE_INTERVAL"}},{"data":{"id":"ca0696dac3f029c318a3b6c8054283d9","source":"nl.tudelft.jpacman.npc.ghost.Inky.SQUARES_AHEAD","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"4642b14c06e4d2e76a6decf6a92bb308","source":"nl.tudelft.jpacman.board.Unit","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.square"}},{"data":{"id":"a8ba741efa4c27d971cc00702d76315d","source":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][])","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][]).grid"}},{"data":{"id":"bbfe9a41dac4e5bde7a482a6317b5331","source":"nl.tudelft.jpacman.board.Square.getOccupants()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"1b1da158109fffc75e4a2437f8504fe4","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.current","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"841eabd926054d72e9a4b10195b8602b","source":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createGround()"}},{"data":{"id":"b8d18d464a9d17410cf0dca9a2ea0e75","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction"}},{"data":{"id":"5f87906ab84c192c6c88b1f38672b775","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).collidee"}},{"data":{"id":"431ec879a2335e38a89419e625d88ab2","source":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int).deltaX","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"863905480cc56c69d3d6b41282195bfd","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.startSquares"}},{"data":{"id":"f178faeef37e2dee823e227063ff3dd2","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.run()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nextMove()"}},{"data":{"id":"ceee317f793cfc4c297617364a82f286","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.nl.tudelft.jpacman.game.Game(nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"043c726df1646fe6f1e1ae9ab7e00856","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost).service"}},{"data":{"id":"2843fd410588f34ee86d71c0af8dd31d","source":"nl.tudelft.jpacman.level.Pellet","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.getSprite()"}},{"data":{"id":"efb5301875eabe2b83eaf0dff6cf81b1","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).symetric","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"3dc5324f673226f056ad519ad1cea423","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap"}},{"data":{"id":"2d9c225ee4f6b5f518f50a4105e535d5","source":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)"}},{"data":{"id":"4d79ba57b4ccfc05f0398892532aab64","source":"nl.tudelft.jpacman.npc.Ghost","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"ffd7dc6eac4cd067d691355fb56048f1","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)"}},{"data":{"id":"c926a75d21fe7c0eb812a8760a02933c","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI"}},{"data":{"id":"ef211878cf47b9840946daf5e02c1535","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"a6df46b27752f643ca30e22593bb15ab","source":"nl.tudelft.jpacman.level.Level.startSquares","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"79a27573bdacbe396cf3df1395ac9007","source":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.nl.tudelft.jpacman.game.SinglePlayerGame(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator).level"}},{"data":{"id":"45ffa2ed4672c114b03be6ed6e171486","source":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"2ac2cd0c6d3e43d6d9936de60d2ed0f1","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action)"}},{"data":{"id":"c31cf69e18edc2e958012843ce48f5b3","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory"}},{"data":{"id":"f26bb735979c0cf022c0707e064be057","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).visited","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"ac10b69f644c0548e43917a8610c4f0c","source":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game).game"}},{"data":{"id":"30fd72a6deea064e91d51e1957d29d63","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"a6f8fa501c3f67fd4691bc129cc53d5c","source":"nl.tudelft.jpacman.level.LevelFactory.CLYDE","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"7b908c35c4dc636375e2e14f5625abab","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"e742c8bd3da37463e8bbe283443697e0","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.stop()"}},{"data":{"id":"4f45cb67f32c61d861dd059766e0d1d1","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).y"}},{"data":{"id":"7148be9fa770e00bc76c45dc780de93c","source":"nl.tudelft.jpacman.level.Pellet","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.value"}},{"data":{"id":"5ecf25194f92c1bce910bfe03bb46abe","source":"nl.tudelft.jpacman.npc.ghost.GhostColor","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor.PINK"}},{"data":{"id":"b5a2f047f5d49d7552c435df4905a6d5","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky.nl.tudelft.jpacman.npc.ghost.Blinky(java.util.Map).spriteMap"}},{"data":{"id":"9e7d06b68385cdecd3cdff8ac7e37f3c","source":"nl.tudelft.jpacman.ui.ButtonPanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ButtonPanel.nl.tudelft.jpacman.ui.ButtonPanel(java.util.Map,javax.swing.JFrame)"}},{"data":{"id":"c2b0f750d4eae52fa3e1f046b6a443d2","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"300dee9c455a13aeaf0516b5058dcc1c","source":"nl.tudelft.jpacman.game.Game.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.remainingPellets()"}},{"data":{"id":"63e8aba555bada7b526d7bc54c8582ae","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.collisions"}},{"data":{"id":"59d75ae910681ab81daf394779c7b39c","source":"nl.tudelft.jpacman.ui.PacManUiBuilder","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.nl.tudelft.jpacman.ui.PacManUiBuilder()"}},{"data":{"id":"cb465357d9084a21dc58bafca95ad575","source":"nl.tudelft.jpacman.Launcher.launch()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.makeGame()"}},{"data":{"id":"995328e0444b604c60ef6ba703ac319b","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite).sprite"}},{"data":{"id":"d0a45a1382487c068f51e85e4a6d3316","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.getHeight()"}},{"data":{"id":"de76dfafa8e1370358428fe82cd0589b","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createClyde()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"45070174121c319671a547115a941b77","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).width"}},{"data":{"id":"339c1cc593cca8ebdb14c4b144268977","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.addObserver(nl.tudelft.jpacman.level.Level$LevelObserver)"}},{"data":{"id":"7a172e43418dbbee1360e4a54fdd4930","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).from"}},{"data":{"id":"55aae9a4b416ed9d6903a146bffb81dc","source":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable).message"}},{"data":{"id":"ceada84bd3a05ca51da3a1dd2b863666","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor"}},{"data":{"id":"1eaf31c30f4e7efc49d2e28ccad09bae","source":"nl.tudelft.jpacman.ui.Action","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action.doAction()"}},{"data":{"id":"76831beb605be4bc238bbd63929a7f24","source":"nl.tudelft.jpacman.board.BoardFactory","label":"nests","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Wall"}},{"data":{"id":"4d806ae38d18e445c2faf155fab2eecc","source":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.link(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Direction).direction"}},{"data":{"id":"91036604f4240311f60afe4a19e07c2f","source":"nl.tudelft.jpacman.sprite.EmptySprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int)"}},{"data":{"id":"6edfa11e88a36777b359d3ca0a9abd30","source":"nl.tudelft.jpacman.sprite.ImageSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.getHeight()"}},{"data":{"id":"93a63cd7f0548b0aaeb82762aad9e920","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)"}},{"data":{"id":"4fe119b14bce60e8bfa2d8e93b0ba80c","source":"nl.tudelft.jpacman.level.MapParser.makeGhostSquare(java.util.List,nl.tudelft.jpacman.npc.Ghost)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"bd325d814d86227d4c4266a33af06c60","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.INKY"}},{"data":{"id":"c80d0f4ebca48ad7a1eeb99e2e37b990","source":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"537715d2cb6c02ef1ef7eb2d7b015548","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.sprites"}},{"data":{"id":"1b92596257725b43c0d78d03c475247d","source":"nl.tudelft.jpacman.level.Level.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.updateObservers()"}},{"data":{"id":"5f21283dc7fe7fa56f254cf2b75f16f2","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getGameFactory()"}},{"data":{"id":"ebe640df14a777f98dca17a9376079a5","source":"nl.tudelft.jpacman.ui.ScorePanel.nl.tudelft.jpacman.ui.ScorePanel(java.util.List)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.nl.tudelft.jpacman.ui.ScorePanel(java.util.List).players"}},{"data":{"id":"2cccecbb12cd7d41fce1010737e897fc","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation"}},{"data":{"id":"50806e2a673461b293e03984e48606d7","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).direction","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"1548d5119bba1de5b445c2a858cc6d97","source":"nl.tudelft.jpacman.PacmanConfigurationException","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable)"}},{"data":{"id":"36bc1275892ba13d10224d59b9671ec3","source":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.getBoard()"}},{"data":{"id":"8e5e82c00c5aab8a6fac61e1c6f6452c","source":"nl.tudelft.jpacman.npc.ghost.Blinky.INTERVAL_VARIATION","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"8bc0aca9c7e3f9f1da0a0f6b3057fa81","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.BACKGROUND_COLOR"}},{"data":{"id":"bec74b8223e50feb6f5e18c113ffdfa9","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.loadPointCalculator()"}},{"data":{"id":"99a11ea58c57d917b3f82051b67039ad","source":"nl.tudelft.jpacman.game.SinglePlayerGame","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame.getLevel()"}},{"data":{"id":"962fe308e1da12f04e869ebee5e4105e","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).traveller","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"d8e5919b3eaf7ca53792edc62e6a128f","source":"nl.tudelft.jpacman.npc.Ghost.nextMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nextAiMove()"}},{"data":{"id":"6fa2e01be0a14a28da9c13263fdc44b1","source":"nl.tudelft.jpacman.Launcher.loadPointCalculator()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader"}},{"data":{"id":"2d816065d00f22ac6c9a8b393f836ce6","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.leaveSquare()"}},{"data":{"id":"f20d2bb02719c8202f2e9122165c7fbf","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)"}},{"data":{"id":"7c6cc3cf691a8d20997a41ad01d1fec3","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.nl.tudelft.jpacman.level.CollisionInteractionMap()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap"}},{"data":{"id":"c0228ddc50726f820540a5d3798d1589","source":"nl.tudelft.jpacman.sprite.PacManSprites.GHOST_ANIMATION_FRAMES","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"005b1648d5d8e17b844f9fefbfbbaabf","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.serialVersionUID"}},{"data":{"id":"9d296353421575acde26eaaf5837760e","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).delay","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"37f8716623184a3d2967d1cdd8910d09","source":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String,java.lang.Throwable).message","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"2c581c0f8adcbae1a3376bd10148b549","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnit(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"db63d5f8f0275837ba5ac49d3dc1e0b8","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.getHeight()"}},{"data":{"id":"a260b9e9eb3a403007314215f5b7cb0c","source":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit).pellet","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet"}},{"data":{"id":"4da34611162f4a53429ad2c65e818272","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.getPlayers()"}},{"data":{"id":"fc604796e62b238e86c45d75280392de","source":"nl.tudelft.jpacman.ui.ScorePanel.scoreFormatter","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"5272d30aee98871ca8890b455486b28c","source":"nl.tudelft.jpacman.npc.ghost.Blinky","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Blinky.nextAiMove()"}},{"data":{"id":"d3c1562e680833afca8552b3c12f279f","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map).spriteMap"}},{"data":{"id":"87abb41d56715b8c5c221a0e0dd18920","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).targets","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"34b2ab9a6e1d327de343641c4ed849e5","source":"nl.tudelft.jpacman.level.Level","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.observers"}},{"data":{"id":"9e14b764bb87b233d120d8ff903f8123","source":"nl.tudelft.jpacman.level.MapParser","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.levelCreator"}},{"data":{"id":"73ce18be66a2aab8fd6fcd0e452fe667","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"e598ea0efa1570259a459328da5abcd2","source":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.invariant(nl.tudelft.jpacman.board.Square).this"}},{"data":{"id":"ac3097ff76f36b1d70d611bc5e7061f2","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getOccupants()"}},{"data":{"id":"400ebf7438cae63892db3117c64b1e13","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).player"}},{"data":{"id":"53f2200ca555664a603fbe53299c55d4","source":"nl.tudelft.jpacman.board.BoardFactory.createWall()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()"}},{"data":{"id":"0930c1b00ea56c1c40f767174d79112d","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory"}},{"data":{"id":"83e142bbeedf2b64cf1068f7272b2802","source":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)"}},{"data":{"id":"17da9ded549f97eda20e44701937515d","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List)"}},{"data":{"id":"a4b29a1e98e4df953587c75525e63f94","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"3556953d009c3cd3c6261c6bb39d0424","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).y"}},{"data":{"id":"be64b799c9a0bc3390caafbb68f68708","source":"nl.tudelft.jpacman.game.Game.start()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.isAnyPlayerAlive()"}},{"data":{"id":"51219d33dc331743a07ec2f25263a5be","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createGhost()"}},{"data":{"id":"559654eb9354d1570ac40725f1ed665f","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.pointCalculator"}},{"data":{"id":"ade45a9aaf10b35f8a11b9dce730f6de","source":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"da948f619b668aa8c53f5b7966f27b6b","source":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int).amountToLookAhead"}},{"data":{"id":"6e9f7c8af55ba2cf4aa803635a5f58ea","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.getKiller()"}},{"data":{"id":"d292cf17b9857ef76b76f702fe70d045","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getSquare()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"cb1286c735d5a749ac666d41cc844bb6","source":"nl.tudelft.jpacman.sprite.PacManSprites.DIRECTIONS","label":"type","properties":{"weight":1,"kind":"array","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"6bccecc538c7f1634fc328e028ad4c54","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)"}},{"data":{"id":"c23ddd302c62133d335c6e919ae8903b","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game).game"}},{"data":{"id":"f11482ededa095ab26daaeab9d0ecc09","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).x"}},{"data":{"id":"f73a84f3db0762b395530d52d3b0a1bb","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter"}},{"data":{"id":"b0434eb2e9d65fab4acb6104924fac75","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findNearest(java.lang.Class,nl.tudelft.jpacman.board.Square)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"49dc3b29f503382ad664e0cc1a47c0a8","source":"nl.tudelft.jpacman.Launcher.getBoardFactory()","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory"}},{"data":{"id":"0319ebf70ee26afb7420cdcb1daee39d","source":"nl.tudelft.jpacman.npc.ghost.GhostColor.CYAN","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor"}},{"data":{"id":"cbabce308615c767c92751e9becf67e9","source":"nl.tudelft.jpacman.level.Level.remainingPellets()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.squareAt(int,int)"}},{"data":{"id":"33fb80931e3130b84c86d7a9dede33e8","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).loop"}},{"data":{"id":"57ddd902180d020852dc9688ada3c8a6","source":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel"}},{"data":{"id":"33e3381f87a77529f25cd03f417339dc","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collider"}},{"data":{"id":"061e2c4babcb5d60a1181daa74554a4b","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.update()"}},{"data":{"id":"7953e1bc7314acac4782ab7ab9a0f55c","source":"nl.tudelft.jpacman.npc.ghost.Inky.INTERVAL_VARIATION","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"e327122a7925761e4796108a98574eaf","source":"nl.tudelft.jpacman.game.Game.isInProgress()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"94dcad1d9bfd1b7ad161d1314ae91cbb","source":"nl.tudelft.jpacman.points.PointCalculatorLoader","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.getCalculatorClassName()"}},{"data":{"id":"a334101f11ac1523338f6aaa82edea89","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).x"}},{"data":{"id":"f9ce63356a3edc8624289d64b86d63b1","source":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.withinImage(int,int).x"}},{"data":{"id":"b3078f7694d3dcde7c42e5b1fcb36e71","source":"nl.tudelft.jpacman.board","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"3d8c1b6768f89f2e1ac49d10866a892e","source":"nl.tudelft.jpacman.level.Player","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.sprites"}},{"data":{"id":"dc4b6f8121c8f1fd303913e52ed3daec","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"c1d344251ef9d10e803de5b1933bc628","source":"nl.tudelft.jpacman.Launcher.makeGame()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"2fd4da00fa4153052da0d88fe7f37c0d","source":"nl.tudelft.jpacman.board.BoardFactory.nl.tudelft.jpacman.board.BoardFactory(nl.tudelft.jpacman.sprite.PacManSprites)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory"}},{"data":{"id":"30234e4fb4d047e91c36b46db5858c98","source":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"4bc2a82f947cc8c1e5a18ca17380577f","source":"nl.tudelft.jpacman.npc.ghost.Pinky","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()"}},{"data":{"id":"5de1631029996e060439f25336db2d9e","source":"nl.tudelft.jpacman.Launcher.getPlayerFactory()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSpriteStore()"}},{"data":{"id":"3f8590aa530f8dda86dcfaaa9e43f57f","source":"nl.tudelft.jpacman.npc.ghost.Clyde","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"8ebcd6d617b53b86ee3e79e6f63b3411","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask.nl.tudelft.jpacman.level.Level$NpcMoveTask(java.util.concurrent.ScheduledExecutorService,nl.tudelft.jpacman.npc.Ghost).npc"}},{"data":{"id":"55ff9dd86140c366d6da543e5c6f2290","source":"nl.tudelft.jpacman.level.Level.remainingPellets()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getWidth()"}},{"data":{"id":"b05572da9629cc0a0fbb4b44e35071ee","source":"nl.tudelft.jpacman.npc.ghost.Inky.nextAiMove()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"8eb382059ac72bd0be3e5d532ff3d120","source":"nl.tudelft.jpacman.level.Player","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.isAlive()"}},{"data":{"id":"dbd056d184bb2118cb36bb843d9a387d","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.hasSquare()"}},{"data":{"id":"b2f9bbf2c8e57030d553af5b02a13f57","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.io.InputStream)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"33261c1f4cb97cd931054f1c541027a4","source":"nl.tudelft.jpacman.sprite.PacManSprites.getPacmanSprites()","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"033757657fc6fb47fd89d8adf45eb665","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap","label":"specializes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap"}},{"data":{"id":"814694b317a1692fb29af031995f8336","source":"nl.tudelft.jpacman.npc.ghost.GhostColor","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor.CYAN"}},{"data":{"id":"63b03ee75b65d31184e35c9b67673cfc","source":"nl.tudelft.jpacman.sprite.Sprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)"}},{"data":{"id":"ed8007667b0518fcefcf3684afddfc00","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel"}},{"data":{"id":"210da441f0b2a3ef0c290c97acfd0c7d","source":"nl.tudelft.jpacman.points.PointCalculatorLoader.load()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator"}},{"data":{"id":"980b52d5b00dbddfc1fdc35e0a07faef","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getPlayerFactory()"}},{"data":{"id":"2eb783afa69048922fc90be464c75389","source":"nl.tudelft.jpacman.level.Level.remainingPellets()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getOccupants()"}},{"data":{"id":"769159e9867198f6a8e9060f37b30c41","source":"nl.tudelft.jpacman.sprite.ImageSprite.newImage(int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"7a3afb80146cf4bd4ef4c92206d45946","source":"nl.tudelft.jpacman.level.Player","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.killer"}},{"data":{"id":"474d8d7e618204ff3b42918ac7648383","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.parseMap(java.lang.String)"}},{"data":{"id":"b6d1b015fa453dbbf4fc63b77688593a","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)"}},{"data":{"id":"9c537a716df8bcb5b82768f7ca4f8ce6","source":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite).points"}},{"data":{"id":"b6cf66426133b4e4731291a46861aaaf","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.isAccessibleTo(nl.tudelft.jpacman.board.Unit).unit","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit"}},{"data":{"id":"988c1ba334496f1ac5a7726dad41644e","source":"nl.tudelft.jpacman.board.BoardFactory.createGround()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"2cb0b0e7e6a3d860deb8102792b14294","source":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.nl.tudelft.jpacman.board.Direction(int,int).deltaX"}},{"data":{"id":"0387425945ec3353b1c2fe31bf27a44e","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).height"}},{"data":{"id":"b1a856d0bcdb6f27f3ed301ab944b527","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"a68c643ed021f07aff1f12fc98c3f538","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).width","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"4cec186394f89ac9e183afff2693f678","source":"nl.tudelft.jpacman.board.Square.neighbours","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"577850cb7f70981b05bfd701d1a62487","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.split(int,int,int,int)"}},{"data":{"id":"55e9c1bdc9daa05f70e96aca0f4176fc","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.nl.tudelft.jpacman.sprite.PacManSprites()"}},{"data":{"id":"bda9d94b4ba4f83f2dfc039bf34983a7","source":"nl.tudelft.jpacman.board.Direction","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.getDeltaX()"}},{"data":{"id":"297105316c02977c337c8c8a1ceec41b","source":"nl.tudelft.jpacman.ui.PacKeyListener.keyPressed(java.awt.event.KeyEvent)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action.doAction()"}},{"data":{"id":"348c72e7daf81be6a6c43e1b1d39981d","source":"nl.tudelft.jpacman.ui.ScorePanel.scoreLabels","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"bba1ce44ba8ad45ba482579d0271441f","source":"nl.tudelft.jpacman.ui.BoardPanel.nl.tudelft.jpacman.ui.BoardPanel(nl.tudelft.jpacman.game.Game).game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"d93c2fca1f80a89083e6a4ca9a1e9575","source":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory).levelFactory"}},{"data":{"id":"a28ccdca4789b303d2d65175e5fc4cc2","source":"nl.tudelft.jpacman.ui.ScorePanel","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.serialVersionUID"}},{"data":{"id":"8c830e57bd5def86de1d97d8c79df0ca","source":"nl.tudelft.jpacman.board.Square.neighbours","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"a27ce03a843e2d599a57195caae5cfcc","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.draw(java.awt.Graphics,int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.update()"}},{"data":{"id":"746f84792c83dd05f4cba18ac02da7fd","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionMap"}},{"data":{"id":"32e84eb44ce38debac22334e5acde7af","source":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory).levelFactory","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory"}},{"data":{"id":"a4ecbc582de5240124d0a1ea8525f19f","source":"nl.tudelft.jpacman.game.Game.move(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"f656c39c583a56f011fb6ef63582a9eb","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Pinky.nl.tudelft.jpacman.npc.ghost.Pinky(java.util.Map).spriteMap"}},{"data":{"id":"fcd32fede6395342b313d65652056a09","source":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][]).grid"}},{"data":{"id":"34000df3a098935f3c6e2f9f067cb8fa","source":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction).unit"}},{"data":{"id":"659f96210bd64193dde4f4dc0ada3316","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.animating"}},{"data":{"id":"05936abb99d4b5b2092b8a834c88b01a","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.isAccessibleTo(nl.tudelft.jpacman.board.Unit)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"8b9cf770d7ad8b1371bf4144fd3a2ddf","source":"nl.tudelft.jpacman.npc.Ghost.randomMove()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"55eb339ca93d94d32a59bcb8408f5523","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.remainingPellets()"}},{"data":{"id":"1f28cca06bc2073db2eaf3341061b9bd","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).c"}},{"data":{"id":"1e2a1c559ff3754f06eb41dbf9b8c7d2","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite"}},{"data":{"id":"d37e1ad89efc4671f0a025083a2ff32e","source":"nl.tudelft.jpacman.level.PlayerCollisions.ghostColliding(nl.tudelft.jpacman.npc.Ghost,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"873b5cdc4b5d5db095b1d222ee06567f","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.nextAiMove()"}},{"data":{"id":"8e27100966c3ec16257613ef78aced38","source":"nl.tudelft.jpacman.npc.ghost.Inky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.MOVE_INTERVAL"}},{"data":{"id":"ba59ede6c3b889b29ea72e0cec3a2ea0","source":"nl.tudelft.jpacman.ui.ScorePanel.setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel.setScoreFormatter(nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).scoreFormatter"}},{"data":{"id":"70d4d72329fd0f11ed99cbf227059b67","source":"nl.tudelft.jpacman.level.Level.isInProgress()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"765facb0d4980011f268368ed8219237","source":"nl.tudelft.jpacman.game","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.SinglePlayerGame"}},{"data":{"id":"a0ac2fc67e1c01a3e24a4862e86de90a","source":"nl.tudelft.jpacman.Launcher.getLevelFactory()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.loadPointCalculator()"}},{"data":{"id":"f436287485d1b1f293db61ffc7aff5a5","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.getMostSpecificClass(java.util.Map,java.lang.Class).key"}},{"data":{"id":"46d5d349f347ffa0203fdc6bada6c9f3","source":"nl.tudelft.jpacman.Launcher.launch()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder.build(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"df55b9d8f5b262bbd14d478cc58891a8","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit).collidee"}},{"data":{"id":"2da9d4130b0864e0e7c21dc77f5f8089","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.nl.tudelft.jpacman.ui.PacManUiBuilder()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUiBuilder"}},{"data":{"id":"1457279555d3111d9fc3541f26dc6270","source":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost.DELAY","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"long"}},{"data":{"id":"4d0076d6c06bc076fd07706624ef127e","source":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getPacManDeathAnimation()"}},{"data":{"id":"8cb17c091cdf80a0bede085d58c2c8ff","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getHeight()"}},{"data":{"id":"c52ad6c863fee592796e21be31f0c1d0","source":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.nl.tudelft.jpacman.board.Unit()"}},{"data":{"id":"b48fb82f662957215ba6e217f168a5e0","source":"nl.tudelft.jpacman.level.PlayerCollisions","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost)"}},{"data":{"id":"6f82d89ef57a8efb77d14a9b18da397f","source":"nl.tudelft.jpacman.sprite.PacManSprites","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.SPRITE_SIZE"}},{"data":{"id":"ecacd4519d498180b988f1e73d4efa72","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).parent"}},{"data":{"id":"1bd3f4757d69e3fb978f6215f7da4a0f","source":"nl.tudelft.jpacman.level.Level.getBoard()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board"}},{"data":{"id":"8fbdae6fbecffe9b321701bca3ed8666","source":"nl.tudelft.jpacman.ui.PacKeyListener.nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener"}},{"data":{"id":"269e04747b03229d4b9f9523e730b95d","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.update()"}},{"data":{"id":"c074b6b6041809a00bc5dd8203cd2340","source":"nl.tudelft.jpacman.board.BoardFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory.createBoard(nl.tudelft.jpacman.board.Square[][])"}},{"data":{"id":"02487c1b752c5b3df2b9591dde777545","source":"nl.tudelft.jpacman.sprite","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite"}},{"data":{"id":"db60d5dbff17b46697f102871a7df02e","source":"nl.tudelft.jpacman.sprite","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"00e76e29e59adfa348cd7227534bb0b8","source":"nl.tudelft.jpacman.npc.ghost.Inky","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Inky.INTERVAL_VARIATION"}},{"data":{"id":"421736d4fa6bd8dff83b07c01c7da945","source":"nl.tudelft.jpacman.level.PlayerFactory.nl.tudelft.jpacman.level.PlayerFactory(nl.tudelft.jpacman.sprite.PacManSprites)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory"}},{"data":{"id":"db6110ea14fc24831fa0fad42d1e3528","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"d12c9654b8f6e76a3ca88c93ee1312f6","source":"nl.tudelft.jpacman.Launcher.moveTowardsDirection(nl.tudelft.jpacman.board.Direction)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getSinglePlayer(nl.tudelft.jpacman.game.Game)"}},{"data":{"id":"0fd84fffc4e99edc2f59ea8249cadf6e","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).node"}},{"data":{"id":"d3ca4c396a552c239247f3e4dc805a4d","source":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.loadSprite(java.lang.String).resource"}},{"data":{"id":"0bd0ad3e67892ddbb64ce85bec258e9c","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()"}},{"data":{"id":"5e277b9d63e6a389017a749eeb13ca44","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).square","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"6cff3ac49f795cfdc6ab4a08e96d3710","source":"nl.tudelft.jpacman.ui.PacManUI.serialVersionUID","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"long"}},{"data":{"id":"7df3417156f22dcda8609486c6192756","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createInky()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"d22c021e225b1c9f1b4cbf33acdb8987","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.getHeight()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"cf7a9a96268cf1d14a4c5ce7efc995fc","source":"nl.tudelft.jpacman.level.Player.addPoints(int).points","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"e11b33e7a3e7a00dad72f1d89ea5408c","source":"nl.tudelft.jpacman.board.Board.nl.tudelft.jpacman.board.Board(nl.tudelft.jpacman.board.Square[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.invariant()"}},{"data":{"id":"2bac88ba17c1db836588a8afdf4cb9b3","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite"}},{"data":{"id":"00ee3e2e1bcbe61801374ba1d2ae4187","source":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getDirection()"}},{"data":{"id":"946ea75bb3ebbb1b76b90fb807610157","source":"nl.tudelft.jpacman.npc.ghost","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node"}},{"data":{"id":"a46ccd7638947a9314d5f48811d1e26a","source":"nl.tudelft.jpacman.sprite.AnimatedSprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean)"}},{"data":{"id":"af242b57ac2232ed3c760971dbde8302","source":"nl.tudelft.jpacman.game.SinglePlayerGame.player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"74be11c99c427a7d441d846852c7b052","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel"}},{"data":{"id":"3e7837d55a2cb46fadc775db4822be6b","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).height","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"3bcb40d87abf319a8029f2de964838cf","source":"nl.tudelft.jpacman.level.MapParser.parseMap(char[][])","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.createLevel(nl.tudelft.jpacman.board.Board,java.util.List,java.util.List)"}},{"data":{"id":"705ce9b0c571d42e462e934506cfd3c0","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator)"}},{"data":{"id":"883d93fc8e461419146d70a3e86c1a93","source":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.remove(nl.tudelft.jpacman.board.Unit).occupant"}},{"data":{"id":"f6a05f8dddab882974ac46bc70aa2a40","source":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).player"}},{"data":{"id":"af02bb0a09b63b76765573b2a8ca2e99","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostFactory.nl.tudelft.jpacman.npc.ghost.GhostFactory(nl.tudelft.jpacman.sprite.PacManSprites).spriteStore"}},{"data":{"id":"87bfc5a7c43408da53583e1edc21c70f","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getSquare()"}},{"data":{"id":"48ae7729633058f995c6bc97220f89a6","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"45861a210ff2a4bc18afe4e09197bd61","source":"nl.tudelft.jpacman.level.MapParser","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.MapParser.nl.tudelft.jpacman.level.MapParser(nl.tudelft.jpacman.level.LevelFactory,nl.tudelft.jpacman.board.BoardFactory)"}},{"data":{"id":"85c8ecc70da57b594188b8016180b21e","source":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square).square","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"f6ebdc1fafca06b85b8931b1341d7828","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler).symetric"}},{"data":{"id":"b9e8c0b2b5af8c0c4d8f44d86b7e334b","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.nl.tudelft.jpacman.npc.ghost.Navigation$Node(nl.tudelft.jpacman.board.Direction,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.npc.ghost.Navigation$Node).square","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"dfaeeba6a5dd06994fa25c158c9a84a1","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.Action"}},{"data":{"id":"cad7961b580d0b28a00bf683acd0ffe0","source":"nl.tudelft.jpacman.board.Unit.squaresAheadOf(int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"075ad04d4d0e57ddaacf9cc2c81b4eab","source":"nl.tudelft.jpacman.level.LevelFactory","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory.CLYDE"}},{"data":{"id":"88e9b6d2cb45b742e1e962ed92996141","source":"nl.tudelft.jpacman.board.BoardFactory$Ground.nl.tudelft.jpacman.board.BoardFactory$Ground(nl.tudelft.jpacman.sprite.Sprite)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.BoardFactory$Ground"}},{"data":{"id":"1e8907d547f174a022ea4f1ac393d0e6","source":"nl.tudelft.jpacman.board.Unit.getSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"b6d4b95ae889ccf4578cbf020a5f428f","source":"nl.tudelft.jpacman.npc.Ghost","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost.getInterval()"}},{"data":{"id":"1b598907ca55df65c74a1dd8b379a878","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask.run()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.move(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"bcd13ab66e5bdbc2d20da61290906d07","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"returnType","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"0271e44197e2467549df7e99f9e6e7c3","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.defaultCollisions()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculator.consumedAPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)"}},{"data":{"id":"f8ccc451d7595c54a4b94180fce85e58","source":"nl.tudelft.jpacman.board.Direction","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction.WEST"}},{"data":{"id":"a79e95e17a44d5e6f65ee1ad36c78419","source":"nl.tudelft.jpacman.board.Square","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.isAccessibleTo(nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"635e30ed14c9df496ef3ae16b9c8e4a4","source":"nl.tudelft.jpacman.level.Player","label":"hasVariable","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player.deathSprite"}},{"data":{"id":"5f22dec4de0ea00810146fd5c979eb22","source":"nl.tudelft.jpacman.npc.Ghost.getInterval()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"long"}},{"data":{"id":"d630bea919c280faf72cac192aaf64cd","source":"nl.tudelft.jpacman.Launcher.getGameFactory()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.getPlayerFactory()"}},{"data":{"id":"839b05033d946eed7054bb7a99058dcc","source":"nl.tudelft.jpacman.board.Board","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.squareAt(int,int)"}},{"data":{"id":"508248c71122de7750876364d6c9d963","source":"nl.tudelft.jpacman.sprite.SpriteStore.createAnimatedSprite(nl.tudelft.jpacman.sprite.Sprite,int,int,boolean).loop","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"0f38193bfa19d2d25862b88bdffa1d78","source":"nl.tudelft.jpacman.Launcher","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.dispose()"}},{"data":{"id":"546d06244d31e1d14a843189c5931dc6","source":"nl.tudelft.jpacman.points.PointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"fdaec44b0dee8b7d0f2a54a77c8048d5","source":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.playerVersusPellet(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.level.Pellet).pellet"}},{"data":{"id":"672f4410cae045a1d4434ad3190df207","source":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.draw(java.awt.Graphics,int,int,int,int).graphics"}},{"data":{"id":"d97194c89d8cbc9bc1cf761f6b9a9a77","source":"nl.tudelft.jpacman.sprite","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"291e0ab8c8771b2b0e1f48439270e378","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.scoreFormatter","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"a5650842d044d3bc3881bf425c52e8db","source":"nl.tudelft.jpacman.board.BoardFactory$Wall.background","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"4930d0197e7308e097b29e89a3fea7ff","source":"nl.tudelft.jpacman.board.Unit.leaveSquare()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.invariant()"}},{"data":{"id":"7772f8a96fdd0522f2c1273a1b3dbb8e","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.animationDelay","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"33c3eae00ec40e7f55ce8bd5ba9da373","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter"}},{"data":{"id":"09c3b1dd5891959504996b94aa9adcdb","source":"nl.tudelft.jpacman.board.Board","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.withinBorders(int,int)"}},{"data":{"id":"19725ea3821e4de5a999266af073ffae","source":"nl.tudelft.jpacman.level.Level$NpcMoveTask","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$NpcMoveTask.run()"}},{"data":{"id":"95b02c280fdc9472e647b4eee421245e","source":"nl.tudelft.jpacman.npc.ghost.Navigation.findUnitInBoard(java.lang.Class,nl.tudelft.jpacman.board.Board)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Board.getWidth()"}},{"data":{"id":"37a5a79864f7f35ec2857a859676dc64","source":"nl.tudelft.jpacman.npc.ghost.GhostFactory.createClyde()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.getGhostSprite(nl.tudelft.jpacman.npc.ghost.GhostColor)"}},{"data":{"id":"c01dc007daff3da05fd27cb976598bf8","source":"nl.tudelft.jpacman.level.Level.observers","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver"}},{"data":{"id":"31fab76a1b62783a7922f5490bc22bd7","source":"nl.tudelft.jpacman.ui.PacManUiBuilder.addButton(java.lang.String,nl.tudelft.jpacman.ui.Action).caption","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"9e84985b6ac0237e4b5e938e0413cc8a","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.addNewTargets(nl.tudelft.jpacman.board.Unit,java.util.List,java.util.Set,nl.tudelft.jpacman.npc.ghost.Navigation$Node,nl.tudelft.jpacman.board.Square)"}},{"data":{"id":"1fa9b8b1143bab8dc6e0801d279ac437","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"bf6a508bb0e83677a4729290bc4e7aaa","source":"nl.tudelft.jpacman.level.CollisionInteractionMap.onCollision(java.lang.Class,java.lang.Class,boolean,nl.tudelft.jpacman.level.CollisionInteractionMap$CollisionHandler)","label":"instantiates","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.CollisionInteractionMap$InverseCollisionHandler"}},{"data":{"id":"23b7900e319453d154609d4f6746714e","source":"nl.tudelft.jpacman.ui.BoardPanel.paint(java.awt.Graphics)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Board,java.awt.Graphics,java.awt.Dimension)"}},{"data":{"id":"2527dc07ca63be38cb0123b44ff66139","source":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation.shortestPath(nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Square,nl.tudelft.jpacman.board.Unit).to"}},{"data":{"id":"f62c9caeeb2848e8299e6d1651d180ce","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"5b11fb0e8678581cbab61f26371f7976","source":"nl.tudelft.jpacman.board.Unit","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.leaveSquare()"}},{"data":{"id":"3cdd41240ca2ea3764629ab6b408bbb2","source":"nl.tudelft.jpacman.level.LevelFactory.nl.tudelft.jpacman.level.LevelFactory(nl.tudelft.jpacman.sprite.PacManSprites,nl.tudelft.jpacman.npc.ghost.GhostFactory,nl.tudelft.jpacman.points.PointCalculator)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory"}},{"data":{"id":"9624ea10e6569b80435d9b4855b6a6d4","source":"nl.tudelft.jpacman.points.DefaultPointCalculator.collidedWithAGhost(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.npc.Ghost).ghost","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"c2e45aea7243059e6922ac1e3cb57798","source":"nl.tudelft.jpacman.level.PlayerFactory.sprites","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites"}},{"data":{"id":"114cffe7f1552826e7571ad903328fc7","source":"nl.tudelft.jpacman.board.Board.getWidth()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"cc93847fecaa9a51b3205ae3d5dedfee","source":"nl.tudelft.jpacman.npc.ghost.Blinky.nextAiMove()","label":"invokes","properties":{"weight":3,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"058768fba8c1de54c8c40d32714f147e","source":"nl.tudelft.jpacman.npc.ghost.Inky.nl.tudelft.jpacman.npc.ghost.Inky(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"633cbd521bf80a594a2e08c4b468cc37","source":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.ImageSprite.split(int,int,int,int).y"}},{"data":{"id":"c1ffc96bc8cc887ad9bbc34bd4ed3d94","source":"nl.tudelft.jpacman.level.MapParser.addSquare(nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List,int,int,char).ghosts","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"236542e1340ef611ca40b5c7ecaca51b","source":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite.draw(java.awt.Graphics,int,int,int,int).y"}},{"data":{"id":"c1be8a7b819b7cced91c5862e5e5a481","source":"nl.tudelft.jpacman.level.Pellet","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Pellet.nl.tudelft.jpacman.level.Pellet(int,nl.tudelft.jpacman.sprite.Sprite)"}},{"data":{"id":"568cfeba92764ab6059ebfc15b5a8975","source":"nl.tudelft.jpacman.level","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.LevelFactory$RandomGhost"}},{"data":{"id":"0eef28e651c8e5089f90bdd079d76eb3","source":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.PacmanConfigurationException.nl.tudelft.jpacman.PacmanConfigurationException(java.lang.String).message"}},{"data":{"id":"6fd761fa5657d66c31b1637ca33edd19","source":"nl.tudelft.jpacman.npc.ghost.GhostColor","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.GhostColor.nl.tudelft.jpacman.npc.ghost.GhostColor()"}},{"data":{"id":"776db1b215e2a532280c8dd53da03982","source":"nl.tudelft.jpacman.npc.ghost.Inky.followPath(java.util.List,nl.tudelft.jpacman.board.Square)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square"}},{"data":{"id":"c72da63322f35dde04cb660179a93518","source":"nl.tudelft.jpacman.npc.ghost.Pinky.nextAiMove()","label":"invokes","properties":{"weight":2,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Unit.getSquare()"}},{"data":{"id":"4e900384d6cc7851b4a8a0a97dd57839","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSprite()"}},{"data":{"id":"9b7e9302b841ddddb4518fd4db8ad11f","source":"nl.tudelft.jpacman.game.Game","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game.isInProgress()"}},{"data":{"id":"b9b6ddb1fc644cd84adaa782d665cd37","source":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.DefaultPlayerInteractionMap.collide(nl.tudelft.jpacman.board.Unit,nl.tudelft.jpacman.board.Unit)"}},{"data":{"id":"390fcaa55ad11cd676a77d58e9efe8b5","source":"nl.tudelft.jpacman.npc.ghost.Navigation$Node","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Navigation$Node.getDirection()"}},{"data":{"id":"80748e3aa0d838c600c73e35000fec79","source":"nl.tudelft.jpacman.level.MapParser.parseMap(java.util.List)","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level"}},{"data":{"id":"310a8cd8dd9a9f52096cf4e14d163cb0","source":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerCollisions.pelletColliding(nl.tudelft.jpacman.level.Pellet,nl.tudelft.jpacman.board.Unit).pellet"}},{"data":{"id":"6aee36234517fddff525791b2794a1cb","source":"nl.tudelft.jpacman.Launcher.makeGame()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.Launcher.makeLevel()"}},{"data":{"id":"40e231d48ac9991c345aae859a3f7197","source":"nl.tudelft.jpacman.level.Level","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level.startNPCs()"}},{"data":{"id":"3f2f868c54fed2d3a35915fbd90a2e7b","source":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int).y"}},{"data":{"id":"099c363ec8173d4025b8d3d029d54494","source":"nl.tudelft.jpacman.points.PointCalculatorLoader.loadClassFromFile()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader.getCalculatorClassName()"}},{"data":{"id":"debf2626a3d7050643d793d1e1cf5634","source":"nl.tudelft.jpacman.level.LevelFactory.BLINKY","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"1034e1268c9b989a12b513ebca6da8a0","source":"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"f6d14b2a26e652f6663ec3365f1b2502","source":"nl.tudelft.jpacman.level.Player.score","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"bc315ad34a6d659ed3975eeecbc0f083","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.currentSprite()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.Sprite"}},{"data":{"id":"5f67cf9263301790b305fd784a07e59b","source":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.PacManSprites.directionSprite(java.lang.String,int).frames"}},{"data":{"id":"836d1575ddc68cefce606080fe9fc855","source":"nl.tudelft.jpacman.sprite.EmptySprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.split(int,int,int,int)"}},{"data":{"id":"625abd89b59204aa3dbe5da2fe538719","source":"nl.tudelft.jpacman.ui.PacKeyListener","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacKeyListener.nl.tudelft.jpacman.ui.PacKeyListener(java.util.Map)"}},{"data":{"id":"c05d86e5155674986a5c586dfb9a42a5","source":"nl.tudelft.jpacman.ui","label":"contains","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI"}},{"data":{"id":"0d267d7b4153b8aaad53b378abfc08ab","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getOccupants()"}},{"data":{"id":"0f5b8c519168d5c2d4f7c18900b4299b","source":"nl.tudelft.jpacman.level.Level.startSquareIndex","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"99caed269361a7271b57038c3c31434c","source":"nl.tudelft.jpacman.Launcher.game","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.game.Game"}},{"data":{"id":"34c50f886f94e6ce4a391c1446b5e67a","source":"nl.tudelft.jpacman.npc.Ghost.randomMove()","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Square.getSquareAt(nl.tudelft.jpacman.board.Direction)"}},{"data":{"id":"40ead46a2c5ea1d5fd2d7e2e9d6e9d16","source":"nl.tudelft.jpacman.board.Unit.hasSquare()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"545b8643f5b929a7b1f91a7e63973d3f","source":"nl.tudelft.jpacman.sprite.EmptySprite","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.EmptySprite.nl.tudelft.jpacman.sprite.EmptySprite()"}},{"data":{"id":"0df7893a3f2f0484e25151564fedb110","source":"nl.tudelft.jpacman.npc.ghost.Clyde.nl.tudelft.jpacman.npc.ghost.Clyde(java.util.Map).spriteMap","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.board.Direction"}},{"data":{"id":"62c4390298b6891cea664d5870cb2adb","source":"nl.tudelft.jpacman.level.LevelFactory.ghostIndex","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"5f7720e2b2b88880af7fee82789a7d40","source":"nl.tudelft.jpacman.points.PointCalculatorLoader.nl.tudelft.jpacman.points.PointCalculatorLoader()","label":"returnType","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.points.PointCalculatorLoader"}},{"data":{"id":"f7ca17a60614a5e31cf370860bcca7f7","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).buttons","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"java.lang.String"}},{"data":{"id":"8aa9d1d67b0b57177fc809c6b407bea5","source":"nl.tudelft.jpacman.npc.ghost.Clyde","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.ghost.Clyde.nextAiMove()"}},{"data":{"id":"77ae71566cf5786a904fdfb6d710fae6","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.AnimatedSprite.split(int,int,int,int).y"}},{"data":{"id":"88139485baf93ad25a34dd03df495e3e","source":"nl.tudelft.jpacman.sprite.EmptySprite.draw(java.awt.Graphics,int,int,int,int).x","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"f28b535ebf913f82072b2f4955120807","source":"nl.tudelft.jpacman.level.Level$LevelObserver","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Level$LevelObserver.levelLost()"}},{"data":{"id":"3ac7a585e8007809ef81511540864936","source":"nl.tudelft.jpacman.sprite.AnimatedSprite.setAnimating(boolean).isAnimating","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"boolean"}},{"data":{"id":"166920cb9f7168b2fb7dff825d066027","source":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.PacManUI.nl.tudelft.jpacman.ui.PacManUI(nl.tudelft.jpacman.game.Game,java.util.Map,java.util.Map,nl.tudelft.jpacman.ui.ScorePanel$ScoreFormatter).keyMappings"}},{"data":{"id":"dbbc0a389d0baba934e4e892f208cc33","source":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String)","label":"hasParameter","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.sprite.SpriteStore.loadSpriteFromResource(java.lang.String).resource"}},{"data":{"id":"30824fb6982f5da6e4e031725176b4f3","source":"nl.tudelft.jpacman.level.MapParser.makeGrid(char[][],int,int,nl.tudelft.jpacman.board.Square[][],java.util.List,java.util.List).ghosts","label":"type","properties":{"weight":1,"kind":"type argument","metaSrc":"source code"},"target":"nl.tudelft.jpacman.npc.Ghost"}},{"data":{"id":"114580e8d0efb0ae614c756b206b217c","source":"nl.tudelft.jpacman.game.GameFactory.createSinglePlayerGame(nl.tudelft.jpacman.level.Level,nl.tudelft.jpacman.points.PointCalculator)","label":"invokes","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.PlayerFactory.createPacMan()"}},{"data":{"id":"8dee87c06f639d3dbe9af31a66ab0c3f","source":"nl.tudelft.jpacman.ui.ScorePanel.serialVersionUID","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"long"}},{"data":{"id":"e8c8f0818211758aa851c884eb8d5335","source":"nl.tudelft.jpacman.points.PointCalculator.pacmanMoved(nl.tudelft.jpacman.level.Player,nl.tudelft.jpacman.board.Direction).player","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"nl.tudelft.jpacman.level.Player"}},{"data":{"id":"cf97a5b272863de18dfd7f938e21ddcd","source":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int).y","label":"type","properties":{"weight":1,"kind":"type","metaSrc":"source code"},"target":"int"}},{"data":{"id":"ca24d9e9f22c74a168f4038be597ad3c","source":"nl.tudelft.jpacman.ui.BoardPanel","label":"hasScript","properties":{"weight":1,"metaSrc":"source code"},"target":"nl.tudelft.jpacman.ui.BoardPanel.render(nl.tudelft.jpacman.board.Square,java.awt.Graphics,int,int,int,int)"}}]}}